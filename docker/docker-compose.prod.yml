version: '3.8'

services:
  pyerp:
    build:
      context: ..
      dockerfile: docker/Dockerfile.prod
    container_name: pyerp-prod
    restart: always
    ports:
      - "8050:8050"
      - "80:80"
    env_file:
      - ../config/env/.env.prod
    environment:
      - DJANGO_SETTINGS_MODULE=pyerp.settings.production
      - REDIS_URL=redis://localhost:6379/0
      # External PostgreSQL connection details
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT:-5432}
      - DB_NAME=${DB_NAME:-pyerp_testing}
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD}
      # Datadog APM configuration
      - DD_AGENT_HOST=datadog-agent
      - DD_TRACE_AGENT_PORT=8126
      - DD_SERVICE=pyerp
      - DD_ENV=production
      - DD_VERSION=1.0.0
    volumes:
      - pyerp_data:/app
    healthcheck:
      test: curl --fail http://localhost:8050/admin/ || exit 1
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      - datadog-agent

  datadog-agent:
    image: datadog/agent:latest
    container_name: datadog-agent
    restart: always
    environment:
      - DD_API_KEY=${DD_API_KEY}
      - DD_SITE=${DD_SITE:-datadoghq.com}
      - DD_APM_ENABLED=true
      - DD_LOGS_ENABLED=true
      - DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL=true
      - DD_PROCESS_AGENT_ENABLED=true
      - DD_DOCKER_LABELS_AS_TAGS={"com.docker.compose.service":"service_name"}
      - DD_TAGS=env:production service:pyerp
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - ./datadog.yaml:/etc/datadog-agent/datadog.yaml
    ports:
      - "8126:8126"  # APM trace agent
    healthcheck:
      test: ["CMD", "agent", "health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  pyerp_data:
version: '3.8'

services:
  db:
    image: postgres:15
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data/
    env_file:
      - ../.env.prod
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:7
    volumes:
      - redis_data_prod:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  web:
    build:
      context: ..
      dockerfile: docker/Dockerfile.prod
    env_file:
      - ../.env.prod
    environment:
      - DJANGO_SETTINGS_MODULE=pyerp.settings.production
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
      - log_volume:/app/logs
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  celery:
    build:
      context: ..
      dockerfile: docker/Dockerfile.prod
    command: celery -A pyerp worker -l INFO
    env_file:
      - ../.env.prod
    environment:
      - DJANGO_SETTINGS_MODULE=pyerp.settings.production
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - log_volume:/app/logs
    depends_on:
      - web
      - redis
      - db
    restart: unless-stopped

  celery-beat:
    build:
      context: ..
      dockerfile: docker/Dockerfile.prod
    command: celery -A pyerp beat -l INFO
    env_file:
      - ../.env.prod
    environment:
      - DJANGO_SETTINGS_MODULE=pyerp.settings.production
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - log_volume:/app/logs
    depends_on:
      - celery
      - redis
      - db
    restart: unless-stopped

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - static_volume:/var/www/static
      - media_volume:/var/www/media
    depends_on:
      - web
    restart: unless-stopped

volumes:
  postgres_data_prod:
  redis_data_prod:
  static_volume:
  media_volume:
  log_volume: 
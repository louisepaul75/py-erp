# Minimal Dockerfile - fallback option if the main one still fails
FROM python:3.13-slim

ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV DJANGO_SETTINGS_MODULE=pyerp.settings.production

WORKDIR /app

# Install only essential build dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    gcc \
    python3-dev \
    libpq-dev \
    default-libmysqlclient-dev \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements and install directly
COPY requirements/minimal.in /app/requirements/minimal.in
RUN pip install --upgrade pip && \
    pip install -r /app/requirements/minimal.in && \
    echo "Verifying Celery installation..." && \
    pip install celery redis django-celery-results django-celery-beat

# Copy application code
COPY . .

# Create necessary directories
RUN mkdir -p /app/static /app/media /app/logs

# Copy environment variables file
COPY docker/docker.env /app/.env

# Copy startup script
COPY docker/start.sh /app/start.sh

# Run as non-root user
RUN useradd -m appuser && \
    chown -R appuser:appuser /app && \
    chmod +x /app/start.sh
USER appuser

# Run with the startup script instead of directly calling gunicorn
CMD ["/app/start.sh"] 
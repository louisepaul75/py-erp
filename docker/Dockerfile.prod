# All-in-one Docker Image for pyERP
FROM python:3.12-slim

ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV DEBIAN_FRONTEND=noninteractive

# Install system dependencies
RUN apt-get update \
    && apt-get install -y --no-install-recommends \
        build-essential \
        curl \
        git \
        libpq-dev \
        netcat-traditional \
        supervisor \
        nginx \
        libffi-dev \
        libjpeg-dev \
        libxml2-dev \
        libxslt-dev \
        zlib1g-dev \
        libcairo2-dev \
        libpango1.0-dev \
        libgdk-pixbuf2.0-dev \
        shared-mime-info \
        libssl-dev \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Install Node.js
RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash - \
    && apt-get install -y nodejs \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Upgrade pip
RUN pip install --upgrade pip

# Copy requirements files
COPY requirements/ /app/requirements/

# Install production dependencies
RUN pip install --no-cache-dir -r /app/requirements/requirements.prod.txt

# Copy project code for dependency scanning
COPY . /app/

# Create directories and setup static files
RUN mkdir -p /app/staticfiles /app/pyerp/static /app/media /app/logs /app/data \
    && chmod +x /app/scripts/ensure_static_dirs.sh \
    && /app/scripts/ensure_static_dirs.sh \
    && chown -R root:root /app/staticfiles /app/pyerp/static /app/media /app/logs /app/data \
    && chmod -R 755 /app/staticfiles /app/pyerp/static /app/media /app/logs /app/data

# Set Django settings module for collectstatic
ARG DJANGO_SETTINGS_MODULE=pyerp.config.settings.production
ENV DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE}

# Collect static files
RUN python manage.py collectstatic --noinput --clear

# Configure Nginx
RUN mkdir -p /etc/nginx/ssl
COPY docker/nginx/conf.d/pyerp.conf /etc/nginx/sites-available/default
RUN ln -sf /dev/stdout /var/log/nginx/access.log \
    && ln -sf /dev/stderr /var/log/nginx/error.log \
    && mkdir -p /var/log/supervisor

# Copy supervisord configuration
COPY docker/supervisord.prod.conf /etc/supervisor/conf.d/supervisord.conf

# Expose port for Nginx
EXPOSE 80

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1

# Set up entrypoint
COPY docker/entrypoint.prod.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh

ENTRYPOINT ["/entrypoint.sh"]
CMD ["supervisord", "-c", "/etc/supervisor/conf.d/supervisord.conf"]
# Example local Docker environment file - copy to docker.local.env 
# DO NOT commit docker.local.env with real credentials to version control!

DJANGO_SETTINGS_MODULE=pyerp.settings.production
DEBUG=True
SECRET_KEY=local_dev_key_for_testing_only

# Using SQLite for local development without a database server
DATABASE_URL=sqlite:///app/db.sqlite3

# PostgreSQL configuration (uncomment and configure with your actual credentials to use PostgreSQL)
# DATABASE_URL=postgresql://postgres:password@postgres:5432/your_database
# DB_ENGINE=django.db.backends.postgresql
# DB_NAME=your_database
# DB_USER=postgres
# DB_PASSWORD=your_password
# DB_HOST=postgres
# DB_PORT=5432

# Note: Using PyMySQL as the MySQL adapter (pure Python implementation)
ALLOWED_HOSTS=localhost,127.0.0.1,*

# No Redis for local testing - using in-memory broker
REDIS_URL=memory://
CELERY_BROKER_URL=memory://
CELERY_RESULT_BACKEND=memory://

# Legacy 4D ERP Connection
LEGACY_ERP_HOST=
LEGACY_ERP_PORT=
LEGACY_ERP_USER=
LEGACY_ERP_PASSWORD=

# API Environment URLs
LEGACY_ERP_API_TEST=http://192.168.73.26:8090
LEGACY_ERP_API_LIVE=http://192.168.73.28:8080
# API Authentication for Legacy ERP API
LEGACY_API_USERNAME=your_api_username
LEGACY_API_PASSWORD=your_api_password 
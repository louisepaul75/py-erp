FROM python:3.13-slim

ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1

# Install system dependencies
RUN apt-get update \
    && apt-get install -y --no-install-recommends \
        gcc \
        python3-dev \
        libpq-dev \
        postgresql-client \
        netcat-traditional \
        wget \
        curl \
        # WeasyPrint dependencies
        libcairo2 \
        libpango-1.0-0 \
        libpangocairo-1.0-0 \
        libgdk-pixbuf2.0-0 \
        shared-mime-info \
        # Additional tools
        git \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Set work directory
WORKDIR /app

# Install pip-tools
RUN pip install --upgrade pip \
    && pip install pip-tools

# Copy requirements files and test script
COPY requirements/ /app/requirements/
COPY scripts/ /app/scripts/

# Make test script executable
RUN chmod +x /app/scripts/test_deps.py

# Run the test script to check each dependency individually
RUN python /app/scripts/test_deps.py /app/requirements/development.in || exit 1

# Alternative approach: try installing packages one by one
RUN pip install -r /app/requirements/production.in \
    && echo "Production dependencies installed successfully"

# Try installing each development tool separately
RUN pip install "django-debug-toolbar>=4.2.0,<4.3.0" && \
    pip install "ipython>=8.22.0,<8.23.0" && \
    pip install "ipdb>=0.13.0,<0.14.0" && \
    pip install "pytest>=7.4.0,<7.5.0" && \
    pip install "pytest-django>=4.7.0,<4.8.0" && \
    pip install "pytest-cov>=4.1.0,<4.2.0" && \
    pip install "coverage>=7.4.0,<7.5.0" && \
    pip install "pytest-xdist>=3.5.0,<3.6.0" && \
    pip install "pytest-sugar>=0.9.7,<0.10.0" && \
    pip install "factory-boy>=3.3.0,<3.4.0" && \
    pip install "faker>=24.0.0,<24.1.0"

# Install code quality tools separately
RUN pip install "black>=24.3.0,<24.4.0" && \
    pip install "flake8>=7.0.0,<7.1.0" && \
    pip install "mypy>=1.8.0,<1.9.0" && \
    pip install "isort>=5.13.0,<5.14.0" && \
    pip install "pre-commit>=3.6.0,<3.7.0" && \
    pip install "bandit>=1.7.0,<1.8.0" && \
    pip install "safety>=2.3.0,<2.4.0" && \
    pip install "django-stubs>=4.2.0,<4.3.0" && \
    pip install "djangorestframework-stubs>=3.14.0,<3.15.0"

# Install documentation tools separately
RUN pip install "mkdocs>=1.5.0,<1.6.0" && \
    pip install "mkdocs-material>=9.5.0,<9.6.0"

# Install development tools separately
RUN pip install "django-extensions>=3.2.0,<3.3.0" && \
    pip install "watchdog>=3.0.0,<3.1.0"

# Create directories for static and media files
RUN mkdir -p /app/static /app/media /app/logs

# Copy entrypoint script
COPY ./docker/entrypoint.sh /usr/local/bin/
RUN chmod +x /usr/local/bin/entrypoint.sh

# Run entrypoint script
ENTRYPOINT ["entrypoint.sh"]

# Default command
CMD ["python", "manage.py", "runserver", "0.0.0.0:8000"] 
{"created": 1742310228.607716, "duration": 2.1111011505126953, "exitcode": 0, "root": "/Users/joan/VSProjects/pyERP/tests", "environment": {}, "summary": {"passed": 188, "xfailed": 7, "total": 195, "collected": 195}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "core", "type": "Package"}]}, {"nodeid": "core/business/test_product_signals.py::TestCase", "outcome": "passed", "result": []}, {"nodeid": "core/business/test_product_signals.py::TestVariantProductSignals", "outcome": "passed", "result": [{"nodeid": "core/business/test_product_signals.py::TestVariantProductSignals::test_variant_product_pre_save_existing_created_at", "type": "TestCaseFunction", "lineno": 120}, {"nodeid": "core/business/test_product_signals.py::TestVariantProductSignals::test_variant_product_pre_save_existing_instance", "type": "TestCaseFunction", "lineno": 74}, {"nodeid": "core/business/test_product_signals.py::TestVariantProductSignals::test_variant_product_pre_save_no_parent_no_variant", "type": "TestCaseFunction", "lineno": 93}, {"nodeid": "core/business/test_product_signals.py::TestVariantProductSignals::test_variant_product_pre_save_parent_no_sku_no_legacy_id", "type": "TestCaseFunction", "lineno": 140}, {"nodeid": "core/business/test_product_signals.py::TestVariantProductSignals::test_variant_product_pre_save_parent_no_variant_code", "type": "TestCaseFunction", "lineno": 107}, {"nodeid": "core/business/test_product_signals.py::TestVariantProductSignals::test_variant_product_pre_save_sets_sku", "type": "TestCaseFunction", "lineno": 30}, {"nodeid": "core/business/test_product_signals.py::TestVariantProductSignals::test_variant_product_pre_save_sets_timestamps", "type": "TestCaseFunction", "lineno": 60}, {"nodeid": "core/business/test_product_signals.py::TestVariantProductSignals::test_variant_product_pre_save_with_existing_sku", "type": "TestCaseFunction", "lineno": 49}, {"nodeid": "core/business/test_product_signals.py::TestVariantProductSignals::test_variant_product_pre_save_with_parent_sku_none", "type": "TestCaseFunction", "lineno": 38}]}, {"nodeid": "core/business/test_product_signals.py", "outcome": "passed", "result": [{"nodeid": "core/business/test_product_signals.py::TestCase", "type": "UnitTestCase"}, {"nodeid": "core/business/test_product_signals.py::TestVariantProductSignals", "type": "UnitTestCase"}]}, {"nodeid": "core/business/test_product_validation.py::TestCase", "outcome": "passed", "result": []}, {"nodeid": "core/business/test_product_validation.py::TestProductValidation", "outcome": "passed", "result": [{"nodeid": "core/business/test_product_validation.py::TestProductValidation::test_sku_uniqueness_validation", "type": "Function", "lineno": 25}, {"nodeid": "core/business/test_product_validation.py::TestProductValidation::test_parent_variant_validation", "type": "Function", "lineno": 56}, {"nodeid": "core/business/test_product_validation.py::TestProductValidation::test_price_validation", "type": "Function", "lineno": 69}, {"nodeid": "core/business/test_product_validation.py::TestProductValidation::test_price_range_validation", "type": "Function", "lineno": 82}]}, {"nodeid": "core/business/test_product_validation.py::TestProductCategoryValidation", "outcome": "passed", "result": [{"nodeid": "core/business/test_product_validation.py::TestProductCategoryValidation::test_category_code_uniqueness", "type": "Function", "lineno": 99}]}, {"nodeid": "core/business/test_product_validation.py::TestProductImageValidation", "outcome": "passed", "result": [{"nodeid": "core/business/test_product_validation.py::TestProductImageValidation::test_image_url_validation", "type": "Function", "lineno": 134}, {"nodeid": "core/business/test_product_validation.py::TestProductImageValidation::test_primary_image_validation", "type": "Function", "lineno": 146}]}, {"nodeid": "core/business/test_product_validation.py::TestProductImportValidator", "outcome": "passed", "result": [{"nodeid": "core/business/test_product_validation.py::TestProductImportValidator::test_post_validate_row_duplicate_sku", "type": "TestCaseFunction", "lineno": 200}, {"nodeid": "core/business/test_product_validation.py::TestProductImportValidator::test_post_validate_row_parent_with_variant_code", "type": "TestCaseFunction", "lineno": 190}, {"nodeid": "core/business/test_product_validation.py::TestProductImportValidator::test_pre_validate_row_missing_sku_and_name", "type": "TestCaseFunction", "lineno": 170}, {"nodeid": "core/business/test_product_validation.py::TestProductImportValidator::test_pre_validate_row_with_alte_nummer", "type": "TestCaseFunction", "lineno": 181}, {"nodeid": "core/business/test_product_validation.py::TestProductImportValidator::test_validate_category_by_code", "type": "TestCaseFunction", "lineno": 410}, {"nodeid": "core/business/test_product_validation.py::TestProductImportValidator::test_validate_category_by_id", "type": "TestCaseFunction", "lineno": 427}, {"nodeid": "core/business/test_product_validation.py::TestProductImportValidator::test_validate_category_default", "type": "TestCaseFunction", "lineno": 458}, {"nodeid": "core/business/test_product_validation.py::TestProductImportValidator::test_validate_category_not_found", "type": "TestCaseFunction", "lineno": 444}, {"nodeid": "core/business/test_product_validation.py::TestProductImportValidator::test_validate_cost_price_invalid_preise", "type": "TestCaseFunction", "lineno": 379}, {"nodeid": "core/business/test_product_validation.py::TestProductImportValidator::test_validate_cost_price_negative", "type": "TestCaseFunction", "lineno": 402}, {"nodeid": "core/business/test_product_validation.py::TestProductImportValidator::test_validate_cost_price_numeric_conversion", "type": "TestCaseFunction", "lineno": 394}, {"nodeid": "core/business/test_product_validation.py::TestProductImportValidator::test_validate_cost_price_with_preise", "type": "TestCaseFunction", "lineno": 363}, {"nodeid": "core/business/test_product_validation.py::TestProductImportValidator::test_validate_list_price_invalid_preise", "type": "TestCaseFunction", "lineno": 292}, {"nodeid": "core/business/test_product_validation.py::TestProductImportValidator::test_validate_list_price_negative", "type": "TestCaseFunction", "lineno": 307}, {"nodeid": "core/business/test_product_validation.py::TestProductImportValidator::test_validate_list_price_with_preise", "type": "TestCaseFunction", "lineno": 276}, {"nodeid": "core/business/test_product_validation.py::TestProductImportValidator::test_validate_name_missing", "type": "TestCaseFunction", "lineno": 259}, {"nodeid": "core/business/test_product_validation.py::TestProductImportValidator::test_validate_name_too_long", "type": "TestCaseFunction", "lineno": 267}, {"nodeid": "core/business/test_product_validation.py::TestProductImportValidator::test_validate_name_with_bezeichnung", "type": "TestCaseFunction", "lineno": 251}, {"nodeid": "core/business/test_product_validation.py::TestProductImportValidator::test_validate_sku_as_parent", "type": "TestCaseFunction", "lineno": 241}, {"nodeid": "core/business/test_product_validation.py::TestProductImportValidator::test_validate_sku_empty", "type": "TestCaseFunction", "lineno": 223}, {"nodeid": "core/business/test_product_validation.py::TestProductImportValidator::test_validate_sku_with_alte_nummer", "type": "TestCaseFunction", "lineno": 215}, {"nodeid": "core/business/test_product_validation.py::TestProductImportValidator::test_validate_sku_with_variant", "type": "TestCaseFunction", "lineno": 231}, {"nodeid": "core/business/test_product_validation.py::TestProductImportValidator::test_validate_wholesale_price_invalid_preise", "type": "TestCaseFunction", "lineno": 332}, {"nodeid": "core/business/test_product_validation.py::TestProductImportValidator::test_validate_wholesale_price_negative", "type": "TestCaseFunction", "lineno": 355}, {"nodeid": "core/business/test_product_validation.py::TestProductImportValidator::test_validate_wholesale_price_numeric_conversion", "type": "TestCaseFunction", "lineno": 347}, {"nodeid": "core/business/test_product_validation.py::TestProductImportValidator::test_validate_wholesale_price_with_preise", "type": "TestCaseFunction", "lineno": 315}]}, {"nodeid": "core/business/test_product_validation.py::TestValidateProductModel", "outcome": "passed", "result": [{"nodeid": "core/business/test_product_validation.py::TestValidateProductModel::test_validate_product_model_invalid_fields", "type": "TestCaseFunction", "lineno": 500}, {"nodeid": "core/business/test_product_validation.py::TestValidateProductModel::test_validate_product_model_invalid_parent_relationship", "type": "TestCaseFunction", "lineno": 512}, {"nodeid": "core/business/test_product_validation.py::TestValidateProductModel::test_validate_product_model_valid", "type": "TestCaseFunction", "lineno": 481}]}, {"nodeid": "core/business/test_product_validation.py", "outcome": "passed", "result": [{"nodeid": "core/business/test_product_validation.py::TestCase", "type": "UnitTestCase"}, {"nodeid": "core/business/test_product_validation.py::TestProductValidation", "type": "Class"}, {"nodeid": "core/business/test_product_validation.py::TestProductCategoryValidation", "type": "Class"}, {"nodeid": "core/business/test_product_validation.py::TestProductImageValidation", "type": "Class"}, {"nodeid": "core/business/test_product_validation.py::TestProductImportValidator", "type": "UnitTestCase"}, {"nodeid": "core/business/test_product_validation.py::TestValidateProductModel", "type": "UnitTestCase"}]}, {"nodeid": "core/business/test_products.py::TestProductValidation::TestSKUValidation", "outcome": "passed", "result": [{"nodeid": "core/business/test_products.py::TestProductValidation::TestSKUValidation::test_validate_sku_valid", "type": "Function", "lineno": 46}, {"nodeid": "core/business/test_products.py::TestProductValidation::TestSKUValidation::test_validate_sku_empty", "type": "Function", "lineno": 53}, {"nodeid": "core/business/test_products.py::TestProductValidation::TestSKUValidation::test_validate_sku_invalid_format", "type": "Function", "lineno": 58}, {"nodeid": "core/business/test_products.py::TestProductValidation::TestSKUValidation::test_validate_sku_duplicate", "type": "Function", "lineno": 63}]}, {"nodeid": "core/business/test_products.py::TestProductValidation::TestNameValidation", "outcome": "passed", "result": [{"nodeid": "core/business/test_products.py::TestProductValidation::TestNameValidation::test_validate_name_valid", "type": "Function", "lineno": 73}, {"nodeid": "core/business/test_products.py::TestProductValidation::TestNameValidation::test_validate_name_empty", "type": "Function", "lineno": 79}, {"nodeid": "core/business/test_products.py::TestProductValidation::TestNameValidation::test_validate_name_too_long", "type": "Function", "lineno": 84}]}, {"nodeid": "core/business/test_products.py::TestProductValidation::TestPriceValidation", "outcome": "passed", "result": [{"nodeid": "core/business/test_products.py::TestProductValidation::TestPriceValidation::test_validate_list_price_valid", "type": "Function", "lineno": 93}, {"nodeid": "core/business/test_products.py::TestProductValidation::TestPriceValidation::test_validate_list_price_negative", "type": "Function", "lineno": 99}, {"nodeid": "core/business/test_products.py::TestProductValidation::TestPriceValidation::test_validate_wholesale_price_valid", "type": "Function", "lineno": 104}, {"nodeid": "core/business/test_products.py::TestProductValidation::TestPriceValidation::test_validate_cost_price_valid", "type": "Function", "lineno": 110}]}, {"nodeid": "core/business/test_products.py::TestProductValidation::TestCategoryValidation", "outcome": "passed", "result": [{"nodeid": "core/business/test_products.py::TestProductValidation::TestCategoryValidation::test_validate_category_valid", "type": "Function", "lineno": 123}, {"nodeid": "core/business/test_products.py::TestProductValidation::TestCategoryValidation::test_validate_category_not_found", "type": "Function", "lineno": 137}]}, {"nodeid": "core/business/test_products.py::TestProductValidation", "outcome": "passed", "result": [{"nodeid": "core/business/test_products.py::TestProductValidation::TestSKUValidation", "type": "Class"}, {"nodeid": "core/business/test_products.py::TestProductValidation::TestNameValidation", "type": "Class"}, {"nodeid": "core/business/test_products.py::TestProductValidation::TestPriceValidation", "type": "Class"}, {"nodeid": "core/business/test_products.py::TestProductValidation::TestCategoryValidation", "type": "Class"}]}, {"nodeid": "core/business/test_products.py::TestProductModelValidation", "outcome": "passed", "result": [{"nodeid": "core/business/test_products.py::TestProductModelValidation::test_validate_product_model_valid", "type": "Function", "lineno": 182}, {"nodeid": "core/business/test_products.py::TestProductModelValidation::test_validate_product_model_invalid_sku", "type": "Function", "lineno": 192}, {"nodeid": "core/business/test_products.py::TestProductModelValidation::test_validate_product_model_parent_with_variant", "type": "Function", "lineno": 202}]}, {"nodeid": "core/business/test_products.py", "outcome": "passed", "result": [{"nodeid": "core/business/test_products.py::TestProductValidation", "type": "Class"}, {"nodeid": "core/business/test_products.py::TestProductModelValidation", "type": "Class"}]}, {"nodeid": "core/business/test_sales.py::TestCase", "outcome": "passed", "result": []}, {"nodeid": "core/business/test_sales.py::TestSalesModel", "outcome": "passed", "result": [{"nodeid": "core/business/test_sales.py::TestSalesModel::test_abstract_model", "type": "TestCaseFunction", "lineno": 12}]}, {"nodeid": "core/business/test_sales.py::TestSalesStatusFunction", "outcome": "passed", "result": [{"nodeid": "core/business/test_sales.py::TestSalesStatusFunction::test_get_sales_status_general_exception", "type": "TestCaseFunction", "lineno": 49}, {"nodeid": "core/business/test_sales.py::TestSalesStatusFunction::test_get_sales_status_operational_error", "type": "TestCaseFunction", "lineno": 35}, {"nodeid": "core/business/test_sales.py::TestSalesStatusFunction::test_get_sales_status_success", "type": "TestCaseFunction", "lineno": 20}]}, {"nodeid": "core/business/test_sales.py", "outcome": "passed", "result": [{"nodeid": "core/business/test_sales.py::TestCase", "type": "UnitTestCase"}, {"nodeid": "core/business/test_sales.py::TestSalesModel", "type": "UnitTestCase"}, {"nodeid": "core/business/test_sales.py::TestSalesStatusFunction", "type": "UnitTestCase"}]}, {"nodeid": "core/business/test_sales_api.py::TestDummySalesViewSet", "outcome": "passed", "result": [{"nodeid": "core/business/test_sales_api.py::TestDummySalesViewSet::test_list", "type": "TestCaseFunction", "lineno": 14}, {"nodeid": "core/business/test_sales_api.py::TestDummySalesViewSet::test_retrieve", "type": "TestCaseFunction", "lineno": 20}, {"nodeid": "core/business/test_sales_api.py::TestDummySalesViewSet::test_retrieve_default_pk", "type": "TestCaseFunction", "lineno": 29}]}, {"nodeid": "core/business/test_sales_api.py::TestApiVersion", "outcome": "passed", "result": [{"nodeid": "core/business/test_sales_api.py::TestApiVersion::test_api_version_format", "type": "TestCaseFunction", "lineno": 42}]}, {"nodeid": "core/business/test_sales_api.py", "outcome": "passed", "result": [{"nodeid": "core/business/test_sales_api.py::TestDummySalesViewSet", "type": "UnitTestCase"}, {"nodeid": "core/business/test_sales_api.py::TestApiVersion", "type": "UnitTestCase"}]}, {"nodeid": "core/business/test_sales_views.py::TestViewSet", "outcome": "passed", "result": [{"nodeid": "core/business/test_sales_views.py::TestViewSet::test_docstring", "type": "TestCaseFunction", "lineno": 19}, {"nodeid": "core/business/test_sales_views.py::TestViewSet::test_viewset_init", "type": "TestCaseFunction", "lineno": 14}]}, {"nodeid": "core/business/test_sales_views.py", "outcome": "passed", "result": [{"nodeid": "core/business/test_sales_views.py::TestViewSet", "type": "UnitTestCase"}]}, {"nodeid": "core/business", "outcome": "passed", "result": [{"nodeid": "core/business/test_product_signals.py", "type": "Module"}, {"nodeid": "core/business/test_product_validation.py", "type": "Module"}, {"nodeid": "core/business/test_products.py", "type": "Module"}, {"nodeid": "core/business/test_sales.py", "type": "Module"}, {"nodeid": "core/business/test_sales_api.py", "type": "Module"}, {"nodeid": "core/business/test_sales_views.py", "type": "Module"}]}, {"nodeid": "core/test_audit_service.py::TestCase", "outcome": "passed", "result": []}, {"nodeid": "core/test_audit_service.py::TestAuditService", "outcome": "passed", "result": [{"nodeid": "core/test_audit_service.py::TestAuditService::test_get_client_ip_with_remote_addr", "type": "TestCaseFunction", "lineno": 314}, {"nodeid": "core/test_audit_service.py::TestAuditService::test_get_client_ip_with_x_forwarded_for", "type": "TestCaseFunction", "lineno": 306}, {"nodeid": "core/test_audit_service.py::TestAuditService::test_log_data_access", "type": "TestCaseFunction", "lineno": 284}, {"nodeid": "core/test_audit_service.py::TestAuditService::test_log_event_basic", "type": "TestCaseFunction", "lineno": 45}, {"nodeid": "core/test_audit_service.py::TestAuditService::test_log_event_handles_exception", "type": "TestCaseFunction", "lineno": 322}, {"nodeid": "core/test_audit_service.py::TestAuditService::test_log_event_with_additional_data", "type": "TestCaseFunction", "lineno": 127}, {"nodeid": "core/test_audit_service.py::TestAuditService::test_log_event_with_logger", "type": "TestCaseFunction", "lineno": 84}, {"nodeid": "core/test_audit_service.py::TestAuditService::test_log_event_with_related_object", "type": "TestCaseFunction", "lineno": 108}, {"nodeid": "core/test_audit_service.py::TestAuditService::test_log_event_with_request", "type": "TestCaseFunction", "lineno": 67}, {"nodeid": "core/test_audit_service.py::TestAuditService::test_log_login", "type": "TestCaseFunction", "lineno": 153}, {"nodeid": "core/test_audit_service.py::TestAuditService::test_log_logout", "type": "TestCaseFunction", "lineno": 175}, {"nodeid": "core/test_audit_service.py::TestAuditService::test_log_password_change", "type": "TestCaseFunction", "lineno": 183}, {"nodeid": "core/test_audit_service.py::TestAuditService::test_log_password_reset", "type": "TestCaseFunction", "lineno": 194}, {"nodeid": "core/test_audit_service.py::TestAuditService::test_log_permission_change", "type": "TestCaseFunction", "lineno": 255}, {"nodeid": "core/test_audit_service.py::TestAuditService::test_log_user_created", "type": "TestCaseFunction", "lineno": 205}, {"nodeid": "core/test_audit_service.py::TestAuditService::test_log_user_updated", "type": "TestCaseFunction", "lineno": 221}]}, {"nodeid": "core/test_audit_service.py", "outcome": "passed", "result": [{"nodeid": "core/test_audit_service.py::TestCase", "type": "UnitTestCase"}, {"nodeid": "core/test_audit_service.py::TestAuditService", "type": "UnitTestCase"}]}, {"nodeid": "core/test_compound_business_validator.py::TestBusinessRuleValidator", "outcome": "passed", "result": [{"nodeid": "core/test_compound_business_validator.py::TestBusinessRuleValidator::test_business_rule_validator_with_function", "type": "Function", "lineno": 20}, {"nodeid": "core/test_compound_business_validator.py::TestBusinessRuleValidator::test_business_rule_validator_with_lambda", "type": "Function", "lineno": 46}, {"nodeid": "core/test_compound_business_validator.py::TestBusinessRuleValidator::test_business_rule_validator_with_context", "type": "Function", "lineno": 66}]}, {"nodeid": "core/test_compound_business_validator.py::TestCompoundValidator", "outcome": "passed", "result": [{"nodeid": "core/test_compound_business_validator.py::TestCompoundValidator::test_compound_validator_not_require_all", "type": "Function", "lineno": 93}, {"nodeid": "core/test_compound_business_validator.py::TestCompoundValidator::test_compound_validator_custom_error_message", "type": "Function", "lineno": 132}, {"nodeid": "core/test_compound_business_validator.py::TestCompoundValidator::test_compound_validator_empty_validators_list", "type": "Function", "lineno": 150}]}, {"nodeid": "core/test_compound_business_validator.py", "outcome": "passed", "result": [{"nodeid": "core/test_compound_business_validator.py::TestBusinessRuleValidator", "type": "Class"}, {"nodeid": "core/test_compound_business_validator.py::TestCompoundValidator", "type": "Class"}]}, {"nodeid": "core/test_import_validator.py::TestImportValidator", "outcome": "passed", "result": [{"nodeid": "core/test_import_validator.py::TestImportValidator::test_init", "type": "Function", "lineno": 52}, {"nodeid": "core/test_import_validator.py::TestImportValidator::test_validate_row_success", "type": "Function", "lineno": 62}, {"nodeid": "core/test_import_validator.py::TestImportValidator::test_validate_row_with_field_error", "type": "Function", "lineno": 75}, {"nodeid": "core/test_import_validator.py::TestImportValidator::test_validate_row_with_field_warning", "type": "Function", "lineno": 86}, {"nodeid": "core/test_import_validator.py::TestImportValidator::test_validate_row_with_strict_mode", "type": "Function", "lineno": 97}, {"nodeid": "core/test_import_validator.py::TestImportValidator::test_validate_row_with_cross_validation", "type": "Function", "lineno": 108}, {"nodeid": "core/test_import_validator.py::TestImportValidator::test_validate_row_with_exception", "type": "Function", "lineno": 119}, {"nodeid": "core/test_import_validator.py::TestImportValidator::test_validate_row_with_skip_exception", "type": "Function", "lineno": 134}, {"nodeid": "core/test_import_validator.py::TestImportValidator::test_post_validate_row", "type": "Function", "lineno": 148}]}, {"nodeid": "core/test_import_validator.py", "outcome": "passed", "result": [{"nodeid": "core/test_import_validator.py::TestImportValidator", "type": "Class"}]}, {"nodeid": "core/test_middleware.py::TestCase", "outcome": "passed", "result": []}, {"nodeid": "core/test_middleware.py::TestDatabaseConnectionMiddleware", "outcome": "passed", "result": [{"nodeid": "core/test_middleware.py::TestDatabaseConnectionMiddleware::test_db_error_handling_for_api_paths", "type": "TestCaseFunction", "lineno": 111}, {"nodeid": "core/test_middleware.py::TestDatabaseConnectionMiddleware::test_db_error_handling_for_regular_paths", "type": "TestCaseFunction", "lineno": 95}, {"nodeid": "core/test_middleware.py::TestDatabaseConnectionMiddleware::test_health_check_endpoint", "type": "TestCaseFunction", "lineno": 37}, {"nodeid": "core/test_middleware.py::TestDatabaseConnectionMiddleware::test_health_check_environment_info", "type": "TestCaseFunction", "lineno": 130}, {"nodeid": "core/test_middleware.py::TestDatabaseConnectionMiddleware::test_health_check_missing_settings", "type": "TestCaseFunction", "lineno": 148}, {"nodeid": "core/test_middleware.py::TestDatabaseConnectionMiddleware::test_health_check_with_db_error", "type": "TestCaseFunction", "lineno": 56}, {"nodeid": "core/test_middleware.py::TestDatabaseConnectionMiddleware::test_normal_request_flow", "type": "TestCaseFunction", "lineno": 29}, {"nodeid": "core/test_middleware.py::TestDatabaseConnectionMiddleware::test_static_file_paths", "type": "TestCaseFunction", "lineno": 79}]}, {"nodeid": "core/test_middleware.py::TestAuthExemptMiddleware", "outcome": "passed", "result": [{"nodeid": "core/test_middleware.py::TestAuthExemptMiddleware::test_auth_exempt_paths", "type": "TestCaseFunction", "lineno": 184}, {"nodeid": "core/test_middleware.py::TestAuthExemptMiddleware::test_auth_exempt_response_handling", "type": "TestCaseFunction", "lineno": 236}, {"nodeid": "core/test_middleware.py::TestAuthExemptMiddleware::test_auth_exempt_with_custom_response", "type": "TestCaseFunction", "lineno": 268}, {"nodeid": "core/test_middleware.py::TestAuthExemptMiddleware::test_non_auth_response_handling", "type": "TestCaseFunction", "lineno": 256}, {"nodeid": "core/test_middleware.py::TestAuthExemptMiddleware::test_non_exempt_paths", "type": "TestCaseFunction", "lineno": 215}]}, {"nodeid": "core/test_middleware.py", "outcome": "passed", "result": [{"nodeid": "core/test_middleware.py::TestCase", "type": "UnitTestCase"}, {"nodeid": "core/test_middleware.py::TestDatabaseConnectionMiddleware", "type": "UnitTestCase"}, {"nodeid": "core/test_middleware.py::TestAuthExemptMiddleware", "type": "UnitTestCase"}]}, {"nodeid": "core/test_models.py::TransactionTestCase", "outcome": "passed", "result": []}, {"nodeid": "core/test_models.py::TestAuditLogModel", "outcome": "passed", "result": [{"nodeid": "core/test_models.py::TestAuditLogModel::test_additional_data_storage", "type": "TestCaseFunction", "lineno": 131}, {"nodeid": "core/test_models.py::TestAuditLogModel::test_audit_log_creation", "type": "TestCaseFunction", "lineno": 35}, {"nodeid": "core/test_models.py::TestAuditLogModel::test_audit_log_str_method", "type": "TestCaseFunction", "lineno": 69}, {"nodeid": "core/test_models.py::TestAuditLogModel::test_event_type_choices", "type": "TestCaseFunction", "lineno": 159}, {"nodeid": "core/test_models.py::TestAuditLogModel::test_related_object_tracking", "type": "TestCaseFunction", "lineno": 109}, {"nodeid": "core/test_models.py::TestAuditLogModel::test_username_auto_population", "type": "TestCaseFunction", "lineno": 88}]}, {"nodeid": "core/test_models.py", "outcome": "passed", "result": [{"nodeid": "core/test_models.py::TransactionTestCase", "type": "UnitTestCase"}, {"nodeid": "core/test_models.py::TestAuditLogModel", "type": "UnitTestCase"}]}, {"nodeid": "core/test_validation.py::TestValidatedForm", "outcome": "passed", "result": [{"nodeid": "core/test_validation.py::TestValidatedForm::test_form_valid", "type": "Function", "lineno": 208}, {"nodeid": "core/test_validation.py::TestValidatedForm::test_form_invalid_field", "type": "Function", "lineno": 221}, {"nodeid": "core/test_validation.py::TestValidatedForm::test_form_invalid_multiple_fields", "type": "Function", "lineno": 235}, {"nodeid": "core/test_validation.py::TestValidatedForm::test_form_level_validation", "type": "Function", "lineno": 250}]}, {"nodeid": "core/test_validation.py::TestValidatedModelForm", "outcome": "passed", "result": [{"nodeid": "core/test_validation.py::TestValidatedModelForm::test_model_form_valid", "type": "Function", "lineno": 320}, {"nodeid": "core/test_validation.py::TestValidatedModelForm::test_model_form_invalid_field", "type": "Function", "lineno": 327}, {"nodeid": "core/test_validation.py::TestValidatedModelForm::test_model_form_partial_data", "type": "Function", "lineno": 337}]}, {"nodeid": "core/test_validation.py::TestRegexValidator", "outcome": "passed", "result": [{"nodeid": "core/test_validation.py::TestRegexValidator::test_regex_validator_valid", "type": "Function", "lineno": 355}, {"nodeid": "core/test_validation.py::TestRegexValidator::test_regex_validator_invalid", "type": "Function", "lineno": 366}]}, {"nodeid": "core/test_validation.py::TestEmailValidator", "outcome": "passed", "result": [{"nodeid": "core/test_validation.py::TestEmailValidator::test_email_validator_valid", "type": "Function", "lineno": 381}, {"nodeid": "core/test_validation.py::TestEmailValidator::test_email_validator_invalid", "type": "Function", "lineno": 392}]}, {"nodeid": "core/test_validation.py::TestNumberValidator", "outcome": "passed", "result": [{"nodeid": "core/test_validation.py::TestNumberValidator::test_number_validator_valid", "type": "Function", "lineno": 407}, {"nodeid": "core/test_validation.py::TestNumberValidator::test_number_validator_invalid", "type": "Function", "lineno": 418}]}, {"nodeid": "core/test_validation.py", "outcome": "passed", "result": [{"nodeid": "core/test_validation.py::TestValidatedForm", "type": "Class"}, {"nodeid": "core/test_validation.py::TestValidatedModelForm", "type": "Class"}, {"nodeid": "core/test_validation.py::TestRegexValidator", "type": "Class"}, {"nodeid": "core/test_validation.py::TestEmailValidator", "type": "Class"}, {"nodeid": "core/test_validation.py::TestNumberValidator", "type": "Class"}]}, {"nodeid": "core/test_validation_exceptions.py::TestImportValidationError", "outcome": "passed", "result": [{"nodeid": "core/test_validation_exceptions.py::TestImportValidationError::test_init_with_single_error", "type": "Function", "lineno": 12}, {"nodeid": "core/test_validation_exceptions.py::TestImportValidationError::test_init_with_multiple_errors", "type": "Function", "lineno": 20}, {"nodeid": "core/test_validation_exceptions.py::TestImportValidationError::test_format_errors", "type": "Function", "lineno": 33}]}, {"nodeid": "core/test_validation_exceptions.py::TestSkipRowException", "outcome": "passed", "result": [{"nodeid": "core/test_validation_exceptions.py::TestSkipRowException::test_init_with_reason", "type": "Function", "lineno": 47}, {"nodeid": "core/test_validation_exceptions.py::TestSkipRowException::test_init_without_reason", "type": "Function", "lineno": 54}]}, {"nodeid": "core/test_validation_exceptions.py", "outcome": "passed", "result": [{"nodeid": "core/test_validation_exceptions.py::TestImportValidationError", "type": "Class"}, {"nodeid": "core/test_validation_exceptions.py::TestSkipRowException", "type": "Class"}]}, {"nodeid": "core/test_validators.py::TestValidationResult", "outcome": "passed", "result": [{"nodeid": "core/test_validators.py::TestValidationResult::test_initialization", "type": "Function", "lineno": 27}, {"nodeid": "core/test_validators.py::TestValidationResult::test_add_error", "type": "Function", "lineno": 35}, {"nodeid": "core/test_validators.py::TestValidationResult::test_add_warning", "type": "Function", "lineno": 51}, {"nodeid": "core/test_validators.py::TestValidationResult::test_merge", "type": "Function", "lineno": 67}]}, {"nodeid": "core/test_validators.py::TestRequiredValidator", "outcome": "passed", "result": [{"nodeid": "core/test_validators.py::TestRequiredValidator::test_required_validator_with_value", "type": "Function", "lineno": 96}, {"nodeid": "core/test_validators.py::TestRequiredValidator::test_required_validator_without_value", "type": "Function", "lineno": 103}]}, {"nodeid": "core/test_validators.py::TestRegexValidator", "outcome": "passed", "result": [{"nodeid": "core/test_validators.py::TestRegexValidator::test_regex_validator_match", "type": "Function", "lineno": 125}, {"nodeid": "core/test_validators.py::TestRegexValidator::test_regex_validator_no_match", "type": "Function", "lineno": 132}, {"nodeid": "core/test_validators.py::TestRegexValidator::test_regex_validator_none_value", "type": "Function", "lineno": 143}]}, {"nodeid": "core/test_validators.py::TestRangeValidator", "outcome": "passed", "result": [{"nodeid": "core/test_validators.py::TestRangeValidator::test_range_validator_within_range", "type": "Function", "lineno": 154}, {"nodeid": "core/test_validators.py::TestRangeValidator::test_range_validator_below_min", "type": "Function", "lineno": 161}, {"nodeid": "core/test_validators.py::TestRangeValidator::test_range_validator_above_max", "type": "Function", "lineno": 173}, {"nodeid": "core/test_validators.py::TestRangeValidator::test_range_validator_min_only", "type": "Function", "lineno": 179}, {"nodeid": "core/test_validators.py::TestRangeValidator::test_range_validator_max_only", "type": "Function", "lineno": 188}]}, {"nodeid": "core/test_validators.py::TestLengthValidator", "outcome": "passed", "result": [{"nodeid": "core/test_validators.py::TestLengthValidator::test_length_validator_within_range", "type": "Function", "lineno": 201}, {"nodeid": "core/test_validators.py::TestLengthValidator::test_length_validator_too_short", "type": "Function", "lineno": 208}, {"nodeid": "core/test_validators.py::TestLengthValidator::test_length_validator_too_long", "type": "Function", "lineno": 215}, {"nodeid": "core/test_validators.py::TestLengthValidator::test_length_validator_min_only", "type": "Function", "lineno": 222}, {"nodeid": "core/test_validators.py::TestLengthValidator::test_length_validator_max_only", "type": "Function", "lineno": 231}]}, {"nodeid": "core/test_validators.py::TestChoiceValidator", "outcome": "passed", "result": [{"nodeid": "core/test_validators.py::TestChoiceValidator::test_choice_validator_valid_choice", "type": "Function", "lineno": 244}, {"nodeid": "core/test_validators.py::TestChoiceValidator::test_choice_validator_invalid_choice", "type": "Function", "lineno": 252}]}, {"nodeid": "core/test_validators.py::TestDecimalValidator", "outcome": "passed", "result": [{"nodeid": "core/test_validators.py::TestDecimalValidator::test_decimal_validator_valid", "type": "Function", "lineno": 268}, {"nodeid": "core/test_validators.py::TestDecimalValidator::test_decimal_validator_too_many_digits", "type": "Function", "lineno": 279}, {"nodeid": "core/test_validators.py::TestDecimalValidator::test_decimal_validator_too_many_decimal_places", "type": "Function", "lineno": 286}, {"nodeid": "core/test_validators.py::TestDecimalValidator::test_decimal_validator_invalid_decimal", "type": "Function", "lineno": 293}]}, {"nodeid": "core/test_validators.py::TestSkuValidator", "outcome": "passed", "result": [{"nodeid": "core/test_validators.py::TestSkuValidator::test_sku_validator_valid", "type": "Function", "lineno": 304}, {"nodeid": "core/test_validators.py::TestSkuValidator::test_sku_validator_invalid", "type": "Function", "lineno": 311}]}, {"nodeid": "core/test_validators.py::TestCompoundValidator", "outcome": "passed", "result": [{"nodeid": "core/test_validators.py::TestCompoundValidator::test_compound_validator_all_valid", "type": "Function", "lineno": 322}, {"nodeid": "core/test_validators.py::TestCompoundValidator::test_compound_validator_one_invalid", "type": "Function", "lineno": 334}, {"nodeid": "core/test_validators.py::TestCompoundValidator::test_compound_validator_all_invalid", "type": "Function", "lineno": 346}, {"nodeid": "core/test_validators.py::TestCompoundValidator::test_compound_validator_not_require_all", "type": "Function", "lineno": 360}]}, {"nodeid": "core/test_validators.py::TestBusinessRuleValidator", "outcome": "passed", "result": [{"nodeid": "core/test_validators.py::TestBusinessRuleValidator::test_business_rule_validator_valid", "type": "Function", "lineno": 386}, {"nodeid": "core/test_validators.py::TestBusinessRuleValidator::test_business_rule_validator_invalid", "type": "Function", "lineno": 403}]}, {"nodeid": "core/test_validators.py", "outcome": "passed", "result": [{"nodeid": "core/test_validators.py::TestValidationResult", "type": "Class"}, {"nodeid": "core/test_validators.py::TestRequiredValidator", "type": "Class"}, {"nodeid": "core/test_validators.py::TestRegexValidator", "type": "Class"}, {"nodeid": "core/test_validators.py::TestRangeValidator", "type": "Class"}, {"nodeid": "core/test_validators.py::TestLengthValidator", "type": "Class"}, {"nodeid": "core/test_validators.py::TestChoiceValidator", "type": "Class"}, {"nodeid": "core/test_validators.py::TestDecimalValidator", "type": "Class"}, {"nodeid": "core/test_validators.py::TestSkuValidator", "type": "Class"}, {"nodeid": "core/test_validators.py::TestCompoundValidator", "type": "Class"}, {"nodeid": "core/test_validators.py::TestBusinessRuleValidator", "type": "Class"}, {"nodeid": "core/test_validators.py::test_validate_data", "type": "Function", "lineno": 422}]}, {"nodeid": "core/test_validators_base.py::TestValidationResult", "outcome": "passed", "result": [{"nodeid": "core/test_validators_base.py::TestValidationResult::test_init", "type": "Function", "lineno": 26}, {"nodeid": "core/test_validators_base.py::TestValidationResult::test_add_error", "type": "Function", "lineno": 34}, {"nodeid": "core/test_validators_base.py::TestValidationResult::test_add_warning", "type": "Function", "lineno": 52}, {"nodeid": "core/test_validators_base.py::TestValidationResult::test_merge", "type": "Function", "lineno": 65}, {"nodeid": "core/test_validators_base.py::TestValidationResult::test_str", "type": "Function", "lineno": 93}]}, {"nodeid": "core/test_validators_base.py::TestValidator", "outcome": "passed", "result": [{"nodeid": "core/test_validators_base.py::TestValidator::test_validator_interface", "type": "Function", "lineno": 109}]}, {"nodeid": "core/test_validators_base.py::TestRequiredValidator", "outcome": "passed", "result": [{"nodeid": "core/test_validators_base.py::TestRequiredValidator::test_valid_values", "type": "Function", "lineno": 121}, {"nodeid": "core/test_validators_base.py::TestRequiredValidator::test_invalid_values", "type": "Function", "lineno": 130}, {"nodeid": "core/test_validators_base.py::TestRequiredValidator::test_custom_message", "type": "Function", "lineno": 139}]}, {"nodeid": "core/test_validators_base.py::TestRegexValidator", "outcome": "passed", "result": [{"nodeid": "core/test_validators_base.py::TestRegexValidator::test_valid_values", "type": "Function", "lineno": 152}, {"nodeid": "core/test_validators_base.py::TestRegexValidator::test_invalid_values", "type": "Function", "lineno": 159}]}, {"nodeid": "core/test_validators_base.py::TestRangeValidator", "outcome": "passed", "result": [{"nodeid": "core/test_validators_base.py::TestRangeValidator::test_min_value", "type": "Function", "lineno": 173}, {"nodeid": "core/test_validators_base.py::TestRangeValidator::test_max_value", "type": "Function", "lineno": 181}, {"nodeid": "core/test_validators_base.py::TestRangeValidator::test_min_and_max_value", "type": "Function", "lineno": 189}, {"nodeid": "core/test_validators_base.py::TestRangeValidator::test_non_numeric_value", "type": "Function", "lineno": 199}, {"nodeid": "core/test_validators_base.py::TestRangeValidator::test_skip_empty_values", "type": "Function", "lineno": 207}]}, {"nodeid": "core/test_validators_base.py::TestDecimalValidator", "outcome": "passed", "result": [{"nodeid": "core/test_validators_base.py::TestDecimalValidator::test_valid_decimal", "type": "Function", "lineno": 219}, {"nodeid": "core/test_validators_base.py::TestDecimalValidator::test_invalid_precision", "type": "Function", "lineno": 227}, {"nodeid": "core/test_validators_base.py::TestDecimalValidator::test_invalid_format", "type": "Function", "lineno": 237}]}, {"nodeid": "core/test_validators_base.py::TestSkuValidator", "outcome": "passed", "result": [{"nodeid": "core/test_validators_base.py::TestSkuValidator::test_valid_skus", "type": "Function", "lineno": 249}, {"nodeid": "core/test_validators_base.py::TestSkuValidator::test_invalid_skus", "type": "Function", "lineno": 259}]}, {"nodeid": "core/test_validators_base.py", "outcome": "passed", "result": [{"nodeid": "core/test_validators_base.py::TestValidationResult", "type": "Class"}, {"nodeid": "core/test_validators_base.py::TestValidator", "type": "Class"}, {"nodeid": "core/test_validators_base.py::TestRequiredValidator", "type": "Class"}, {"nodeid": "core/test_validators_base.py::TestRegexValidator", "type": "Class"}, {"nodeid": "core/test_validators_base.py::TestRangeValidator", "type": "Class"}, {"nodeid": "core/test_validators_base.py::TestDecimalValidator", "type": "Class"}, {"nodeid": "core/test_validators_base.py::TestSkuValidator", "type": "Class"}, {"nodeid": "core/test_validators_base.py::test_validate_data_utility", "type": "Function", "lineno": 273}]}, {"nodeid": "core", "outcome": "passed", "result": [{"nodeid": "core/business", "type": "Package"}, {"nodeid": "core/test_audit_service.py", "type": "Module"}, {"nodeid": "core/test_compound_business_validator.py", "type": "Module"}, {"nodeid": "core/test_import_validator.py", "type": "Module"}, {"nodeid": "core/test_middleware.py", "type": "Module"}, {"nodeid": "core/test_models.py", "type": "Module"}, {"nodeid": "core/test_validation.py", "type": "Module"}, {"nodeid": "core/test_validation_exceptions.py", "type": "Module"}, {"nodeid": "core/test_validators.py", "type": "Module"}, {"nodeid": "core/test_validators_base.py", "type": "Module"}]}], "tests": [{"nodeid": "core/business/test_product_signals.py::TestVariantProductSignals::test_variant_product_pre_save_existing_created_at", "lineno": 120, "outcome": "passed", "keywords": ["test_variant_product_pre_save_existing_created_at", "__wrapped__", "patchings", "TestVariantProductSignals", "test_product_signals.py", "business", "core", "tests", ""], "setup": {"duration": 0.7964343749918044, "outcome": "passed", "stdout": "Operations to perform:\n  Synchronize unmigrated apps: corsheaders, django_filters, drf_yasg, external_api, messages, rest_framework, staticfiles\n  Apply all migrations: admin, auth, contenttypes, core, django_celery_beat, django_celery_results, email_system, inventory, monitoring, products, sales, sessions, sync, users\nSynchronizing apps without migrations:\n  Creating tables...\n    Running deferred SQL...\nRunning migrations:\n  Applying contenttypes.0001_initial... OK\n  Applying auth.0001_initial... OK\n  Applying admin.0001_initial... OK\n  Applying admin.0002_logentry_remove_auto_add... OK\n  Applying admin.0003_logentry_add_action_flag_choices... OK\n  Applying contenttypes.0002_remove_content_type_name... OK\n  Applying auth.0002_alter_permission_name_max_length... OK\n  Applying auth.0003_alter_user_email_max_length... OK\n  Applying auth.0004_alter_user_username_opts... OK\n  Applying auth.0005_alter_user_last_login_null... OK\n  Applying auth.0006_require_contenttypes_0002... OK\n  Applying auth.0007_alter_validators_add_error_messages... OK\n  Applying auth.0008_alter_user_username_max_length... OK\n  Applying auth.0009_alter_user_last_name_max_length... OK\n  Applying auth.0010_alter_group_name_max_length... OK\n  Applying auth.0011_update_proxy_permissions... OK\n  Applying auth.0012_alter_user_first_name_max_length... OK\n  Applying core.0001_initial... OK\n  Applying django_celery_beat.0001_initial... OK\n  Applying django_celery_results.0001_initial... OK\n  Applying email_system.0001_initial... OK\n  Applying products.0001_initial... OK\n  Applying inventory.0001_initial... OK\n  Applying monitoring.0001_initial... OK\n  Applying sales.0001_initial... OK\n  Applying sales.0002_auto_20250317_1528... OK\n  Applying sessions.0001_initial... OK\n  Applying sync.0001_initial... OK\n  Applying users.0001_initial... OK\n", "stderr": "Creating test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...\n"}, "call": {"duration": 0.0024958750000223517, "outcome": "passed"}, "teardown": {"duration": 0.00030516600236296654, "outcome": "passed"}}, {"nodeid": "core/business/test_product_signals.py::TestVariantProductSignals::test_variant_product_pre_save_existing_instance", "lineno": 74, "outcome": "passed", "keywords": ["test_variant_product_pre_save_existing_instance", "__wrapped__", "patchings", "TestVariantProductSignals", "test_product_signals.py", "business", "core", "tests", ""], "setup": {"duration": 0.0005203750042710453, "outcome": "passed"}, "call": {"duration": 0.0009615000017220154, "outcome": "passed"}, "teardown": {"duration": 0.00015249999705702066, "outcome": "passed"}}, {"nodeid": "core/business/test_product_signals.py::TestVariantProductSignals::test_variant_product_pre_save_no_parent_no_variant", "lineno": 93, "outcome": "passed", "keywords": ["test_variant_product_pre_save_no_parent_no_variant", "TestVariantProductSignals", "test_product_signals.py", "business", "core", "tests", ""], "setup": {"duration": 0.00048387500282842666, "outcome": "passed"}, "call": {"duration": 0.0007869999972172081, "outcome": "passed"}, "teardown": {"duration": 0.00033629199606366456, "outcome": "passed"}}, {"nodeid": "core/business/test_product_signals.py::TestVariantProductSignals::test_variant_product_pre_save_parent_no_sku_no_legacy_id", "lineno": 140, "outcome": "passed", "keywords": ["test_variant_product_pre_save_parent_no_sku_no_legacy_id", "TestVariantProductSignals", "test_product_signals.py", "business", "core", "tests", ""], "setup": {"duration": 0.0005596670089289546, "outcome": "passed"}, "call": {"duration": 0.0007764170004520565, "outcome": "passed"}, "teardown": {"duration": 0.00016366600175388157, "outcome": "passed"}}, {"nodeid": "core/business/test_product_signals.py::TestVariantProductSignals::test_variant_product_pre_save_parent_no_variant_code", "lineno": 107, "outcome": "passed", "keywords": ["test_variant_product_pre_save_parent_no_variant_code", "TestVariantProductSignals", "test_product_signals.py", "business", "core", "tests", ""], "setup": {"duration": 0.0004838330060010776, "outcome": "passed"}, "call": {"duration": 0.0007147079886635765, "outcome": "passed"}, "teardown": {"duration": 0.00014350000128615648, "outcome": "passed"}}, {"nodeid": "core/business/test_product_signals.py::TestVariantProductSignals::test_variant_product_pre_save_sets_sku", "lineno": 30, "outcome": "passed", "keywords": ["test_variant_product_pre_save_sets_sku", "TestVariantProductSignals", "test_product_signals.py", "business", "core", "tests", ""], "setup": {"duration": 0.000440500007243827, "outcome": "passed"}, "call": {"duration": 0.0006155830051284283, "outcome": "passed"}, "teardown": {"duration": 0.00013308299821801484, "outcome": "passed"}}, {"nodeid": "core/business/test_product_signals.py::TestVariantProductSignals::test_variant_product_pre_save_sets_timestamps", "lineno": 60, "outcome": "passed", "keywords": ["test_variant_product_pre_save_sets_timestamps", "__wrapped__", "patchings", "TestVariantProductSignals", "test_product_signals.py", "business", "core", "tests", ""], "setup": {"duration": 0.00043320900294929743, "outcome": "passed"}, "call": {"duration": 0.0009302500111516565, "outcome": "passed"}, "teardown": {"duration": 0.00014620799629483372, "outcome": "passed"}}, {"nodeid": "core/business/test_product_signals.py::TestVariantProductSignals::test_variant_product_pre_save_with_existing_sku", "lineno": 49, "outcome": "passed", "keywords": ["test_variant_product_pre_save_with_existing_sku", "TestVariantProductSignals", "test_product_signals.py", "business", "core", "tests", ""], "setup": {"duration": 0.0005052089982200414, "outcome": "passed"}, "call": {"duration": 0.000637250006548129, "outcome": "passed"}, "teardown": {"duration": 0.00015249999705702066, "outcome": "passed"}}, {"nodeid": "core/business/test_product_signals.py::TestVariantProductSignals::test_variant_product_pre_save_with_parent_sku_none", "lineno": 38, "outcome": "passed", "keywords": ["test_variant_product_pre_save_with_parent_sku_none", "TestVariantProductSignals", "test_product_signals.py", "business", "core", "tests", ""], "setup": {"duration": 0.00045487500028684735, "outcome": "passed"}, "call": {"duration": 0.0007857499876990914, "outcome": "passed"}, "teardown": {"duration": 0.0004925840039504692, "outcome": "passed"}}, {"nodeid": "core/business/test_product_validation.py::TestProductImportValidator::test_post_validate_row_duplicate_sku", "lineno": 200, "outcome": "passed", "keywords": ["test_post_validate_row_duplicate_sku", "__wrapped__", "patchings", "TestProductImportValidator", "test_product_validation.py", "business", "core", "tests", ""], "setup": {"duration": 0.0007433339924318716, "outcome": "passed"}, "call": {"duration": 0.0010572920000413433, "outcome": "passed"}, "teardown": {"duration": 0.00013466700329445302, "outcome": "passed"}}, {"nodeid": "core/business/test_product_validation.py::TestProductImportValidator::test_post_validate_row_parent_with_variant_code", "lineno": 190, "outcome": "passed", "keywords": ["test_post_validate_row_parent_with_variant_code", "TestProductImportValidator", "test_product_validation.py", "business", "core", "tests", ""], "setup": {"duration": 0.00047020899364724755, "outcome": "passed"}, "call": {"duration": 0.00029999999969732016, "outcome": "passed"}, "teardown": {"duration": 0.00012920900189783424, "outcome": "passed"}}, {"nodeid": "core/business/test_product_validation.py::TestProductImportValidator::test_pre_validate_row_missing_sku_and_name", "lineno": 170, "outcome": "passed", "keywords": ["test_pre_validate_row_missing_sku_and_name", "TestProductImportValidator", "test_product_validation.py", "business", "core", "tests", ""], "setup": {"duration": 0.00042783400567714125, "outcome": "passed"}, "call": {"duration": 0.00027758299256674945, "outcome": "passed"}, "teardown": {"duration": 0.00013379099254962057, "outcome": "passed"}}, {"nodeid": "core/business/test_product_validation.py::TestProductImportValidator::test_pre_validate_row_with_alte_nummer", "lineno": 181, "outcome": "passed", "keywords": ["test_pre_validate_row_with_alte_nummer", "TestProductImportValidator", "test_product_validation.py", "business", "core", "tests", ""], "setup": {"duration": 0.0004280419962015003, "outcome": "passed"}, "call": {"duration": 0.0002672080008778721, "outcome": "passed"}, "teardown": {"duration": 0.00012683399836532772, "outcome": "passed"}}, {"nodeid": "core/business/test_product_validation.py::TestProductImportValidator::test_validate_category_by_code", "lineno": 410, "outcome": "xfailed", "keywords": ["test_validate_category_by_code", "xfail", "__wrapped__", "patchings", "pytestmark", "TestProductImportValidator", "test_product_validation.py", "business", "core", "tests", ""], "setup": {"duration": 0.0005136659892741591, "outcome": "passed"}, "call": {"duration": 0.0011110000050393865, "outcome": "skipped", "crash": {"path": "/opt/miniconda3/lib/python3.12/unittest/mock.py", "lineno": 960, "message": "AssertionError: Expected 'filter' to be called once. Called 0 times."}, "traceback": [{"path": "tests/core/business/test_product_validation.py", "lineno": 424, "message": "in test_validate_category_by_code"}, {"path": "/opt/miniconda3/lib/python3.12/unittest/mock.py", "lineno": 960, "message": "in assert_called_once_with"}], "longrepr": "tests/core/business/test_product_validation.py:424: in test_validate_category_by_code\n    mock_filter.assert_called_once_with(code='TEST-CAT')\n/opt/miniconda3/lib/python3.12/unittest/mock.py:960: in assert_called_once_with\n    raise AssertionError(msg)\nE   AssertionError: Expected 'filter' to be called once. Called 0 times."}, "teardown": {"duration": 0.0002729580010054633, "outcome": "passed"}}, {"nodeid": "core/business/test_product_validation.py::TestProductImportValidator::test_validate_category_by_id", "lineno": 427, "outcome": "xfailed", "keywords": ["test_validate_category_by_id", "xfail", "__wrapped__", "patchings", "pytestmark", "TestProductImportValidator", "test_product_validation.py", "business", "core", "tests", ""], "setup": {"duration": 0.0008194169931812212, "outcome": "passed"}, "call": {"duration": 0.0010502079967409372, "outcome": "skipped", "crash": {"path": "/opt/miniconda3/lib/python3.12/unittest/mock.py", "lineno": 960, "message": "AssertionError: Expected 'filter' to be called once. Called 0 times."}, "traceback": [{"path": "tests/core/business/test_product_validation.py", "lineno": 441, "message": "in test_validate_category_by_id"}, {"path": "/opt/miniconda3/lib/python3.12/unittest/mock.py", "lineno": 960, "message": "in assert_called_once_with"}], "longrepr": "tests/core/business/test_product_validation.py:441: in test_validate_category_by_id\n    mock_filter.assert_called_once_with(id=5)\n/opt/miniconda3/lib/python3.12/unittest/mock.py:960: in assert_called_once_with\n    raise AssertionError(msg)\nE   AssertionError: Expected 'filter' to be called once. Called 0 times."}, "teardown": {"duration": 0.00027687501278705895, "outcome": "passed"}}, {"nodeid": "core/business/test_product_validation.py::TestProductImportValidator::test_validate_category_default", "lineno": 458, "outcome": "xfailed", "keywords": ["test_validate_category_default", "xfail", "__wrapped__", "patchings", "pytestmark", "TestProductImportValidator", "test_product_validation.py", "business", "core", "tests", ""], "setup": {"duration": 0.0008095000084722415, "outcome": "passed"}, "call": {"duration": 0.00110954100091476, "outcome": "skipped", "crash": {"path": "/opt/miniconda3/lib/python3.12/unittest/case.py", "lineno": 878, "message": "AssertionError: 0 != 1"}, "traceback": [{"path": "tests/core/business/test_product_validation.py", "lineno": 475, "message": "in test_validate_category_default"}], "longrepr": "tests/core/business/test_product_validation.py:475: in test_validate_category_default\n    self.assertEqual(len(result.warnings), 1)  # Should have a warning about using default\nE   AssertionError: 0 != 1"}, "teardown": {"duration": 0.00025879200256895274, "outcome": "passed"}}, {"nodeid": "core/business/test_product_validation.py::TestProductImportValidator::test_validate_category_not_found", "lineno": 444, "outcome": "xfailed", "keywords": ["test_validate_category_not_found", "xfail", "__wrapped__", "patchings", "pytestmark", "TestProductImportValidator", "test_product_validation.py", "business", "core", "tests", ""], "setup": {"duration": 0.0007238749967655167, "outcome": "passed"}, "call": {"duration": 0.0009672919986769557, "outcome": "skipped", "crash": {"path": "/opt/miniconda3/lib/python3.12/unittest/case.py", "lineno": 878, "message": "AssertionError: 0 != 1"}, "traceback": [{"path": "tests/core/business/test_product_validation.py", "lineno": 456, "message": "in test_validate_category_not_found"}], "longrepr": "tests/core/business/test_product_validation.py:456: in test_validate_category_not_found\n    self.assertEqual(len(result.errors), 1)\nE   AssertionError: 0 != 1"}, "teardown": {"duration": 0.00027204198704566807, "outcome": "passed"}}, {"nodeid": "core/business/test_product_validation.py::TestProductImportValidator::test_validate_cost_price_invalid_preise", "lineno": 379, "outcome": "passed", "keywords": ["test_validate_cost_price_invalid_preise", "TestProductImportValidator", "test_product_validation.py", "business", "core", "tests", ""], "setup": {"duration": 0.0007712919905316085, "outcome": "passed"}, "call": {"duration": 0.0006737500079907477, "outcome": "passed"}, "teardown": {"duration": 0.00017054199997801334, "outcome": "passed"}}, {"nodeid": "core/business/test_product_validation.py::TestProductImportValidator::test_validate_cost_price_negative", "lineno": 402, "outcome": "passed", "keywords": ["test_validate_cost_price_negative", "TestProductImportValidator", "test_product_validation.py", "business", "core", "tests", ""], "setup": {"duration": 0.0005627500067930669, "outcome": "passed"}, "call": {"duration": 0.0004522079980233684, "outcome": "passed"}, "teardown": {"duration": 0.00036095800169277936, "outcome": "passed"}}, {"nodeid": "core/business/test_product_validation.py::TestProductImportValidator::test_validate_cost_price_numeric_conversion", "lineno": 394, "outcome": "passed", "keywords": ["test_validate_cost_price_numeric_conversion", "TestProductImportValidator", "test_product_validation.py", "business", "core", "tests", ""], "setup": {"duration": 0.00059179199161008, "outcome": "passed"}, "call": {"duration": 0.00037445800262503326, "outcome": "passed"}, "teardown": {"duration": 0.0001559169904794544, "outcome": "passed"}}, {"nodeid": "core/business/test_product_validation.py::TestProductImportValidator::test_validate_cost_price_with_preise", "lineno": 363, "outcome": "passed", "keywords": ["test_validate_cost_price_with_preise", "TestProductImportValidator", "test_product_validation.py", "business", "core", "tests", ""], "setup": {"duration": 0.0004719159915111959, "outcome": "passed"}, "call": {"duration": 0.0003452910023042932, "outcome": "passed"}, "teardown": {"duration": 0.0001676250103628263, "outcome": "passed"}}, {"nodeid": "core/business/test_product_validation.py::TestProductImportValidator::test_validate_list_price_invalid_preise", "lineno": 292, "outcome": "passed", "keywords": ["test_validate_list_price_invalid_preise", "TestProductImportValidator", "test_product_validation.py", "business", "core", "tests", ""], "setup": {"duration": 0.0006710000016028062, "outcome": "passed"}, "call": {"duration": 0.0007872499991208315, "outcome": "passed"}, "teardown": {"duration": 0.00017504199058748782, "outcome": "passed"}}, {"nodeid": "core/business/test_product_validation.py::TestProductImportValidator::test_validate_list_price_negative", "lineno": 307, "outcome": "passed", "keywords": ["test_validate_list_price_negative", "TestProductImportValidator", "test_product_validation.py", "business", "core", "tests", ""], "setup": {"duration": 0.001661166999838315, "outcome": "passed"}, "call": {"duration": 0.0007287079934030771, "outcome": "passed"}, "teardown": {"duration": 0.0001695409882813692, "outcome": "passed"}}, {"nodeid": "core/business/test_product_validation.py::TestProductImportValidator::test_validate_list_price_with_preise", "lineno": 276, "outcome": "passed", "keywords": ["test_validate_list_price_with_preise", "TestProductImportValidator", "test_product_validation.py", "business", "core", "tests", ""], "setup": {"duration": 0.0006664169923169538, "outcome": "passed"}, "call": {"duration": 0.0007944170065457001, "outcome": "passed"}, "teardown": {"duration": 0.0001609579921932891, "outcome": "passed"}}, {"nodeid": "core/business/test_product_validation.py::TestProductImportValidator::test_validate_name_missing", "lineno": 259, "outcome": "passed", "keywords": ["test_validate_name_missing", "TestProductImportValidator", "test_product_validation.py", "business", "core", "tests", ""], "setup": {"duration": 0.0005347919941414148, "outcome": "passed"}, "call": {"duration": 0.0004591670003719628, "outcome": "passed"}, "teardown": {"duration": 0.00014637499407399446, "outcome": "passed"}}, {"nodeid": "core/business/test_product_validation.py::TestProductImportValidator::test_validate_name_too_long", "lineno": 267, "outcome": "passed", "keywords": ["test_validate_name_too_long", "TestProductImportValidator", "test_product_validation.py", "business", "core", "tests", ""], "setup": {"duration": 0.000508707991684787, "outcome": "passed"}, "call": {"duration": 0.00035529200977180153, "outcome": "passed"}, "teardown": {"duration": 0.00014658299915026873, "outcome": "passed"}}, {"nodeid": "core/business/test_product_validation.py::TestProductImportValidator::test_validate_name_with_bezeichnung", "lineno": 251, "outcome": "passed", "keywords": ["test_validate_name_with_bezeichnung", "TestProductImportValidator", "test_product_validation.py", "business", "core", "tests", ""], "setup": {"duration": 0.0006186249956954271, "outcome": "passed"}, "call": {"duration": 0.0003867919876938686, "outcome": "passed"}, "teardown": {"duration": 0.00015866599278524518, "outcome": "passed"}}, {"nodeid": "core/business/test_product_validation.py::TestProductImportValidator::test_validate_sku_as_parent", "lineno": 241, "outcome": "passed", "keywords": ["test_validate_sku_as_parent", "TestProductImportValidator", "test_product_validation.py", "business", "core", "tests", ""], "setup": {"duration": 0.00047979201190173626, "outcome": "passed"}, "call": {"duration": 0.0006797910027671605, "outcome": "passed"}, "teardown": {"duration": 0.0001498339988756925, "outcome": "passed"}}, {"nodeid": "core/business/test_product_validation.py::TestProductImportValidator::test_validate_sku_empty", "lineno": 223, "outcome": "passed", "keywords": ["test_validate_sku_empty", "TestProductImportValidator", "test_product_validation.py", "business", "core", "tests", ""], "setup": {"duration": 0.0004668750043492764, "outcome": "passed"}, "call": {"duration": 0.00029716700373683125, "outcome": "passed"}, "teardown": {"duration": 0.0001345000055152923, "outcome": "passed"}}, {"nodeid": "core/business/test_product_validation.py::TestProductImportValidator::test_validate_sku_with_alte_nummer", "lineno": 215, "outcome": "passed", "keywords": ["test_validate_sku_with_alte_nummer", "TestProductImportValidator", "test_product_validation.py", "business", "core", "tests", ""], "setup": {"duration": 0.0004642080020857975, "outcome": "passed"}, "call": {"duration": 0.0002997090050484985, "outcome": "passed"}, "teardown": {"duration": 0.0001279170101042837, "outcome": "passed"}}, {"nodeid": "core/business/test_product_validation.py::TestProductImportValidator::test_validate_sku_with_variant", "lineno": 231, "outcome": "passed", "keywords": ["test_validate_sku_with_variant", "TestProductImportValidator", "test_product_validation.py", "business", "core", "tests", ""], "setup": {"duration": 0.0004504160024225712, "outcome": "passed"}, "call": {"duration": 0.00032204200397245586, "outcome": "passed"}, "teardown": {"duration": 0.00012808300380129367, "outcome": "passed"}}, {"nodeid": "core/business/test_product_validation.py::TestProductImportValidator::test_validate_wholesale_price_invalid_preise", "lineno": 332, "outcome": "passed", "keywords": ["test_validate_wholesale_price_invalid_preise", "TestProductImportValidator", "test_product_validation.py", "business", "core", "tests", ""], "setup": {"duration": 0.0004767089994857088, "outcome": "passed"}, "call": {"duration": 0.00031925000075716525, "outcome": "passed"}, "teardown": {"duration": 0.0001379160094074905, "outcome": "passed"}}, {"nodeid": "core/business/test_product_validation.py::TestProductImportValidator::test_validate_wholesale_price_negative", "lineno": 355, "outcome": "passed", "keywords": ["test_validate_wholesale_price_negative", "TestProductImportValidator", "test_product_validation.py", "business", "core", "tests", ""], "setup": {"duration": 0.0004520410002442077, "outcome": "passed"}, "call": {"duration": 0.0003434169921092689, "outcome": "passed"}, "teardown": {"duration": 0.00014891699538566172, "outcome": "passed"}}, {"nodeid": "core/business/test_product_validation.py::TestProductImportValidator::test_validate_wholesale_price_numeric_conversion", "lineno": 347, "outcome": "passed", "keywords": ["test_validate_wholesale_price_numeric_conversion", "TestProductImportValidator", "test_product_validation.py", "business", "core", "tests", ""], "setup": {"duration": 0.0005272919952403754, "outcome": "passed"}, "call": {"duration": 0.0003774579963646829, "outcome": "passed"}, "teardown": {"duration": 0.00013379199663177133, "outcome": "passed"}}, {"nodeid": "core/business/test_product_validation.py::TestProductImportValidator::test_validate_wholesale_price_with_preise", "lineno": 315, "outcome": "passed", "keywords": ["test_validate_wholesale_price_with_preise", "TestProductImportValidator", "test_product_validation.py", "business", "core", "tests", ""], "setup": {"duration": 0.00044308300130069256, "outcome": "passed"}, "call": {"duration": 0.0003095419961027801, "outcome": "passed"}, "teardown": {"duration": 0.000532666002982296, "outcome": "passed"}}, {"nodeid": "core/business/test_product_validation.py::TestValidateProductModel::test_validate_product_model_invalid_fields", "lineno": 500, "outcome": "xfailed", "keywords": ["test_validate_product_model_invalid_fields", "xfail", "__wrapped__", "patchings", "pytestmark", "TestValidateProductModel", "test_product_validation.py", "business", "core", "tests", ""], "setup": {"duration": 0.0007706670003244653, "outcome": "passed"}, "call": {"duration": 0.0008392080053454265, "outcome": "skipped", "crash": {"path": "/Users/joan/VSProjects/pyERP/pyerp/business_modules/products/validators.py", "lineno": 485, "message": "django.core.exceptions.ValidationError: {'variant_code': ['Parent products cannot have variant codes']}"}, "traceback": [{"path": "tests/core/business/test_product_validation.py", "lineno": 510, "message": "in test_validate_product_model_invalid_fields"}, {"path": "pyerp/business_modules/products/validators.py", "lineno": 485, "message": "in validate_product_model"}], "longrepr": "tests/core/business/test_product_validation.py:510: in test_validate_product_model_invalid_fields\n    result = validate_product_model(product)\npyerp/business_modules/products/validators.py:485: in validate_product_model\n    raise ValidationError(\nE   django.core.exceptions.ValidationError: {'variant_code': ['Parent products cannot have variant codes']}"}, "teardown": {"duration": 0.00021608300448860973, "outcome": "passed"}}, {"nodeid": "core/business/test_product_validation.py::TestValidateProductModel::test_validate_product_model_invalid_parent_relationship", "lineno": 512, "outcome": "xfailed", "keywords": ["test_validate_product_model_invalid_parent_relationship", "xfail", "__wrapped__", "patchings", "pytestmark", "TestValidateProductModel", "test_product_validation.py", "business", "core", "tests", ""], "setup": {"duration": 0.0005212920077610761, "outcome": "passed"}, "call": {"duration": 0.0007574580085929483, "outcome": "skipped", "crash": {"path": "/Users/joan/VSProjects/pyERP/pyerp/business_modules/products/validators.py", "lineno": 481, "message": "django.core.exceptions.ValidationError: {'sku': ['Invalid SKU format']}"}, "traceback": [{"path": "tests/core/business/test_product_validation.py", "lineno": 529, "message": "in test_validate_product_model_invalid_parent_relationship"}, {"path": "pyerp/business_modules/products/validators.py", "lineno": 481, "message": "in validate_product_model"}], "longrepr": "tests/core/business/test_product_validation.py:529: in test_validate_product_model_invalid_parent_relationship\n    result = validate_product_model(product)\npyerp/business_modules/products/validators.py:481: in validate_product_model\n    raise ValidationError({\"sku\": [\"Invalid SKU format\"]})\nE   django.core.exceptions.ValidationError: {'sku': ['Invalid SKU format']}"}, "teardown": {"duration": 0.0002495420048944652, "outcome": "passed"}}, {"nodeid": "core/business/test_product_validation.py::TestValidateProductModel::test_validate_product_model_valid", "lineno": 481, "outcome": "xfailed", "keywords": ["test_validate_product_model_valid", "xfail", "__wrapped__", "patchings", "pytestmark", "TestValidateProductModel", "test_product_validation.py", "business", "core", "tests", ""], "setup": {"duration": 0.0005967920005787164, "outcome": "passed"}, "call": {"duration": 0.0009356249938718975, "outcome": "skipped", "crash": {"path": "/Users/joan/VSProjects/pyERP/pyerp/business_modules/products/validators.py", "lineno": 481, "message": "django.core.exceptions.ValidationError: {'sku': ['Invalid SKU format']}"}, "traceback": [{"path": "tests/core/business/test_product_validation.py", "lineno": 498, "message": "in test_validate_product_model_valid"}, {"path": "pyerp/business_modules/products/validators.py", "lineno": 481, "message": "in validate_product_model"}], "longrepr": "tests/core/business/test_product_validation.py:498: in test_validate_product_model_valid\n    result = validate_product_model(product)\npyerp/business_modules/products/validators.py:481: in validate_product_model\n    raise ValidationError({\"sku\": [\"Invalid SKU format\"]})\nE   django.core.exceptions.ValidationError: {'sku': ['Invalid SKU format']}"}, "teardown": {"duration": 0.0003464580076979473, "outcome": "passed"}}, {"nodeid": "core/business/test_products.py::TestProductValidation::TestSKUValidation::test_validate_sku_valid", "lineno": 46, "outcome": "passed", "keywords": ["test_validate_sku_valid", "TestSKUValidation", "TestProductValidation", "django_db", "test_products.py", "business", "core", "tests", ""], "setup": {"duration": 0.0009700420050648972, "outcome": "passed"}, "call": {"duration": 0.000404666003305465, "outcome": "passed"}, "teardown": {"duration": 0.0003133749996777624, "outcome": "passed"}}, {"nodeid": "core/business/test_products.py::TestProductValidation::TestSKUValidation::test_validate_sku_empty", "lineno": 53, "outcome": "passed", "keywords": ["test_validate_sku_empty", "TestSKUValidation", "TestProductValidation", "django_db", "test_products.py", "business", "core", "tests", ""], "setup": {"duration": 0.0008832499879645184, "outcome": "passed"}, "call": {"duration": 0.00011641699529718608, "outcome": "passed"}, "teardown": {"duration": 0.00037125000380910933, "outcome": "passed"}}, {"nodeid": "core/business/test_products.py::TestProductValidation::TestSKUValidation::test_validate_sku_invalid_format", "lineno": 58, "outcome": "passed", "keywords": ["test_validate_sku_invalid_format", "TestSKUValidation", "TestProductValidation", "django_db", "test_products.py", "business", "core", "tests", ""], "setup": {"duration": 0.0009278749930672348, "outcome": "passed"}, "call": {"duration": 0.0001528330030851066, "outcome": "passed"}, "teardown": {"duration": 0.00032662499870639294, "outcome": "passed"}}, {"nodeid": "core/business/test_products.py::TestProductValidation::TestSKUValidation::test_validate_sku_duplicate", "lineno": 63, "outcome": "passed", "keywords": ["test_validate_sku_duplicate", "TestSKUValidation", "TestProductValidation", "django_db", "test_products.py", "business", "core", "tests", ""], "setup": {"duration": 0.0008291660051327199, "outcome": "passed"}, "call": {"duration": 0.0001874169975053519, "outcome": "passed"}, "teardown": {"duration": 0.00030287499248515815, "outcome": "passed"}}, {"nodeid": "core/business/test_products.py::TestProductValidation::TestNameValidation::test_validate_name_valid", "lineno": 73, "outcome": "passed", "keywords": ["test_validate_name_valid", "TestNameValidation", "TestProductValidation", "django_db", "test_products.py", "business", "core", "tests", ""], "setup": {"duration": 0.0007909589912742376, "outcome": "passed"}, "call": {"duration": 0.0001424999936716631, "outcome": "passed"}, "teardown": {"duration": 0.0002655419957591221, "outcome": "passed"}}, {"nodeid": "core/business/test_products.py::TestProductValidation::TestNameValidation::test_validate_name_empty", "lineno": 79, "outcome": "passed", "keywords": ["test_validate_name_empty", "TestNameValidation", "TestProductValidation", "django_db", "test_products.py", "business", "core", "tests", ""], "setup": {"duration": 0.0007942499942146242, "outcome": "passed"}, "call": {"duration": 0.000124333004350774, "outcome": "passed"}, "teardown": {"duration": 0.00026058399816975, "outcome": "passed"}}, {"nodeid": "core/business/test_products.py::TestProductValidation::TestNameValidation::test_validate_name_too_long", "lineno": 84, "outcome": "passed", "keywords": ["test_validate_name_too_long", "TestNameValidation", "TestProductValidation", "django_db", "test_products.py", "business", "core", "tests", ""], "setup": {"duration": 0.0007526250119553879, "outcome": "passed"}, "call": {"duration": 0.00014491700858343393, "outcome": "passed"}, "teardown": {"duration": 0.0003145420050714165, "outcome": "passed"}}, {"nodeid": "core/business/test_products.py::TestProductValidation::TestPriceValidation::test_validate_list_price_valid", "lineno": 93, "outcome": "passed", "keywords": ["test_validate_list_price_valid", "TestPriceValidation", "TestProductValidation", "django_db", "test_products.py", "business", "core", "tests", ""], "setup": {"duration": 0.000801208007032983, "outcome": "passed"}, "call": {"duration": 0.00015212499420158565, "outcome": "passed"}, "teardown": {"duration": 0.00027787499129772186, "outcome": "passed"}}, {"nodeid": "core/business/test_products.py::TestProductValidation::TestPriceValidation::test_validate_list_price_negative", "lineno": 99, "outcome": "passed", "keywords": ["test_validate_list_price_negative", "TestPriceValidation", "TestProductValidation", "django_db", "test_products.py", "business", "core", "tests", ""], "setup": {"duration": 0.0007952500018291175, "outcome": "passed"}, "call": {"duration": 0.00014758399629499763, "outcome": "passed"}, "teardown": {"duration": 0.00026858299679588526, "outcome": "passed"}}, {"nodeid": "core/business/test_products.py::TestProductValidation::TestPriceValidation::test_validate_wholesale_price_valid", "lineno": 104, "outcome": "passed", "keywords": ["test_validate_wholesale_price_valid", "TestPriceValidation", "TestProductValidation", "django_db", "test_products.py", "business", "core", "tests", ""], "setup": {"duration": 0.0009774999925866723, "outcome": "passed"}, "call": {"duration": 0.00015545799396932125, "outcome": "passed"}, "teardown": {"duration": 0.0003559589968062937, "outcome": "passed"}}, {"nodeid": "core/business/test_products.py::TestProductValidation::TestPriceValidation::test_validate_cost_price_valid", "lineno": 110, "outcome": "passed", "keywords": ["test_validate_cost_price_valid", "TestPriceValidation", "TestProductValidation", "django_db", "test_products.py", "business", "core", "tests", ""], "setup": {"duration": 0.0008978339901659638, "outcome": "passed"}, "call": {"duration": 0.00013525001122616231, "outcome": "passed"}, "teardown": {"duration": 0.0003100000030826777, "outcome": "passed"}}, {"nodeid": "core/business/test_products.py::TestProductValidation::TestCategoryValidation::test_validate_category_valid", "lineno": 123, "outcome": "passed", "keywords": ["test_validate_category_valid", "__wrapped__", "patchings", "TestCategoryValidation", "TestProductValidation", "django_db", "test_products.py", "business", "core", "tests", ""], "setup": {"duration": 0.0008722080092411488, "outcome": "passed"}, "call": {"duration": 0.0005638750008074567, "outcome": "passed"}, "teardown": {"duration": 0.0002888330054702237, "outcome": "passed"}}, {"nodeid": "core/business/test_products.py::TestProductValidation::TestCategoryValidation::test_validate_category_not_found", "lineno": 137, "outcome": "passed", "keywords": ["test_validate_category_not_found", "__wrapped__", "patchings", "TestCategoryValidation", "TestProductValidation", "django_db", "test_products.py", "business", "core", "tests", ""], "setup": {"duration": 0.0010660000116331503, "outcome": "passed"}, "call": {"duration": 0.0005298329924698919, "outcome": "passed"}, "teardown": {"duration": 0.000357083001290448, "outcome": "passed"}}, {"nodeid": "core/business/test_sales.py::TestSalesModel::test_abstract_model", "lineno": 12, "outcome": "passed", "keywords": ["test_abstract_model", "TestSalesModel", "test_sales.py", "business", "core", "tests", ""], "setup": {"duration": 0.0009238329948857427, "outcome": "passed"}, "call": {"duration": 0.0003808750043390319, "outcome": "passed"}, "teardown": {"duration": 0.00024375000793952495, "outcome": "passed"}}, {"nodeid": "core/test_audit_service.py::TestAuditService::test_get_client_ip_with_remote_addr", "lineno": 314, "outcome": "passed", "keywords": ["test_get_client_ip_with_remote_addr", "TestAuditService", "test_audit_service.py", "core", "tests", ""], "setup": {"duration": 0.0007447910029441118, "outcome": "passed"}, "call": {"duration": 0.003950333004468121, "outcome": "passed", "stderr": "INFO 2025-03-18 16:03:47,812 signals 9702 8674591296 New user created: testuser\nINFO 2025-03-18 16:03:47,814 services 9702 8674591296 AUDIT: user_created - User 'testuser' created\n"}, "teardown": {"duration": 0.00015583299682475626, "outcome": "passed"}}, {"nodeid": "core/test_audit_service.py::TestAuditService::test_get_client_ip_with_x_forwarded_for", "lineno": 306, "outcome": "passed", "keywords": ["test_get_client_ip_with_x_forwarded_for", "TestAuditService", "test_audit_service.py", "core", "tests", ""], "setup": {"duration": 0.0004674170049838722, "outcome": "passed"}, "call": {"duration": 0.0018288330029463395, "outcome": "passed", "stderr": "INFO 2025-03-18 16:03:47,817 signals 9702 8674591296 New user created: testuser\nINFO 2025-03-18 16:03:47,817 services 9702 8674591296 AUDIT: user_created - User 'testuser' created\n"}, "teardown": {"duration": 0.00018562498735263944, "outcome": "passed"}}, {"nodeid": "core/test_audit_service.py::TestAuditService::test_log_data_access", "lineno": 284, "outcome": "passed", "keywords": ["test_log_data_access", "__wrapped__", "patchings", "TestAuditService", "test_audit_service.py", "core", "tests", ""], "setup": {"duration": 0.0005499170074472204, "outcome": "passed"}, "call": {"duration": 0.0029892500024288893, "outcome": "passed", "stderr": "INFO 2025-03-18 16:03:47,820 signals 9702 8674591296 New user created: testuser\nINFO 2025-03-18 16:03:47,821 services 9702 8674591296 AUDIT: user_created - User 'testuser' created\nINFO 2025-03-18 16:03:47,822 signals 9702 8674591296 New user created: accesseduser\n"}, "teardown": {"duration": 0.00015845800226088613, "outcome": "passed"}}, {"nodeid": "core/test_audit_service.py::TestAuditService::test_log_event_basic", "lineno": 45, "outcome": "passed", "keywords": ["test_log_event_basic", "TestAuditService", "test_audit_service.py", "core", "tests", ""], "setup": {"duration": 0.0006030840013409033, "outcome": "passed"}, "call": {"duration": 0.0031962920038495213, "outcome": "passed", "stderr": "INFO 2025-03-18 16:03:47,825 signals 9702 8674591296 New user created: testuser\nINFO 2025-03-18 16:03:47,825 services 9702 8674591296 AUDIT: user_created - User 'testuser' created\nINFO 2025-03-18 16:03:47,826 services 9702 8674591296 AUDIT: system_error - Test system error\n"}, "teardown": {"duration": 0.00019183300901204348, "outcome": "passed"}}, {"nodeid": "core/test_audit_service.py::TestAuditService::test_log_event_handles_exception", "lineno": 322, "outcome": "passed", "keywords": ["test_log_event_handles_exception", "__wrapped__", "patchings", "TestAuditService", "test_audit_service.py", "core", "tests", ""], "setup": {"duration": 0.0005501670093508437, "outcome": "passed"}, "call": {"duration": 0.0021086670021759346, "outcome": "passed", "stderr": "INFO 2025-03-18 16:03:47,829 signals 9702 8674591296 New user created: testuser\nINFO 2025-03-18 16:03:47,830 services 9702 8674591296 AUDIT: user_created - User 'testuser' created\n"}, "teardown": {"duration": 0.00015841700951568782, "outcome": "passed"}}, {"nodeid": "core/test_audit_service.py::TestAuditService::test_log_event_with_additional_data", "lineno": 127, "outcome": "passed", "keywords": ["test_log_event_with_additional_data", "TestAuditService", "test_audit_service.py", "core", "tests", ""], "setup": {"duration": 0.0004862500063609332, "outcome": "passed"}, "call": {"duration": 0.0022295840026345104, "outcome": "passed", "stderr": "INFO 2025-03-18 16:03:47,833 signals 9702 8674591296 New user created: testuser\nINFO 2025-03-18 16:03:47,833 services 9702 8674591296 AUDIT: user_created - User 'testuser' created\nINFO 2025-03-18 16:03:47,834 services 9702 8674591296 AUDIT: data_change - Test data change with extra info\n"}, "teardown": {"duration": 0.00015691600856371224, "outcome": "passed"}}, {"nodeid": "core/test_audit_service.py::TestAuditService::test_log_event_with_logger", "lineno": 84, "outcome": "passed", "keywords": ["test_log_event_with_logger", "__wrapped__", "patchings", "TestAuditService", "test_audit_service.py", "core", "tests", ""], "setup": {"duration": 0.00047866599925328046, "outcome": "passed"}, "call": {"duration": 0.0019420410098973662, "outcome": "passed", "stderr": "INFO 2025-03-18 16:03:47,836 signals 9702 8674591296 New user created: testuser\nINFO 2025-03-18 16:03:47,836 services 9702 8674591296 AUDIT: user_created - User 'testuser' created\n"}, "teardown": {"duration": 0.00015745799464639276, "outcome": "passed"}}, {"nodeid": "core/test_audit_service.py::TestAuditService::test_log_event_with_related_object", "lineno": 108, "outcome": "passed", "keywords": ["test_log_event_with_related_object", "TestAuditService", "test_audit_service.py", "core", "tests", ""], "setup": {"duration": 0.00048754199815448374, "outcome": "passed"}, "call": {"duration": 0.0027679590129991993, "outcome": "passed", "stderr": "INFO 2025-03-18 16:03:47,839 signals 9702 8674591296 New user created: testuser\nINFO 2025-03-18 16:03:47,840 services 9702 8674591296 AUDIT: user_created - User 'testuser' created\nINFO 2025-03-18 16:03:47,841 signals 9702 8674591296 New user created: related_user\nINFO 2025-03-18 16:03:47,841 services 9702 8674591296 AUDIT: user_created - User 'related_user' created\nINFO 2025-03-18 16:03:47,841 services 9702 8674591296 AUDIT: user_created - Test user created event\n"}, "teardown": {"duration": 0.00018375000217929482, "outcome": "passed"}}, {"nodeid": "core/test_audit_service.py::TestAuditService::test_log_event_with_request", "lineno": 67, "outcome": "passed", "keywords": ["test_log_event_with_request", "TestAuditService", "test_audit_service.py", "core", "tests", ""], "setup": {"duration": 0.0005647090001730248, "outcome": "passed"}, "call": {"duration": 0.001613959000678733, "outcome": "passed", "stderr": "INFO 2025-03-18 16:03:47,844 signals 9702 8674591296 New user created: testuser\nINFO 2025-03-18 16:03:47,844 services 9702 8674591296 AUDIT: user_created - User 'testuser' created\nINFO 2025-03-18 16:03:47,844 services 9702 8674591296 AUDIT: login - Test login event\n"}, "teardown": {"duration": 0.00014466699212789536, "outcome": "passed"}}, {"nodeid": "core/test_audit_service.py::TestAuditService::test_log_login", "lineno": 153, "outcome": "passed", "keywords": ["test_log_login", "__wrapped__", "patchings", "TestAuditService", "test_audit_service.py", "core", "tests", ""], "setup": {"duration": 0.0006100829923525453, "outcome": "passed"}, "call": {"duration": 0.0018557080038590357, "outcome": "passed", "stderr": "INFO 2025-03-18 16:03:47,847 signals 9702 8674591296 New user created: testuser\nINFO 2025-03-18 16:03:47,847 services 9702 8674591296 AUDIT: user_created - User 'testuser' created\n"}, "teardown": {"duration": 0.000164708006195724, "outcome": "passed"}}, {"nodeid": "core/test_audit_service.py::TestAuditService::test_log_logout", "lineno": 175, "outcome": "passed", "keywords": ["test_log_logout", "__wrapped__", "patchings", "TestAuditService", "test_audit_service.py", "core", "tests", ""], "setup": {"duration": 0.0005072919884696603, "outcome": "passed"}, "call": {"duration": 0.0018430419877404347, "outcome": "passed", "stderr": "INFO 2025-03-18 16:03:47,850 signals 9702 8674591296 New user created: testuser\nINFO 2025-03-18 16:03:47,850 services 9702 8674591296 AUDIT: user_created - User 'testuser' created\n"}, "teardown": {"duration": 0.000167042002431117, "outcome": "passed"}}, {"nodeid": "core/test_audit_service.py::TestAuditService::test_log_password_change", "lineno": 183, "outcome": "passed", "keywords": ["test_log_password_change", "__wrapped__", "patchings", "TestAuditService", "test_audit_service.py", "core", "tests", ""], "setup": {"duration": 0.0008689589885761961, "outcome": "passed"}, "call": {"duration": 0.0016156660130945966, "outcome": "passed", "stderr": "INFO 2025-03-18 16:03:47,853 signals 9702 8674591296 New user created: testuser\nINFO 2025-03-18 16:03:47,853 services 9702 8674591296 AUDIT: user_created - User 'testuser' created\n"}, "teardown": {"duration": 0.00018025000463239849, "outcome": "passed"}}, {"nodeid": "core/test_audit_service.py::TestAuditService::test_log_password_reset", "lineno": 194, "outcome": "passed", "keywords": ["test_log_password_reset", "__wrapped__", "patchings", "TestAuditService", "test_audit_service.py", "core", "tests", ""], "setup": {"duration": 0.0004723750025732443, "outcome": "passed"}, "call": {"duration": 0.001713332996587269, "outcome": "passed", "stderr": "INFO 2025-03-18 16:03:47,856 signals 9702 8674591296 New user created: testuser\nINFO 2025-03-18 16:03:47,856 services 9702 8674591296 AUDIT: user_created - User 'testuser' created\n"}, "teardown": {"duration": 0.00015379200340248644, "outcome": "passed"}}, {"nodeid": "core/test_audit_service.py::TestAuditService::test_log_permission_change", "lineno": 255, "outcome": "passed", "keywords": ["test_log_permission_change", "__wrapped__", "patchings", "TestAuditService", "test_audit_service.py", "core", "tests", ""], "setup": {"duration": 0.0004980410012649372, "outcome": "passed"}, "call": {"duration": 0.0022474160068668425, "outcome": "passed", "stderr": "INFO 2025-03-18 16:03:47,859 signals 9702 8674591296 New user created: testuser\nINFO 2025-03-18 16:03:47,859 services 9702 8674591296 AUDIT: user_created - User 'testuser' created\nINFO 2025-03-18 16:03:47,860 signals 9702 8674591296 New user created: permissionuser\n"}, "teardown": {"duration": 0.00014662501052953303, "outcome": "passed"}}, {"nodeid": "core/test_audit_service.py::TestAuditService::test_log_user_created", "lineno": 205, "outcome": "passed", "keywords": ["test_log_user_created", "__wrapped__", "patchings", "TestAuditService", "test_audit_service.py", "core", "tests", ""], "setup": {"duration": 0.0004720419965451583, "outcome": "passed"}, "call": {"duration": 0.0021290419972501695, "outcome": "passed", "stderr": "INFO 2025-03-18 16:03:47,863 signals 9702 8674591296 New user created: testuser\nINFO 2025-03-18 16:03:47,863 services 9702 8674591296 AUDIT: user_created - User 'testuser' created\nINFO 2025-03-18 16:03:47,864 signals 9702 8674591296 New user created: newuser\n"}, "teardown": {"duration": 0.00016312499064952135, "outcome": "passed"}}, {"nodeid": "core/test_audit_service.py::TestAuditService::test_log_user_updated", "lineno": 221, "outcome": "passed", "keywords": ["test_log_user_updated", "__wrapped__", "patchings", "TestAuditService", "test_audit_service.py", "core", "tests", ""], "setup": {"duration": 0.0005081249983049929, "outcome": "passed"}, "call": {"duration": 0.0026708329969551414, "outcome": "passed", "stderr": "INFO 2025-03-18 16:03:47,866 signals 9702 8674591296 New user created: testuser\nINFO 2025-03-18 16:03:47,866 services 9702 8674591296 AUDIT: user_created - User 'testuser' created\nINFO 2025-03-18 16:03:47,868 signals 9702 8674591296 New user created: updateduser\n"}, "teardown": {"duration": 0.0005117920081829652, "outcome": "passed"}}, {"nodeid": "core/test_middleware.py::TestDatabaseConnectionMiddleware::test_db_error_handling_for_api_paths", "lineno": 111, "outcome": "passed", "keywords": ["test_db_error_handling_for_api_paths", "TestDatabaseConnectionMiddleware", "test_middleware.py", "core", "tests", ""], "setup": {"duration": 0.0007804169872542843, "outcome": "passed"}, "call": {"duration": 0.0012529579980764538, "outcome": "passed", "stderr": "ERROR 2025-03-18 16:03:47,870 middleware 9702 8674591296 Database error: Test error\n"}, "teardown": {"duration": 0.00015845899179112166, "outcome": "passed"}}, {"nodeid": "core/test_middleware.py::TestDatabaseConnectionMiddleware::test_db_error_handling_for_regular_paths", "lineno": 95, "outcome": "passed", "keywords": ["test_db_error_handling_for_regular_paths", "TestDatabaseConnectionMiddleware", "test_middleware.py", "core", "tests", ""], "setup": {"duration": 0.0004937090125167742, "outcome": "passed"}, "call": {"duration": 0.0004959170037182048, "outcome": "passed", "stderr": "ERROR 2025-03-18 16:03:47,873 middleware 9702 8674591296 Database error: Test error\n"}, "teardown": {"duration": 0.00014279100287239999, "outcome": "passed"}}, {"nodeid": "core/test_middleware.py::TestDatabaseConnectionMiddleware::test_health_check_endpoint", "lineno": 37, "outcome": "passed", "keywords": ["test_health_check_endpoint", "TestDatabaseConnectionMiddleware", "test_middleware.py", "core", "tests", ""], "setup": {"duration": 0.0004642080020857975, "outcome": "passed"}, "call": {"duration": 0.0013310420035850257, "outcome": "passed"}, "teardown": {"duration": 0.00015633399016223848, "outcome": "passed"}}, {"nodeid": "core/test_middleware.py::TestDatabaseConnectionMiddleware::test_health_check_environment_info", "lineno": 130, "outcome": "passed", "keywords": ["test_health_check_environment_info", "__wrapped__", "patchings", "TestDatabaseConnectionMiddleware", "test_middleware.py", "core", "tests", ""], "setup": {"duration": 0.0004927909903926775, "outcome": "passed"}, "call": {"duration": 0.002320791012607515, "outcome": "passed"}, "teardown": {"duration": 0.0001686249888734892, "outcome": "passed"}}, {"nodeid": "core/test_middleware.py::TestDatabaseConnectionMiddleware::test_health_check_missing_settings", "lineno": 148, "outcome": "passed", "keywords": ["test_health_check_missing_settings", "__wrapped__", "patchings", "TestDatabaseConnectionMiddleware", "test_middleware.py", "core", "tests", ""], "setup": {"duration": 0.00053570800810121, "outcome": "passed"}, "call": {"duration": 0.0023213329986901954, "outcome": "passed"}, "teardown": {"duration": 0.00014925000141374767, "outcome": "passed"}}, {"nodeid": "core/test_middleware.py::TestDatabaseConnectionMiddleware::test_health_check_with_db_error", "lineno": 56, "outcome": "passed", "keywords": ["test_health_check_with_db_error", "TestDatabaseConnectionMiddleware", "test_middleware.py", "core", "tests", ""], "setup": {"duration": 0.0004893750010523945, "outcome": "passed"}, "call": {"duration": 0.0009512499964330345, "outcome": "passed", "stderr": "ERROR 2025-03-18 16:03:47,885 middleware 9702 8674591296 Database health check failed: Test DB error\n"}, "teardown": {"duration": 0.00015779200475662947, "outcome": "passed"}}, {"nodeid": "core/test_middleware.py::TestDatabaseConnectionMiddleware::test_normal_request_flow", "lineno": 29, "outcome": "passed", "keywords": ["test_normal_request_flow", "TestDatabaseConnectionMiddleware", "test_middleware.py", "core", "tests", ""], "setup": {"duration": 0.0005214999982854351, "outcome": "passed"}, "call": {"duration": 0.00041812499694060534, "outcome": "passed"}, "teardown": {"duration": 0.00014858299982734025, "outcome": "passed"}}, {"nodeid": "core/test_middleware.py::TestDatabaseConnectionMiddleware::test_static_file_paths", "lineno": 79, "outcome": "passed", "keywords": ["test_static_file_paths", "TestDatabaseConnectionMiddleware", "test_middleware.py", "core", "tests", ""], "setup": {"duration": 0.00048400000378023833, "outcome": "passed"}, "call": {"duration": 0.0005024999991292134, "outcome": "passed"}, "teardown": {"duration": 0.00038787499943282455, "outcome": "passed"}}, {"nodeid": "core/test_middleware.py::TestAuthExemptMiddleware::test_auth_exempt_paths", "lineno": 184, "outcome": "passed", "keywords": ["test_auth_exempt_paths", "TestAuthExemptMiddleware", "test_middleware.py", "core", "tests", ""], "setup": {"duration": 0.0008191249944502488, "outcome": "passed"}, "call": {"duration": 0.0005432500038295984, "outcome": "passed"}, "teardown": {"duration": 0.00013920800120104104, "outcome": "passed"}}, {"nodeid": "core/test_middleware.py::TestAuthExemptMiddleware::test_auth_exempt_response_handling", "lineno": 236, "outcome": "passed", "keywords": ["test_auth_exempt_response_handling", "__wrapped__", "TestAuthExemptMiddleware", "test_middleware.py", "core", "tests", ""], "setup": {"duration": 0.0005181250016903505, "outcome": "passed"}, "call": {"duration": 0.0017698750016279519, "outcome": "passed"}, "teardown": {"duration": 0.00017733400454744697, "outcome": "passed"}}, {"nodeid": "core/test_middleware.py::TestAuthExemptMiddleware::test_auth_exempt_with_custom_response", "lineno": 268, "outcome": "passed", "keywords": ["test_auth_exempt_with_custom_response", "TestAuthExemptMiddleware", "test_middleware.py", "core", "tests", ""], "setup": {"duration": 0.00046800001291558146, "outcome": "passed"}, "call": {"duration": 0.000384749990189448, "outcome": "passed"}, "teardown": {"duration": 0.0001376670115860179, "outcome": "passed"}}, {"nodeid": "core/test_middleware.py::TestAuthExemptMiddleware::test_non_auth_response_handling", "lineno": 256, "outcome": "passed", "keywords": ["test_non_auth_response_handling", "TestAuthExemptMiddleware", "test_middleware.py", "core", "tests", ""], "setup": {"duration": 0.00047562499821651727, "outcome": "passed"}, "call": {"duration": 0.00034500000765547156, "outcome": "passed"}, "teardown": {"duration": 0.00016579199291300029, "outcome": "passed"}}, {"nodeid": "core/test_middleware.py::TestAuthExemptMiddleware::test_non_exempt_paths", "lineno": 215, "outcome": "passed", "keywords": ["test_non_exempt_paths", "TestAuthExemptMiddleware", "test_middleware.py", "core", "tests", ""], "setup": {"duration": 0.0004908330010948703, "outcome": "passed"}, "call": {"duration": 0.0004547079879557714, "outcome": "passed"}, "teardown": {"duration": 0.00028050001128576696, "outcome": "passed"}}, {"nodeid": "core/test_models.py::TestAuditLogModel::test_additional_data_storage", "lineno": 131, "outcome": "passed", "keywords": ["test_additional_data_storage", "TestAuditLogModel", "test_models.py", "core", "tests", ""], "setup": {"duration": 0.0006797079986426979, "outcome": "passed"}, "call": {"duration": 0.032665916995028965, "outcome": "passed", "stderr": "INFO 2025-03-18 16:03:47,902 signals 9702 8674591296 New user created: testuser\nINFO 2025-03-18 16:03:47,902 services 9702 8674591296 AUDIT: user_created - User 'testuser' created\n"}, "teardown": {"duration": 0.00019120800425298512, "outcome": "passed"}}, {"nodeid": "core/test_models.py::TestAuditLogModel::test_audit_log_creation", "lineno": 35, "outcome": "passed", "keywords": ["test_audit_log_creation", "TestAuditLogModel", "test_models.py", "core", "tests", ""], "setup": {"duration": 0.0005544169980566949, "outcome": "passed"}, "call": {"duration": 0.03669562500726897, "outcome": "passed", "stderr": "INFO 2025-03-18 16:03:47,936 signals 9702 8674591296 New user created: testuser\nINFO 2025-03-18 16:03:47,936 services 9702 8674591296 AUDIT: user_created - User 'testuser' created\n"}, "teardown": {"duration": 0.00022845900093670934, "outcome": "passed"}}, {"nodeid": "core/test_models.py::TestAuditLogModel::test_audit_log_str_method", "lineno": 69, "outcome": "passed", "keywords": ["test_audit_log_str_method", "TestAuditLogModel", "test_models.py", "core", "tests", ""], "setup": {"duration": 0.0007259999983943999, "outcome": "passed"}, "call": {"duration": 0.02997033399879001, "outcome": "passed", "stderr": "INFO 2025-03-18 16:03:47,974 signals 9702 8674591296 New user created: testuser\nINFO 2025-03-18 16:03:47,975 services 9702 8674591296 AUDIT: user_created - User 'testuser' created\n"}, "teardown": {"duration": 0.00020116700034122914, "outcome": "passed"}}, {"nodeid": "core/test_models.py::TestAuditLogModel::test_event_type_choices", "lineno": 159, "outcome": "passed", "keywords": ["test_event_type_choices", "TestAuditLogModel", "test_models.py", "core", "tests", ""], "setup": {"duration": 0.000517250009579584, "outcome": "passed"}, "call": {"duration": 0.03266425000037998, "outcome": "passed", "stderr": "INFO 2025-03-18 16:03:48,006 signals 9702 8674591296 New user created: testuser\nINFO 2025-03-18 16:03:48,006 services 9702 8674591296 AUDIT: user_created - User 'testuser' created\n"}, "teardown": {"duration": 0.00023108300229068846, "outcome": "passed"}}, {"nodeid": "core/test_models.py::TestAuditLogModel::test_related_object_tracking", "lineno": 109, "outcome": "passed", "keywords": ["test_related_object_tracking", "TestAuditLogModel", "test_models.py", "core", "tests", ""], "setup": {"duration": 0.0005262089980533347, "outcome": "passed"}, "call": {"duration": 0.032328708010027185, "outcome": "passed", "stderr": "INFO 2025-03-18 16:03:48,040 signals 9702 8674591296 New user created: testuser\nINFO 2025-03-18 16:03:48,040 services 9702 8674591296 AUDIT: user_created - User 'testuser' created\nINFO 2025-03-18 16:03:48,041 signals 9702 8674591296 New user created: related_user\nINFO 2025-03-18 16:03:48,042 services 9702 8674591296 AUDIT: user_created - User 'related_user' created\n"}, "teardown": {"duration": 0.0002692499983822927, "outcome": "passed"}}, {"nodeid": "core/test_models.py::TestAuditLogModel::test_username_auto_population", "lineno": 88, "outcome": "passed", "keywords": ["test_username_auto_population", "TestAuditLogModel", "test_models.py", "core", "tests", ""], "setup": {"duration": 0.0008059999963734299, "outcome": "passed"}, "call": {"duration": 0.04378154099686071, "outcome": "passed", "stderr": "INFO 2025-03-18 16:03:48,075 signals 9702 8674591296 New user created: testuser\nINFO 2025-03-18 16:03:48,075 services 9702 8674591296 AUDIT: user_created - User 'testuser' created\n"}, "teardown": {"duration": 0.00037854201218578964, "outcome": "passed"}}, {"nodeid": "core/business/test_product_validation.py::TestProductValidation::test_sku_uniqueness_validation", "lineno": 25, "outcome": "passed", "keywords": ["test_sku_uniqueness_validation", "TestProductValidation", "test_product_validation.py", "business", "core", "tests", ""], "setup": {"duration": 0.0010894580045714974, "outcome": "passed"}, "call": {"duration": 0.0006672919989796355, "outcome": "passed"}, "teardown": {"duration": 0.00019833300029858947, "outcome": "passed"}}, {"nodeid": "core/business/test_product_validation.py::TestProductValidation::test_parent_variant_validation", "lineno": 56, "outcome": "passed", "keywords": ["test_parent_variant_validation", "TestProductValidation", "test_product_validation.py", "business", "core", "tests", ""], "setup": {"duration": 0.0015382499987026677, "outcome": "passed"}, "call": {"duration": 0.000235083993175067, "outcome": "passed"}, "teardown": {"duration": 0.0002184160111937672, "outcome": "passed"}}, {"nodeid": "core/business/test_product_validation.py::TestProductValidation::test_price_validation", "lineno": 69, "outcome": "passed", "keywords": ["test_price_validation", "TestProductValidation", "test_product_validation.py", "business", "core", "tests", ""], "setup": {"duration": 0.0004839999892283231, "outcome": "passed"}, "call": {"duration": 0.00012445799075067043, "outcome": "passed"}, "teardown": {"duration": 0.00017412500164937228, "outcome": "passed"}}, {"nodeid": "core/business/test_product_validation.py::TestProductValidation::test_price_range_validation", "lineno": 82, "outcome": "passed", "keywords": ["test_price_range_validation", "TestProductValidation", "test_product_validation.py", "business", "core", "tests", ""], "setup": {"duration": 0.0005758340121246874, "outcome": "passed"}, "call": {"duration": 0.00012395798694342375, "outcome": "passed"}, "teardown": {"duration": 0.00018162500055041164, "outcome": "passed"}}, {"nodeid": "core/business/test_product_validation.py::TestProductCategoryValidation::test_category_code_uniqueness", "lineno": 99, "outcome": "passed", "keywords": ["test_category_code_uniqueness", "TestProductCategoryValidation", "test_product_validation.py", "business", "core", "tests", ""], "setup": {"duration": 0.0005160000000614673, "outcome": "passed"}, "call": {"duration": 0.0004287920019123703, "outcome": "passed"}, "teardown": {"duration": 0.00015300000086426735, "outcome": "passed"}}, {"nodeid": "core/business/test_product_validation.py::TestProductImageValidation::test_image_url_validation", "lineno": 134, "outcome": "passed", "keywords": ["test_image_url_validation", "TestProductImageValidation", "test_product_validation.py", "business", "core", "tests", ""], "setup": {"duration": 0.0005174999969312921, "outcome": "passed"}, "call": {"duration": 0.00012458300625439733, "outcome": "passed"}, "teardown": {"duration": 0.0001429999974789098, "outcome": "passed"}}, {"nodeid": "core/business/test_product_validation.py::TestProductImageValidation::test_primary_image_validation", "lineno": 146, "outcome": "passed", "keywords": ["test_primary_image_validation", "TestProductImageValidation", "test_product_validation.py", "business", "core", "tests", ""], "setup": {"duration": 0.00044804099889006466, "outcome": "passed"}, "call": {"duration": 0.0001125410053646192, "outcome": "passed"}, "teardown": {"duration": 0.0001462499931221828, "outcome": "passed"}}, {"nodeid": "core/business/test_products.py::TestProductModelValidation::test_validate_product_model_valid", "lineno": 182, "outcome": "passed", "keywords": ["test_validate_product_model_valid", "TestProductModelValidation", "test_products.py", "business", "core", "tests", ""], "setup": {"duration": 0.0005413329927250743, "outcome": "passed"}, "call": {"duration": 0.00031125001260079443, "outcome": "passed"}, "teardown": {"duration": 0.00014966700109653175, "outcome": "passed"}}, {"nodeid": "core/business/test_products.py::TestProductModelValidation::test_validate_product_model_invalid_sku", "lineno": 192, "outcome": "passed", "keywords": ["test_validate_product_model_invalid_sku", "TestProductModelValidation", "test_products.py", "business", "core", "tests", ""], "setup": {"duration": 0.0005690830003004521, "outcome": "passed"}, "call": {"duration": 0.0003861250006593764, "outcome": "passed"}, "teardown": {"duration": 0.0002040410035988316, "outcome": "passed"}}, {"nodeid": "core/business/test_products.py::TestProductModelValidation::test_validate_product_model_parent_with_variant", "lineno": 202, "outcome": "passed", "keywords": ["test_validate_product_model_parent_with_variant", "TestProductModelValidation", "test_products.py", "business", "core", "tests", ""], "setup": {"duration": 0.0005787090049125254, "outcome": "passed"}, "call": {"duration": 0.000549250005860813, "outcome": "passed"}, "teardown": {"duration": 0.00023454200709238648, "outcome": "passed"}}, {"nodeid": "core/business/test_sales.py::TestSalesStatusFunction::test_get_sales_status_general_exception", "lineno": 49, "outcome": "passed", "keywords": ["test_get_sales_status_general_exception", "__wrapped__", "patchings", "TestSalesStatusFunction", "test_sales.py", "business", "core", "tests", ""], "setup": {"duration": 0.000610957999015227, "outcome": "passed"}, "call": {"duration": 0.00047091599844861776, "outcome": "passed"}, "teardown": {"duration": 0.00024195900186896324, "outcome": "passed"}}, {"nodeid": "core/business/test_sales.py::TestSalesStatusFunction::test_get_sales_status_operational_error", "lineno": 35, "outcome": "passed", "keywords": ["test_get_sales_status_operational_error", "__wrapped__", "patchings", "TestSalesStatusFunction", "test_sales.py", "business", "core", "tests", ""], "setup": {"duration": 0.0004565419949358329, "outcome": "passed"}, "call": {"duration": 0.00034012501419056207, "outcome": "passed"}, "teardown": {"duration": 0.0001388749951729551, "outcome": "passed"}}, {"nodeid": "core/business/test_sales.py::TestSalesStatusFunction::test_get_sales_status_success", "lineno": 20, "outcome": "passed", "keywords": ["test_get_sales_status_success", "__wrapped__", "patchings", "TestSalesStatusFunction", "test_sales.py", "business", "core", "tests", ""], "setup": {"duration": 0.00046795800153631717, "outcome": "passed"}, "call": {"duration": 0.0005948749894741923, "outcome": "passed"}, "teardown": {"duration": 0.00017958400712814182, "outcome": "passed"}}, {"nodeid": "core/business/test_sales_api.py::TestDummySalesViewSet::test_list", "lineno": 14, "outcome": "passed", "keywords": ["test_list", "TestDummySalesViewSet", "test_sales_api.py", "business", "core", "tests", ""], "setup": {"duration": 0.0005048329912824556, "outcome": "passed"}, "call": {"duration": 0.00019720799173228443, "outcome": "passed"}, "teardown": {"duration": 0.00013587500143330544, "outcome": "passed"}}, {"nodeid": "core/business/test_sales_api.py::TestDummySalesViewSet::test_retrieve", "lineno": 20, "outcome": "passed", "keywords": ["test_retrieve", "TestDummySalesViewSet", "test_sales_api.py", "business", "core", "tests", ""], "setup": {"duration": 0.0004551250021904707, "outcome": "passed"}, "call": {"duration": 0.00015925000479910523, "outcome": "passed"}, "teardown": {"duration": 0.00013337499694898725, "outcome": "passed"}}, {"nodeid": "core/business/test_sales_api.py::TestDummySalesViewSet::test_retrieve_default_pk", "lineno": 29, "outcome": "passed", "keywords": ["test_retrieve_default_pk", "TestDummySalesViewSet", "test_sales_api.py", "business", "core", "tests", ""], "setup": {"duration": 0.0006221660005394369, "outcome": "passed"}, "call": {"duration": 0.00017795800522435457, "outcome": "passed"}, "teardown": {"duration": 0.00019075001182500273, "outcome": "passed"}}, {"nodeid": "core/business/test_sales_api.py::TestApiVersion::test_api_version_format", "lineno": 42, "outcome": "passed", "keywords": ["test_api_version_format", "TestApiVersion", "test_sales_api.py", "business", "core", "tests", ""], "setup": {"duration": 0.0005264999927021563, "outcome": "passed"}, "call": {"duration": 0.00014516699593514204, "outcome": "passed"}, "teardown": {"duration": 0.00015345800784416497, "outcome": "passed"}}, {"nodeid": "core/business/test_sales_views.py::TestViewSet::test_docstring", "lineno": 19, "outcome": "passed", "keywords": ["test_docstring", "TestViewSet", "test_sales_views.py", "business", "core", "tests", ""], "setup": {"duration": 0.000520166999194771, "outcome": "passed"}, "call": {"duration": 0.00013658299576491117, "outcome": "passed"}, "teardown": {"duration": 0.00013420800678431988, "outcome": "passed"}}, {"nodeid": "core/business/test_sales_views.py::TestViewSet::test_viewset_init", "lineno": 14, "outcome": "passed", "keywords": ["test_viewset_init", "TestViewSet", "test_sales_views.py", "business", "core", "tests", ""], "setup": {"duration": 0.0004499159986153245, "outcome": "passed"}, "call": {"duration": 0.00012091599637642503, "outcome": "passed"}, "teardown": {"duration": 0.00016612499894108623, "outcome": "passed"}}, {"nodeid": "core/test_compound_business_validator.py::TestBusinessRuleValidator::test_business_rule_validator_with_function", "lineno": 20, "outcome": "passed", "keywords": ["test_business_rule_validator_with_function", "TestBusinessRuleValidator", "test_compound_business_validator.py", "core", "tests", ""], "setup": {"duration": 0.0004641660052584484, "outcome": "passed"}, "call": {"duration": 0.00014041599933989346, "outcome": "passed"}, "teardown": {"duration": 0.00012908400094602257, "outcome": "passed"}}, {"nodeid": "core/test_compound_business_validator.py::TestBusinessRuleValidator::test_business_rule_validator_with_lambda", "lineno": 46, "outcome": "passed", "keywords": ["test_business_rule_validator_with_lambda", "TestBusinessRuleValidator", "test_compound_business_validator.py", "core", "tests", ""], "setup": {"duration": 0.00041287500062026083, "outcome": "passed"}, "call": {"duration": 0.00012441599392332137, "outcome": "passed"}, "teardown": {"duration": 0.00013458399916999042, "outcome": "passed"}}, {"nodeid": "core/test_compound_business_validator.py::TestBusinessRuleValidator::test_business_rule_validator_with_context", "lineno": 66, "outcome": "passed", "keywords": ["test_business_rule_validator_with_context", "TestBusinessRuleValidator", "test_compound_business_validator.py", "core", "tests", ""], "setup": {"duration": 0.0004203749995213002, "outcome": "passed"}, "call": {"duration": 0.00011895899660885334, "outcome": "passed"}, "teardown": {"duration": 0.00014841699157841504, "outcome": "passed"}}, {"nodeid": "core/test_compound_business_validator.py::TestCompoundValidator::test_compound_validator_not_require_all", "lineno": 93, "outcome": "passed", "keywords": ["test_compound_validator_not_require_all", "TestCompoundValidator", "test_compound_business_validator.py", "core", "tests", ""], "setup": {"duration": 0.0004888340044999495, "outcome": "passed"}, "call": {"duration": 0.00022958400950301439, "outcome": "passed"}, "teardown": {"duration": 0.00013458299508783966, "outcome": "passed"}}, {"nodeid": "core/test_compound_business_validator.py::TestCompoundValidator::test_compound_validator_custom_error_message", "lineno": 132, "outcome": "passed", "keywords": ["test_compound_validator_custom_error_message", "TestCompoundValidator", "test_compound_business_validator.py", "core", "tests", ""], "setup": {"duration": 0.0004452919965842739, "outcome": "passed"}, "call": {"duration": 0.00013058299373369664, "outcome": "passed"}, "teardown": {"duration": 0.00013937499898020178, "outcome": "passed"}}, {"nodeid": "core/test_compound_business_validator.py::TestCompoundValidator::test_compound_validator_empty_validators_list", "lineno": 150, "outcome": "passed", "keywords": ["test_compound_validator_empty_validators_list", "TestCompoundValidator", "test_compound_business_validator.py", "core", "tests", ""], "setup": {"duration": 0.0004464169905986637, "outcome": "passed"}, "call": {"duration": 0.0001188750029541552, "outcome": "passed"}, "teardown": {"duration": 0.00018087499483954161, "outcome": "passed"}}, {"nodeid": "core/test_import_validator.py::TestImportValidator::test_init", "lineno": 52, "outcome": "passed", "keywords": ["test_init", "TestImportValidator", "test_import_validator.py", "core", "tests", ""], "setup": {"duration": 0.0004594169877236709, "outcome": "passed"}, "call": {"duration": 0.0001168750022770837, "outcome": "passed"}, "teardown": {"duration": 0.00021708400163333863, "outcome": "passed"}}, {"nodeid": "core/test_import_validator.py::TestImportValidator::test_validate_row_success", "lineno": 62, "outcome": "passed", "keywords": ["test_validate_row_success", "TestImportValidator", "test_import_validator.py", "core", "tests", ""], "setup": {"duration": 0.0004853749996982515, "outcome": "passed"}, "call": {"duration": 0.00016445798974018544, "outcome": "passed"}, "teardown": {"duration": 0.00014041700342204422, "outcome": "passed"}}, {"nodeid": "core/test_import_validator.py::TestImportValidator::test_validate_row_with_field_error", "lineno": 75, "outcome": "passed", "keywords": ["test_validate_row_with_field_error", "TestImportValidator", "test_import_validator.py", "core", "tests", ""], "setup": {"duration": 0.0004869169933954254, "outcome": "passed"}, "call": {"duration": 0.00016495899762958288, "outcome": "passed"}, "teardown": {"duration": 0.0001362080074613914, "outcome": "passed"}}, {"nodeid": "core/test_import_validator.py::TestImportValidator::test_validate_row_with_field_warning", "lineno": 86, "outcome": "passed", "keywords": ["test_validate_row_with_field_warning", "TestImportValidator", "test_import_validator.py", "core", "tests", ""], "setup": {"duration": 0.0004412499984027818, "outcome": "passed"}, "call": {"duration": 0.00012737500946968794, "outcome": "passed"}, "teardown": {"duration": 0.00012725000851787627, "outcome": "passed"}}, {"nodeid": "core/test_import_validator.py::TestImportValidator::test_validate_row_with_strict_mode", "lineno": 97, "outcome": "passed", "keywords": ["test_validate_row_with_strict_mode", "TestImportValidator", "test_import_validator.py", "core", "tests", ""], "setup": {"duration": 0.00046275000204332173, "outcome": "passed"}, "call": {"duration": 0.00012512500688899308, "outcome": "passed"}, "teardown": {"duration": 0.00013312500959727913, "outcome": "passed"}}, {"nodeid": "core/test_import_validator.py::TestImportValidator::test_validate_row_with_cross_validation", "lineno": 108, "outcome": "passed", "keywords": ["test_validate_row_with_cross_validation", "TestImportValidator", "test_import_validator.py", "core", "tests", ""], "setup": {"duration": 0.0005043749988544732, "outcome": "passed"}, "call": {"duration": 0.00027641700580716133, "outcome": "passed"}, "teardown": {"duration": 0.00016016699373722076, "outcome": "passed"}}, {"nodeid": "core/test_import_validator.py::TestImportValidator::test_validate_row_with_exception", "lineno": 119, "outcome": "passed", "keywords": ["test_validate_row_with_exception", "TestImportValidator", "test_import_validator.py", "core", "tests", ""], "setup": {"duration": 0.00047450000420212746, "outcome": "passed"}, "call": {"duration": 0.00015912500384729356, "outcome": "passed"}, "teardown": {"duration": 0.00013737499830313027, "outcome": "passed"}}, {"nodeid": "core/test_import_validator.py::TestImportValidator::test_validate_row_with_skip_exception", "lineno": 134, "outcome": "passed", "keywords": ["test_validate_row_with_skip_exception", "TestImportValidator", "test_import_validator.py", "core", "tests", ""], "setup": {"duration": 0.00044662499567493796, "outcome": "passed"}, "call": {"duration": 0.0001772499963408336, "outcome": "passed"}, "teardown": {"duration": 0.00023558401153422892, "outcome": "passed"}}, {"nodeid": "core/test_import_validator.py::TestImportValidator::test_post_validate_row", "lineno": 148, "outcome": "passed", "keywords": ["test_post_validate_row", "TestImportValidator", "test_import_validator.py", "core", "tests", ""], "setup": {"duration": 0.0004622919950634241, "outcome": "passed"}, "call": {"duration": 0.00012745900312438607, "outcome": "passed"}, "teardown": {"duration": 0.00020904200209770352, "outcome": "passed"}}, {"nodeid": "core/test_validation.py::TestValidatedForm::test_form_valid", "lineno": 208, "outcome": "passed", "keywords": ["test_form_valid", "TestValidatedForm", "test_validation.py", "core", "tests", ""], "setup": {"duration": 0.0005122500006109476, "outcome": "passed"}, "call": {"duration": 0.00015720799274276942, "outcome": "passed"}, "teardown": {"duration": 0.00013258300896268338, "outcome": "passed"}}, {"nodeid": "core/test_validation.py::TestValidatedForm::test_form_invalid_field", "lineno": 221, "outcome": "passed", "keywords": ["test_form_invalid_field", "TestValidatedForm", "test_validation.py", "core", "tests", ""], "setup": {"duration": 0.00046037501306273043, "outcome": "passed"}, "call": {"duration": 0.00013154199405107647, "outcome": "passed"}, "teardown": {"duration": 0.0001347920042462647, "outcome": "passed"}}, {"nodeid": "core/test_validation.py::TestValidatedForm::test_form_invalid_multiple_fields", "lineno": 235, "outcome": "passed", "keywords": ["test_form_invalid_multiple_fields", "TestValidatedForm", "test_validation.py", "core", "tests", ""], "setup": {"duration": 0.00046070800453890115, "outcome": "passed"}, "call": {"duration": 0.00012333301128819585, "outcome": "passed"}, "teardown": {"duration": 0.0001320000010309741, "outcome": "passed"}}, {"nodeid": "core/test_validation.py::TestValidatedForm::test_form_level_validation", "lineno": 250, "outcome": "passed", "keywords": ["test_form_level_validation", "TestValidatedForm", "test_validation.py", "core", "tests", ""], "setup": {"duration": 0.0005025419959565625, "outcome": "passed"}, "call": {"duration": 0.00013741699513047934, "outcome": "passed"}, "teardown": {"duration": 0.00017220799054484814, "outcome": "passed"}}, {"nodeid": "core/test_validation.py::TestValidatedModelForm::test_model_form_valid", "lineno": 320, "outcome": "passed", "keywords": ["test_model_form_valid", "TestValidatedModelForm", "test_validation.py", "core", "tests", ""], "setup": {"duration": 0.00052299999515526, "outcome": "passed"}, "call": {"duration": 0.0001447910035494715, "outcome": "passed"}, "teardown": {"duration": 0.00015333401097450405, "outcome": "passed"}}, {"nodeid": "core/test_validation.py::TestValidatedModelForm::test_model_form_invalid_field", "lineno": 327, "outcome": "passed", "keywords": ["test_model_form_invalid_field", "TestValidatedModelForm", "test_validation.py", "core", "tests", ""], "setup": {"duration": 0.0005166250048205256, "outcome": "passed"}, "call": {"duration": 0.00013000000035390258, "outcome": "passed"}, "teardown": {"duration": 0.0001449999981559813, "outcome": "passed"}}, {"nodeid": "core/test_validation.py::TestValidatedModelForm::test_model_form_partial_data", "lineno": 337, "outcome": "passed", "keywords": ["test_model_form_partial_data", "TestValidatedModelForm", "test_validation.py", "core", "tests", ""], "setup": {"duration": 0.0004268329939804971, "outcome": "passed"}, "call": {"duration": 0.00011666699720080942, "outcome": "passed"}, "teardown": {"duration": 0.00014837499475106597, "outcome": "passed"}}, {"nodeid": "core/test_validation.py::TestRegexValidator::test_regex_validator_valid", "lineno": 355, "outcome": "passed", "keywords": ["test_regex_validator_valid", "TestRegexValidator", "test_validation.py", "core", "tests", ""], "setup": {"duration": 0.000502417009556666, "outcome": "passed"}, "call": {"duration": 0.0001083329989342019, "outcome": "passed"}, "teardown": {"duration": 0.0001367499935440719, "outcome": "passed"}}, {"nodeid": "core/test_validation.py::TestRegexValidator::test_regex_validator_invalid", "lineno": 366, "outcome": "passed", "keywords": ["test_regex_validator_invalid", "TestRegexValidator", "test_validation.py", "core", "tests", ""], "setup": {"duration": 0.000433082997915335, "outcome": "passed"}, "call": {"duration": 0.00010350000229664147, "outcome": "passed"}, "teardown": {"duration": 0.00013862499326933175, "outcome": "passed"}}, {"nodeid": "core/test_validation.py::TestEmailValidator::test_email_validator_valid", "lineno": 381, "outcome": "passed", "keywords": ["test_email_validator_valid", "TestEmailValidator", "test_validation.py", "core", "tests", ""], "setup": {"duration": 0.0004475410096347332, "outcome": "passed"}, "call": {"duration": 0.00010254100197926164, "outcome": "passed"}, "teardown": {"duration": 0.00012808298924937844, "outcome": "passed"}}, {"nodeid": "core/test_validation.py::TestEmailValidator::test_email_validator_invalid", "lineno": 392, "outcome": "passed", "keywords": ["test_email_validator_invalid", "TestEmailValidator", "test_validation.py", "core", "tests", ""], "setup": {"duration": 0.00042145799670834094, "outcome": "passed"}, "call": {"duration": 0.00011399999493733048, "outcome": "passed"}, "teardown": {"duration": 0.0001412919955328107, "outcome": "passed"}}, {"nodeid": "core/test_validation.py::TestNumberValidator::test_number_validator_valid", "lineno": 407, "outcome": "passed", "keywords": ["test_number_validator_valid", "TestNumberValidator", "test_validation.py", "core", "tests", ""], "setup": {"duration": 0.0004638329992303625, "outcome": "passed"}, "call": {"duration": 0.00011029100278392434, "outcome": "passed"}, "teardown": {"duration": 0.00024954199034255, "outcome": "passed"}}, {"nodeid": "core/test_validation.py::TestNumberValidator::test_number_validator_invalid", "lineno": 418, "outcome": "passed", "keywords": ["test_number_validator_invalid", "TestNumberValidator", "test_validation.py", "core", "tests", ""], "setup": {"duration": 0.00046637500054202974, "outcome": "passed"}, "call": {"duration": 0.00011400000948924571, "outcome": "passed"}, "teardown": {"duration": 0.00015258298662956804, "outcome": "passed"}}, {"nodeid": "core/test_validation_exceptions.py::TestImportValidationError::test_init_with_single_error", "lineno": 12, "outcome": "passed", "keywords": ["test_init_with_single_error", "TestImportValidationError", "test_validation_exceptions.py", "core", "tests", ""], "setup": {"duration": 0.0005550420028157532, "outcome": "passed"}, "call": {"duration": 0.00015991598775144666, "outcome": "passed"}, "teardown": {"duration": 0.00015862500004004687, "outcome": "passed"}}, {"nodeid": "core/test_validation_exceptions.py::TestImportValidationError::test_init_with_multiple_errors", "lineno": 20, "outcome": "passed", "keywords": ["test_init_with_multiple_errors", "TestImportValidationError", "test_validation_exceptions.py", "core", "tests", ""], "setup": {"duration": 0.0005053749919170514, "outcome": "passed"}, "call": {"duration": 0.00012816600792575628, "outcome": "passed"}, "teardown": {"duration": 0.0001299580035265535, "outcome": "passed"}}, {"nodeid": "core/test_validation_exceptions.py::TestImportValidationError::test_format_errors", "lineno": 33, "outcome": "passed", "keywords": ["test_format_errors", "TestImportValidationError", "test_validation_exceptions.py", "core", "tests", ""], "setup": {"duration": 0.0004239160043653101, "outcome": "passed"}, "call": {"duration": 0.0001135420025093481, "outcome": "passed"}, "teardown": {"duration": 0.00015104100748430938, "outcome": "passed"}}, {"nodeid": "core/test_validation_exceptions.py::TestSkipRowException::test_init_with_reason", "lineno": 47, "outcome": "passed", "keywords": ["test_init_with_reason", "TestSkipRowException", "test_validation_exceptions.py", "core", "tests", ""], "setup": {"duration": 0.00045074999798089266, "outcome": "passed"}, "call": {"duration": 0.00012287500430829823, "outcome": "passed"}, "teardown": {"duration": 0.00013133400352671742, "outcome": "passed"}}, {"nodeid": "core/test_validation_exceptions.py::TestSkipRowException::test_init_without_reason", "lineno": 54, "outcome": "passed", "keywords": ["test_init_without_reason", "TestSkipRowException", "test_validation_exceptions.py", "core", "tests", ""], "setup": {"duration": 0.00043270901369396597, "outcome": "passed"}, "call": {"duration": 0.00010800000745803118, "outcome": "passed"}, "teardown": {"duration": 0.00013916600437369198, "outcome": "passed"}}, {"nodeid": "core/test_validators.py::TestValidationResult::test_initialization", "lineno": 27, "outcome": "passed", "keywords": ["test_initialization", "TestValidationResult", "test_validators.py", "core", "tests", ""], "setup": {"duration": 0.0004834159917663783, "outcome": "passed"}, "call": {"duration": 0.0001381659967591986, "outcome": "passed"}, "teardown": {"duration": 0.0001353330007987097, "outcome": "passed"}}, {"nodeid": "core/test_validators.py::TestValidationResult::test_add_error", "lineno": 35, "outcome": "passed", "keywords": ["test_add_error", "TestValidationResult", "test_validators.py", "core", "tests", ""], "setup": {"duration": 0.0008641250024084002, "outcome": "passed"}, "call": {"duration": 0.00012829199840780348, "outcome": "passed"}, "teardown": {"duration": 0.0001450420095352456, "outcome": "passed"}}, {"nodeid": "core/test_validators.py::TestValidationResult::test_add_warning", "lineno": 51, "outcome": "passed", "keywords": ["test_add_warning", "TestValidationResult", "test_validators.py", "core", "tests", ""], "setup": {"duration": 0.0004549160075839609, "outcome": "passed"}, "call": {"duration": 0.00012195800081826746, "outcome": "passed"}, "teardown": {"duration": 0.00013341600424610078, "outcome": "passed"}}, {"nodeid": "core/test_validators.py::TestValidationResult::test_merge", "lineno": 67, "outcome": "passed", "keywords": ["test_merge", "TestValidationResult", "test_validators.py", "core", "tests", ""], "setup": {"duration": 0.0004309170035412535, "outcome": "passed"}, "call": {"duration": 0.0001336249988526106, "outcome": "passed"}, "teardown": {"duration": 0.00016199999663513154, "outcome": "passed"}}, {"nodeid": "core/test_validators.py::TestRequiredValidator::test_required_validator_with_value", "lineno": 96, "outcome": "passed", "keywords": ["test_required_validator_with_value", "TestRequiredValidator", "test_validators.py", "core", "tests", ""], "setup": {"duration": 0.000646417000098154, "outcome": "passed"}, "call": {"duration": 0.0001307500060647726, "outcome": "passed"}, "teardown": {"duration": 0.0001498339988756925, "outcome": "passed"}}, {"nodeid": "core/test_validators.py::TestRequiredValidator::test_required_validator_without_value", "lineno": 103, "outcome": "passed", "keywords": ["test_required_validator_without_value", "TestRequiredValidator", "test_validators.py", "core", "tests", ""], "setup": {"duration": 0.0005224999913480133, "outcome": "passed"}, "call": {"duration": 0.00014404200192075223, "outcome": "passed"}, "teardown": {"duration": 0.0001446249953005463, "outcome": "passed"}}, {"nodeid": "core/test_validators.py::TestRegexValidator::test_regex_validator_match", "lineno": 125, "outcome": "passed", "keywords": ["test_regex_validator_match", "TestRegexValidator", "test_validators.py", "core", "tests", ""], "setup": {"duration": 0.00047079200157895684, "outcome": "passed"}, "call": {"duration": 0.000446999998530373, "outcome": "passed"}, "teardown": {"duration": 0.00013387500075623393, "outcome": "passed"}}, {"nodeid": "core/test_validators.py::TestRegexValidator::test_regex_validator_no_match", "lineno": 132, "outcome": "passed", "keywords": ["test_regex_validator_no_match", "TestRegexValidator", "test_validators.py", "core", "tests", ""], "setup": {"duration": 0.0004796249995706603, "outcome": "passed"}, "call": {"duration": 0.00011808400449808687, "outcome": "passed"}, "teardown": {"duration": 0.00015866699686739594, "outcome": "passed"}}, {"nodeid": "core/test_validators.py::TestRegexValidator::test_regex_validator_none_value", "lineno": 143, "outcome": "passed", "keywords": ["test_regex_validator_none_value", "TestRegexValidator", "test_validators.py", "core", "tests", ""], "setup": {"duration": 0.0006370839982992038, "outcome": "passed"}, "call": {"duration": 0.0001534589973744005, "outcome": "passed"}, "teardown": {"duration": 0.00016908301040530205, "outcome": "passed"}}, {"nodeid": "core/test_validators.py::TestRangeValidator::test_range_validator_within_range", "lineno": 154, "outcome": "passed", "keywords": ["test_range_validator_within_range", "TestRangeValidator", "test_validators.py", "core", "tests", ""], "setup": {"duration": 0.00048620899906381965, "outcome": "passed"}, "call": {"duration": 0.00012216600589454174, "outcome": "passed"}, "teardown": {"duration": 0.00013408299128059298, "outcome": "passed"}}, {"nodeid": "core/test_validators.py::TestRangeValidator::test_range_validator_below_min", "lineno": 161, "outcome": "passed", "keywords": ["test_range_validator_below_min", "TestRangeValidator", "test_validators.py", "core", "tests", ""], "setup": {"duration": 0.00043895799899473786, "outcome": "passed"}, "call": {"duration": 0.00012399999832268804, "outcome": "passed"}, "teardown": {"duration": 0.00013333300012163818, "outcome": "passed"}}, {"nodeid": "core/test_validators.py::TestRangeValidator::test_range_validator_above_max", "lineno": 173, "outcome": "passed", "keywords": ["test_range_validator_above_max", "TestRangeValidator", "test_validators.py", "core", "tests", ""], "setup": {"duration": 0.0004539580113487318, "outcome": "passed"}, "call": {"duration": 0.00011804199311882257, "outcome": "passed"}, "teardown": {"duration": 0.00014174998796079308, "outcome": "passed"}}, {"nodeid": "core/test_validators.py::TestRangeValidator::test_range_validator_min_only", "lineno": 179, "outcome": "passed", "keywords": ["test_range_validator_min_only", "TestRangeValidator", "test_validators.py", "core", "tests", ""], "setup": {"duration": 0.00044879200868308544, "outcome": "passed"}, "call": {"duration": 0.00011554099910426885, "outcome": "passed"}, "teardown": {"duration": 0.00012791600602213293, "outcome": "passed"}}, {"nodeid": "core/test_validators.py::TestRangeValidator::test_range_validator_max_only", "lineno": 188, "outcome": "passed", "keywords": ["test_range_validator_max_only", "TestRangeValidator", "test_validators.py", "core", "tests", ""], "setup": {"duration": 0.00047258300764951855, "outcome": "passed"}, "call": {"duration": 0.0001137080107582733, "outcome": "passed"}, "teardown": {"duration": 0.00015812499623280019, "outcome": "passed"}}, {"nodeid": "core/test_validators.py::TestLengthValidator::test_length_validator_within_range", "lineno": 201, "outcome": "passed", "keywords": ["test_length_validator_within_range", "TestLengthValidator", "test_validators.py", "core", "tests", ""], "setup": {"duration": 0.00046458399447146803, "outcome": "passed"}, "call": {"duration": 0.0001234579976880923, "outcome": "passed"}, "teardown": {"duration": 0.0001249170018127188, "outcome": "passed"}}, {"nodeid": "core/test_validators.py::TestLengthValidator::test_length_validator_too_short", "lineno": 208, "outcome": "passed", "keywords": ["test_length_validator_too_short", "TestLengthValidator", "test_validators.py", "core", "tests", ""], "setup": {"duration": 0.00046608300181105733, "outcome": "passed"}, "call": {"duration": 0.0001235000090673566, "outcome": "passed"}, "teardown": {"duration": 0.00013837500591762364, "outcome": "passed"}}, {"nodeid": "core/test_validators.py::TestLengthValidator::test_length_validator_too_long", "lineno": 215, "outcome": "passed", "keywords": ["test_length_validator_too_long", "TestLengthValidator", "test_validators.py", "core", "tests", ""], "setup": {"duration": 0.00045908300671726465, "outcome": "passed"}, "call": {"duration": 0.00012354199134279042, "outcome": "passed"}, "teardown": {"duration": 0.00014074999489821494, "outcome": "passed"}}, {"nodeid": "core/test_validators.py::TestLengthValidator::test_length_validator_min_only", "lineno": 222, "outcome": "passed", "keywords": ["test_length_validator_min_only", "TestLengthValidator", "test_validators.py", "core", "tests", ""], "setup": {"duration": 0.0004461659991648048, "outcome": "passed"}, "call": {"duration": 0.00011449999874457717, "outcome": "passed"}, "teardown": {"duration": 0.0001294999965466559, "outcome": "passed"}}, {"nodeid": "core/test_validators.py::TestLengthValidator::test_length_validator_max_only", "lineno": 231, "outcome": "passed", "keywords": ["test_length_validator_max_only", "TestLengthValidator", "test_validators.py", "core", "tests", ""], "setup": {"duration": 0.0005600830045295879, "outcome": "passed"}, "call": {"duration": 0.00013870799739379436, "outcome": "passed"}, "teardown": {"duration": 0.0001841249904828146, "outcome": "passed"}}, {"nodeid": "core/test_validators.py::TestChoiceValidator::test_choice_validator_valid_choice", "lineno": 244, "outcome": "passed", "keywords": ["test_choice_validator_valid_choice", "TestChoiceValidator", "test_validators.py", "core", "tests", ""], "setup": {"duration": 0.0005634580011246726, "outcome": "passed"}, "call": {"duration": 0.00011912499030586332, "outcome": "passed"}, "teardown": {"duration": 0.00015033299860078841, "outcome": "passed"}}, {"nodeid": "core/test_validators.py::TestChoiceValidator::test_choice_validator_invalid_choice", "lineno": 252, "outcome": "passed", "keywords": ["test_choice_validator_invalid_choice", "TestChoiceValidator", "test_validators.py", "core", "tests", ""], "setup": {"duration": 0.0004337919963290915, "outcome": "passed"}, "call": {"duration": 0.00011237499711569399, "outcome": "passed"}, "teardown": {"duration": 0.00014012499013915658, "outcome": "passed"}}, {"nodeid": "core/test_validators.py::TestDecimalValidator::test_decimal_validator_valid", "lineno": 268, "outcome": "passed", "keywords": ["test_decimal_validator_valid", "TestDecimalValidator", "test_validators.py", "core", "tests", ""], "setup": {"duration": 0.0004540000081760809, "outcome": "passed"}, "call": {"duration": 0.00012433400843292475, "outcome": "passed"}, "teardown": {"duration": 0.0001392499980283901, "outcome": "passed"}}, {"nodeid": "core/test_validators.py::TestDecimalValidator::test_decimal_validator_too_many_digits", "lineno": 279, "outcome": "passed", "keywords": ["test_decimal_validator_too_many_digits", "TestDecimalValidator", "test_validators.py", "core", "tests", ""], "setup": {"duration": 0.00042045899317599833, "outcome": "passed"}, "call": {"duration": 0.00011295800504740328, "outcome": "passed"}, "teardown": {"duration": 0.00012799999967683107, "outcome": "passed"}}, {"nodeid": "core/test_validators.py::TestDecimalValidator::test_decimal_validator_too_many_decimal_places", "lineno": 286, "outcome": "passed", "keywords": ["test_decimal_validator_too_many_decimal_places", "TestDecimalValidator", "test_validators.py", "core", "tests", ""], "setup": {"duration": 0.000490417005494237, "outcome": "passed"}, "call": {"duration": 0.00011833399184979498, "outcome": "passed"}, "teardown": {"duration": 0.00015212500875350088, "outcome": "passed"}}, {"nodeid": "core/test_validators.py::TestDecimalValidator::test_decimal_validator_invalid_decimal", "lineno": 293, "outcome": "passed", "keywords": ["test_decimal_validator_invalid_decimal", "TestDecimalValidator", "test_validators.py", "core", "tests", ""], "setup": {"duration": 0.0006751659966539592, "outcome": "passed"}, "call": {"duration": 0.00013908300024922937, "outcome": "passed"}, "teardown": {"duration": 0.00017345800006296486, "outcome": "passed"}}, {"nodeid": "core/test_validators.py::TestSkuValidator::test_sku_validator_valid", "lineno": 304, "outcome": "passed", "keywords": ["test_sku_validator_valid", "TestSkuValidator", "test_validators.py", "core", "tests", ""], "setup": {"duration": 0.0005188750074012205, "outcome": "passed"}, "call": {"duration": 0.00012612499995157123, "outcome": "passed"}, "teardown": {"duration": 0.00015079199511092156, "outcome": "passed"}}, {"nodeid": "core/test_validators.py::TestSkuValidator::test_sku_validator_invalid", "lineno": 311, "outcome": "passed", "keywords": ["test_sku_validator_invalid", "TestSkuValidator", "test_validators.py", "core", "tests", ""], "setup": {"duration": 0.00044954199984204024, "outcome": "passed"}, "call": {"duration": 0.00013379099254962057, "outcome": "passed"}, "teardown": {"duration": 0.00016158299695234746, "outcome": "passed"}}, {"nodeid": "core/test_validators.py::TestCompoundValidator::test_compound_validator_all_valid", "lineno": 322, "outcome": "passed", "keywords": ["test_compound_validator_all_valid", "TestCompoundValidator", "test_validators.py", "core", "tests", ""], "setup": {"duration": 0.00045775000762660056, "outcome": "passed"}, "call": {"duration": 0.00027345799026079476, "outcome": "passed"}, "teardown": {"duration": 0.00013174999912735075, "outcome": "passed"}}, {"nodeid": "core/test_validators.py::TestCompoundValidator::test_compound_validator_one_invalid", "lineno": 334, "outcome": "passed", "keywords": ["test_compound_validator_one_invalid", "TestCompoundValidator", "test_validators.py", "core", "tests", ""], "setup": {"duration": 0.00043200000072829425, "outcome": "passed"}, "call": {"duration": 0.00012854200031142682, "outcome": "passed"}, "teardown": {"duration": 0.0001531669986434281, "outcome": "passed"}}, {"nodeid": "core/test_validators.py::TestCompoundValidator::test_compound_validator_all_invalid", "lineno": 346, "outcome": "passed", "keywords": ["test_compound_validator_all_invalid", "TestCompoundValidator", "test_validators.py", "core", "tests", ""], "setup": {"duration": 0.00044066600094083697, "outcome": "passed"}, "call": {"duration": 0.00012425000022631139, "outcome": "passed"}, "teardown": {"duration": 0.0001315420086029917, "outcome": "passed"}}, {"nodeid": "core/test_validators.py::TestCompoundValidator::test_compound_validator_not_require_all", "lineno": 360, "outcome": "passed", "keywords": ["test_compound_validator_not_require_all", "TestCompoundValidator", "test_validators.py", "core", "tests", ""], "setup": {"duration": 0.00042149999353569, "outcome": "passed"}, "call": {"duration": 0.00015241600340232253, "outcome": "passed"}, "teardown": {"duration": 0.00017158300033770502, "outcome": "passed"}}, {"nodeid": "core/test_validators.py::TestBusinessRuleValidator::test_business_rule_validator_valid", "lineno": 386, "outcome": "passed", "keywords": ["test_business_rule_validator_valid", "TestBusinessRuleValidator", "test_validators.py", "core", "tests", ""], "setup": {"duration": 0.0004658750112866983, "outcome": "passed"}, "call": {"duration": 0.00011862498649861664, "outcome": "passed"}, "teardown": {"duration": 0.00013245899754110724, "outcome": "passed"}}, {"nodeid": "core/test_validators.py::TestBusinessRuleValidator::test_business_rule_validator_invalid", "lineno": 403, "outcome": "passed", "keywords": ["test_business_rule_validator_invalid", "TestBusinessRuleValidator", "test_validators.py", "core", "tests", ""], "setup": {"duration": 0.00043629099673125893, "outcome": "passed"}, "call": {"duration": 0.00011745799565687776, "outcome": "passed"}, "teardown": {"duration": 0.00014529201143886894, "outcome": "passed"}}, {"nodeid": "core/test_validators.py::test_validate_data", "lineno": 422, "outcome": "passed", "keywords": ["test_validate_data", "test_validators.py", "core", "tests", ""], "setup": {"duration": 0.0004792499967152253, "outcome": "passed"}, "call": {"duration": 0.0001467080001020804, "outcome": "passed"}, "teardown": {"duration": 0.00013766699703410268, "outcome": "passed"}}, {"nodeid": "core/test_validators_base.py::TestValidationResult::test_init", "lineno": 26, "outcome": "passed", "keywords": ["test_init", "TestValidationResult", "test_validators_base.py", "core", "tests", ""], "setup": {"duration": 0.0004676670068874955, "outcome": "passed"}, "call": {"duration": 0.00011366599937900901, "outcome": "passed"}, "teardown": {"duration": 0.000155999994603917, "outcome": "passed"}}, {"nodeid": "core/test_validators_base.py::TestValidationResult::test_add_error", "lineno": 34, "outcome": "passed", "keywords": ["test_add_error", "TestValidationResult", "test_validators_base.py", "core", "tests", ""], "setup": {"duration": 0.0005194170080358163, "outcome": "passed"}, "call": {"duration": 0.00012970900570508093, "outcome": "passed"}, "teardown": {"duration": 0.00012766700820066035, "outcome": "passed"}}, {"nodeid": "core/test_validators_base.py::TestValidationResult::test_add_warning", "lineno": 52, "outcome": "passed", "keywords": ["test_add_warning", "TestValidationResult", "test_validators_base.py", "core", "tests", ""], "setup": {"duration": 0.000538792010047473, "outcome": "passed"}, "call": {"duration": 0.00013349999790079892, "outcome": "passed"}, "teardown": {"duration": 0.00013425000361166894, "outcome": "passed"}}, {"nodeid": "core/test_validators_base.py::TestValidationResult::test_merge", "lineno": 65, "outcome": "passed", "keywords": ["test_merge", "TestValidationResult", "test_validators_base.py", "core", "tests", ""], "setup": {"duration": 0.0004256249958416447, "outcome": "passed"}, "call": {"duration": 0.00011870900925714523, "outcome": "passed"}, "teardown": {"duration": 0.00012391699419822544, "outcome": "passed"}}, {"nodeid": "core/test_validators_base.py::TestValidationResult::test_str", "lineno": 93, "outcome": "passed", "keywords": ["test_str", "TestValidationResult", "test_validators_base.py", "core", "tests", ""], "setup": {"duration": 0.00043087500671390444, "outcome": "passed"}, "call": {"duration": 0.0001301660086028278, "outcome": "passed"}, "teardown": {"duration": 0.00016537500778213143, "outcome": "passed"}}, {"nodeid": "core/test_validators_base.py::TestValidator::test_validator_interface", "lineno": 109, "outcome": "passed", "keywords": ["test_validator_interface", "TestValidator", "test_validators_base.py", "core", "tests", ""], "setup": {"duration": 0.0006291669997153804, "outcome": "passed"}, "call": {"duration": 0.00013654200301971287, "outcome": "passed"}, "teardown": {"duration": 0.00015379200340248644, "outcome": "passed"}}, {"nodeid": "core/test_validators_base.py::TestRequiredValidator::test_valid_values", "lineno": 121, "outcome": "passed", "keywords": ["test_valid_values", "TestRequiredValidator", "test_validators_base.py", "core", "tests", ""], "setup": {"duration": 0.00048008401063270867, "outcome": "passed"}, "call": {"duration": 0.0001204169966513291, "outcome": "passed"}, "teardown": {"duration": 0.00014200000441633165, "outcome": "passed"}}, {"nodeid": "core/test_validators_base.py::TestRequiredValidator::test_invalid_values", "lineno": 130, "outcome": "passed", "keywords": ["test_invalid_values", "TestRequiredValidator", "test_validators_base.py", "core", "tests", ""], "setup": {"duration": 0.00043662500684149563, "outcome": "passed"}, "call": {"duration": 0.00012037499982398003, "outcome": "passed"}, "teardown": {"duration": 0.00016312500520143658, "outcome": "passed"}}, {"nodeid": "core/test_validators_base.py::TestRequiredValidator::test_custom_message", "lineno": 139, "outcome": "passed", "keywords": ["test_custom_message", "TestRequiredValidator", "test_validators_base.py", "core", "tests", ""], "setup": {"duration": 0.00046320800902321935, "outcome": "passed"}, "call": {"duration": 0.00012383298599161208, "outcome": "passed"}, "teardown": {"duration": 0.00014895800268277526, "outcome": "passed"}}, {"nodeid": "core/test_validators_base.py::TestRegexValidator::test_valid_values", "lineno": 152, "outcome": "passed", "keywords": ["test_valid_values", "TestRegexValidator", "test_validators_base.py", "core", "tests", ""], "setup": {"duration": 0.00046466699859593064, "outcome": "passed"}, "call": {"duration": 0.000357083001290448, "outcome": "passed"}, "teardown": {"duration": 0.00012716700439341366, "outcome": "passed"}}, {"nodeid": "core/test_validators_base.py::TestRegexValidator::test_invalid_values", "lineno": 159, "outcome": "passed", "keywords": ["test_invalid_values", "TestRegexValidator", "test_validators_base.py", "core", "tests", ""], "setup": {"duration": 0.00043620800715871155, "outcome": "passed"}, "call": {"duration": 0.00012441699800547212, "outcome": "passed"}, "teardown": {"duration": 0.00014670898963231593, "outcome": "passed"}}, {"nodeid": "core/test_validators_base.py::TestRangeValidator::test_min_value", "lineno": 173, "outcome": "passed", "keywords": ["test_min_value", "TestRangeValidator", "test_validators_base.py", "core", "tests", ""], "setup": {"duration": 0.00045420799870043993, "outcome": "passed"}, "call": {"duration": 0.00011891599569935352, "outcome": "passed"}, "teardown": {"duration": 0.000124708007206209, "outcome": "passed"}}, {"nodeid": "core/test_validators_base.py::TestRangeValidator::test_max_value", "lineno": 181, "outcome": "passed", "keywords": ["test_max_value", "TestRangeValidator", "test_validators_base.py", "core", "tests", ""], "setup": {"duration": 0.0004912500007776543, "outcome": "passed"}, "call": {"duration": 0.00012554200657177716, "outcome": "passed"}, "teardown": {"duration": 0.00014162500156089664, "outcome": "passed"}}, {"nodeid": "core/test_validators_base.py::TestRangeValidator::test_min_and_max_value", "lineno": 189, "outcome": "passed", "keywords": ["test_min_and_max_value", "TestRangeValidator", "test_validators_base.py", "core", "tests", ""], "setup": {"duration": 0.0004435419978108257, "outcome": "passed"}, "call": {"duration": 0.00012470901128835976, "outcome": "passed"}, "teardown": {"duration": 0.00018087500939145684, "outcome": "passed"}}, {"nodeid": "core/test_validators_base.py::TestRangeValidator::test_non_numeric_value", "lineno": 199, "outcome": "passed", "keywords": ["test_non_numeric_value", "TestRangeValidator", "test_validators_base.py", "core", "tests", ""], "setup": {"duration": 0.00046874998952262104, "outcome": "passed"}, "call": {"duration": 0.00020041700918227434, "outcome": "passed"}, "teardown": {"duration": 0.0001773750118445605, "outcome": "passed"}}, {"nodeid": "core/test_validators_base.py::TestRangeValidator::test_skip_empty_values", "lineno": 207, "outcome": "passed", "keywords": ["test_skip_empty_values", "TestRangeValidator", "test_validators_base.py", "core", "tests", ""], "setup": {"duration": 0.00048783399688545614, "outcome": "passed"}, "call": {"duration": 0.00012820800475310534, "outcome": "passed"}, "teardown": {"duration": 0.00018083299801219255, "outcome": "passed"}}, {"nodeid": "core/test_validators_base.py::TestDecimalValidator::test_valid_decimal", "lineno": 219, "outcome": "passed", "keywords": ["test_valid_decimal", "TestDecimalValidator", "test_validators_base.py", "core", "tests", ""], "setup": {"duration": 0.0004850000113947317, "outcome": "passed"}, "call": {"duration": 0.0001487500121584162, "outcome": "passed"}, "teardown": {"duration": 0.0001499170030001551, "outcome": "passed"}}, {"nodeid": "core/test_validators_base.py::TestDecimalValidator::test_invalid_precision", "lineno": 227, "outcome": "passed", "keywords": ["test_invalid_precision", "TestDecimalValidator", "test_validators_base.py", "core", "tests", ""], "setup": {"duration": 0.0004792499967152253, "outcome": "passed"}, "call": {"duration": 0.00012458300625439733, "outcome": "passed"}, "teardown": {"duration": 0.00013666700397152454, "outcome": "passed"}}, {"nodeid": "core/test_validators_base.py::TestDecimalValidator::test_invalid_format", "lineno": 237, "outcome": "passed", "keywords": ["test_invalid_format", "TestDecimalValidator", "test_validators_base.py", "core", "tests", ""], "setup": {"duration": 0.00042962499719578773, "outcome": "passed"}, "call": {"duration": 0.00011666600767057389, "outcome": "passed"}, "teardown": {"duration": 0.0001459159975638613, "outcome": "passed"}}, {"nodeid": "core/test_validators_base.py::TestSkuValidator::test_valid_skus", "lineno": 249, "outcome": "passed", "keywords": ["test_valid_skus", "TestSkuValidator", "test_validators_base.py", "core", "tests", ""], "setup": {"duration": 0.0004803750052815303, "outcome": "passed"}, "call": {"duration": 0.00012895799591206014, "outcome": "passed"}, "teardown": {"duration": 0.00012820899428334087, "outcome": "passed"}}, {"nodeid": "core/test_validators_base.py::TestSkuValidator::test_invalid_skus", "lineno": 259, "outcome": "passed", "keywords": ["test_invalid_skus", "TestSkuValidator", "test_validators_base.py", "core", "tests", ""], "setup": {"duration": 0.0004176660004304722, "outcome": "passed"}, "call": {"duration": 0.00016554100147914141, "outcome": "passed"}, "teardown": {"duration": 0.0003253339964430779, "outcome": "passed"}}, {"nodeid": "core/test_validators_base.py::test_validate_data_utility", "lineno": 273, "outcome": "passed", "keywords": ["test_validate_data_utility", "test_validators_base.py", "core", "tests", ""], "setup": {"duration": 0.0004887090035481378, "outcome": "passed"}, "call": {"duration": 0.00015483300376217812, "outcome": "passed"}, "teardown": {"duration": 0.011520833999384195, "outcome": "passed", "stderr": "Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...\n"}}], "warnings": [{"message": "pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html", "category": "DeprecationWarning", "when": "config", "filename": "/Users/joan/VSProjects/pyERP/venv/lib/python3.12/site-packages/ddtrace/internal/module.py", "lineno": 297}, {"message": "Deprecated call to `pkg_resources.declare_namespace('sphinxcontrib')`.\nImplementing implicit namespace packages (as specified in PEP 420) is preferred to `pkg_resources.declare_namespace`. See https://setuptools.pypa.io/en/latest/references/keywords.html#keyword-namespace-packages", "category": "DeprecationWarning", "when": "config", "filename": "/Users/joan/VSProjects/pyERP/venv/lib/python3.12/site-packages/pkg_resources/__init__.py", "lineno": 3147}, {"message": "'cgi' is deprecated and slated for removal in Python 3.13", "category": "DeprecationWarning", "when": "config", "filename": "/Users/joan/VSProjects/pyERP/venv/lib/python3.12/site-packages/ddtrace/internal/module.py", "lineno": 297}, {"message": "pythonjsonlogger.jsonlogger has been moved to pythonjsonlogger.json", "category": "DeprecationWarning", "when": "config", "filename": "/Users/joan/VSProjects/pyERP/venv/lib/python3.12/site-packages/pythonjsonlogger/jsonlogger.py", "lineno": 11}, {"message": "Unknown config option: env\n", "category": "PytestConfigWarning", "when": "config", "filename": "/Users/joan/VSProjects/pyERP/venv/lib/python3.12/site-packages/_pytest/config/__init__.py", "lineno": 1396}]}
# Generated by Django 5.1.8 on 2025-04-16 18:33

import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("core", "0008_notification_is_completed_notification_priority_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="Device",
            fields=[
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique identifier for the device",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Human-readable name for the device (e.g., 'Lab CA Printer')",
                        max_length=255,
                    ),
                ),
                (
                    "device_type",
                    models.CharField(
                        choices=[
                            ("PRINTER", "Printer"),
                            ("SCANNER", "Scanner"),
                            ("COMPUTER", "Computer"),
                            ("NETWORK_GEAR", "Network Gear"),
                            ("OTHER", "Other"),
                        ],
                        db_index=True,
                        default="OTHER",
                        help_text="Type of the device",
                        max_length=20,
                    ),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        blank=True,
                        db_index=True,
                        help_text="IP address of the device",
                        null=True,
                        unique=True,
                    ),
                ),
                (
                    "location",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        help_text="Physical or logical location (e.g., 'Lab CA', 'Office Wing B')",
                        max_length=100,
                    ),
                ),
                (
                    "model",
                    models.CharField(
                        blank=True,
                        help_text="Device model designation (e.g., 'Zebra ZD420')",
                        max_length=100,
                    ),
                ),
                (
                    "serial_number",
                    models.CharField(
                        blank=True,
                        help_text="Device serial number",
                        max_length=100,
                        null=True,
                        unique=True,
                    ),
                ),
                (
                    "label_zpl_styles",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="List of ZPL label styles supported/configured (for printers)",
                        null=True,
                    ),
                ),
                (
                    "mac_address",
                    models.CharField(
                        blank=True,
                        help_text="MAC address of the device",
                        max_length=17,
                        null=True,
                        unique=True,
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        db_index=True,
                        default=True,
                        help_text="Is the device currently active and in use?",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Device",
                "verbose_name_plural": "Devices",
                "ordering": ["location", "name"],
                "indexes": [
                    models.Index(
                        fields=["location"], name="core_device_locatio_cf981d_idx"
                    ),
                    models.Index(
                        fields=["device_type"], name="core_device_device__8f6aac_idx"
                    ),
                    models.Index(
                        fields=["is_active"], name="core_device_is_acti_f3ca1f_idx"
                    ),
                    models.Index(
                        fields=["ip_address", "is_active"],
                        name="core_device_ip_addr_e9d383_idx",
                    ),
                ],
            },
        ),
    ]

# Generated by Django 5.1.7 on 2025-03-28 18:56

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="UserPreference",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "dashboard_config",
                    models.JSONField(
                        default=dict,
                        help_text="JSON configuration of user's dashboard layout",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="preferences",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AuditLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "timestamp",
                    models.DateTimeField(
                        auto_now_add=True, help_text="When the event occurred"
                    ),
                ),
                (
                    "event_type",
                    models.CharField(
                        choices=[
                            ("login", "Login"),
                            ("logout", "Logout"),
                            ("login_failed", "Login Failed"),
                            ("password_change", "Password Change"),
                            ("password_reset", "Password Reset"),
                            ("user_created", "User Created"),
                            ("user_updated", "User Updated"),
                            ("user_deleted", "User Deleted"),
                            ("permission_change", "Permission Change"),
                            ("data_access", "Data Access"),
                            ("data_change", "Data Change"),
                            ("system_error", "System Error"),
                            ("other", "Other"),
                        ],
                        help_text="Type of event being logged",
                        max_length=50,
                    ),
                ),
                ("message", models.TextField(help_text="Description of the event")),
                (
                    "username",
                    models.CharField(
                        blank=True,
                        help_text="Username as a backup if user record is deleted",
                        max_length=150,
                    ),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        blank=True,
                        help_text="IP address where the event originated",
                        null=True,
                    ),
                ),
                (
                    "user_agent",
                    models.TextField(
                        blank=True, help_text="User agent/browser information"
                    ),
                ),
                (
                    "object_id",
                    models.CharField(
                        blank=True, help_text="ID of related object", max_length=255
                    ),
                ),
                (
                    "additional_data",
                    models.JSONField(
                        blank=True,
                        help_text="Additional event-specific data stored as JSON",
                        null=True,
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique identifier for this audit event",
                        unique=True,
                    ),
                ),
                (
                    "content_type",
                    models.ForeignKey(
                        blank=True,
                        help_text="Type of object this event relates to",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who triggered the event (if applicable)",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="audit_logs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Audit Log",
                "verbose_name_plural": "Audit Logs",
                "ordering": ["-timestamp"],
                "indexes": [
                    models.Index(
                        fields=["timestamp"], name="core_auditl_timesta_80074f_idx"
                    ),
                    models.Index(
                        fields=["event_type"], name="core_auditl_event_t_04b2f0_idx"
                    ),
                    models.Index(
                        fields=["username"], name="core_auditl_usernam_6bebd7_idx"
                    ),
                    models.Index(
                        fields=["ip_address"], name="core_auditl_ip_addr_d66782_idx"
                    ),
                    models.Index(
                        fields=["content_type", "object_id"],
                        name="core_auditl_content_fec0c4_idx",
                    ),
                ],
            },
        ),
    ]

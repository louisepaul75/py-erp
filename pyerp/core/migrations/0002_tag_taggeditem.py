# Generated by Django 5.0.6 on 2025-03-30 13:01

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
        ("core", "0001_initial"),
    ]

    operations = [
        # Separate state and database operations for Tag model
        # State operation defines the model in Django's state
        # Database operation is empty because the table 'products_tag' already exists
        migrations.SeparateDatabaseAndState(
            state_operations=[
                migrations.CreateModel(
                    name="Tag",
                    fields=[
                        (
                            "id",
                            models.BigAutoField(
                                auto_created=True,
                                primary_key=True,
                                serialize=False,
                                verbose_name="ID",
                            ),
                        ),
                        (
                            "name",
                            models.CharField(
                                help_text="Tag name", max_length=100, unique=True
                            ),
                        ),
                        (
                            "slug",
                            models.SlugField(
                                help_text="URL-friendly tag name",
                                max_length=100,
                                unique=True,
                            ),
                        ),
                        (
                            "description",
                            models.TextField(blank=True, help_text="Tag description"),
                        ),
                        (
                            "created_at",
                            models.DateTimeField(
                                auto_now_add=True, help_text="Creation timestamp"
                            ),
                        ),
                        (
                            "updated_at",
                            models.DateTimeField(
                                auto_now=True, help_text="Last update timestamp"
                            ),
                        ),
                    ],
                    options={
                        "verbose_name": "Tag",
                        "verbose_name_plural": "Tags",
                        "ordering": ["name"],
                        "db_table": "products_tag", # Explicitly manage the existing table
                    },
                ),
            ],
            database_operations=[], # Table already exists, do nothing in the database
        ),
        migrations.CreateModel(
            name="TaggedItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "object_id",
                    models.PositiveIntegerField(
                        db_index=True, help_text="Primary key of the tagged object"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Timestamp when the tag was applied",
                    ),
                ),
                (
                    "content_type",
                    models.ForeignKey(
                        help_text="Content type of the tagged object",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "tag",
                    models.ForeignKey(
                        help_text="The tag being applied",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tagged_items",
                        to="core.tag",
                    ),
                ),
            ],
            options={
                "verbose_name": "Tagged Item",
                "verbose_name_plural": "Tagged Items",
                "indexes": [
                    models.Index(
                        fields=["content_type", "object_id"],
                        name="core_tagged_content_0b937e_idx",
                    )
                ],
                "unique_together": {("tag", "content_type", "object_id")},
            },
        ),
    ]

# Generated by Django 5.1.6 on 2025-03-09 20:14

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Customer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                (
                    "legacy_id",
                    models.CharField(
                        blank=True,
                        help_text="ID in the legacy system",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "legacy_modified",
                    models.DateTimeField(
                        blank=True,
                        help_text="Last modification timestamp in legacy system",
                        null=True,
                    ),
                ),
                (
                    "is_synchronized",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this record is synchronized with the legacy system",
                    ),
                ),
                (
                    "customer_number",
                    models.CharField(
                        help_text="Customer number (maps to KundenNr in legacy system)",
                        max_length=50,
                        unique=True,
                    ),
                ),
                (
                    "legacy_address_number",
                    models.CharField(
                        blank=True,
                        help_text="Address number in legacy system (AdrNr)",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "customer_group",
                    models.CharField(
                        blank=True,
                        help_text="Customer group (maps to Kundengr in legacy system)",
                        max_length=50,
                    ),
                ),
                (
                    "delivery_block",
                    models.BooleanField(
                        default=False,
                        help_text="Whether deliveries are blocked (maps to Liefersperre)",
                    ),
                ),
                (
                    "price_group",
                    models.CharField(
                        blank=True,
                        help_text="Price group (maps to Preisgru in legacy system)",
                        max_length=10,
                    ),
                ),
                (
                    "vat_id",
                    models.CharField(
                        blank=True,
                        help_text="VAT ID number (maps to USt_IdNr in legacy system)",
                        max_length=50,
                    ),
                ),
                (
                    "payment_method",
                    models.CharField(
                        blank=True,
                        help_text="Payment method (maps to Zahlungsart in legacy system)",
                        max_length=50,
                    ),
                ),
                (
                    "shipping_method",
                    models.CharField(
                        blank=True,
                        help_text="Shipping method (maps to Versandart in legacy system)",
                        max_length=50,
                    ),
                ),
                (
                    "credit_limit",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Credit limit (maps to Kreditlimit in legacy system)",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "discount_percentage",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Discount percentage (maps to Rabatt in legacy system)",
                        max_digits=5,
                        null=True,
                    ),
                ),
                (
                    "payment_terms_discount_days",
                    models.IntegerField(
                        blank=True,
                        help_text="Days for early payment discount (maps to SkontoTage)",
                        null=True,
                    ),
                ),
                (
                    "payment_terms_net_days",
                    models.IntegerField(
                        blank=True,
                        help_text="Days until payment is due (maps to NettoTage)",
                        null=True,
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True, help_text="Internal notes about the customer"
                    ),
                ),
            ],
            options={
                "verbose_name": "Customer",
                "verbose_name_plural": "Customers",
                "indexes": [
                    models.Index(
                        fields=["customer_number"],
                        name="sales_custo_custome_2f5268_idx",
                    ),
                    models.Index(
                        fields=["legacy_id"], name="sales_custo_legacy__ec6763_idx"
                    ),
                    models.Index(
                        fields=["customer_group"], name="sales_custo_custome_46037d_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="Address",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                (
                    "legacy_id",
                    models.CharField(
                        blank=True,
                        help_text="ID in the legacy system",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "legacy_modified",
                    models.DateTimeField(
                        blank=True,
                        help_text="Last modification timestamp in legacy system",
                        null=True,
                    ),
                ),
                (
                    "is_synchronized",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this record is synchronized with the legacy system",
                    ),
                ),
                (
                    "is_primary",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this is the primary address for the customer",
                    ),
                ),
                (
                    "salutation",
                    models.CharField(
                        blank=True,
                        help_text="Salutation (maps to Anrede in legacy system)",
                        max_length=50,
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True,
                        help_text="First name (maps to Vorname in legacy system)",
                        max_length=100,
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True,
                        help_text="Last name (maps to Name1 in legacy system)",
                        max_length=100,
                    ),
                ),
                (
                    "company_name",
                    models.CharField(
                        blank=True,
                        help_text="Company name (maps to Name2 in legacy system)",
                        max_length=200,
                    ),
                ),
                (
                    "street",
                    models.CharField(
                        blank=True,
                        help_text="Street address (maps to Strasse in legacy system)",
                        max_length=200,
                    ),
                ),
                (
                    "country",
                    models.CharField(
                        blank=True,
                        help_text="Country code (maps to Land in legacy system)",
                        max_length=2,
                    ),
                ),
                (
                    "postal_code",
                    models.CharField(
                        blank=True,
                        help_text="Postal code (maps to PLZ in legacy system)",
                        max_length=20,
                    ),
                ),
                (
                    "city",
                    models.CharField(
                        blank=True,
                        help_text="City (maps to Ort in legacy system)",
                        max_length=100,
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True,
                        help_text="Phone number (maps to Telefon in legacy system)",
                        max_length=50,
                    ),
                ),
                (
                    "fax",
                    models.CharField(
                        blank=True,
                        help_text="Fax number (maps to Fax in legacy system)",
                        max_length=50,
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True,
                        help_text="Email address (maps to e_Mail in legacy system)",
                        max_length=254,
                    ),
                ),
                (
                    "contact_person",
                    models.CharField(
                        blank=True,
                        help_text="Contact person (maps to Ansprechp in legacy system)",
                        max_length=200,
                    ),
                ),
                (
                    "formal_salutation",
                    models.CharField(
                        blank=True,
                        help_text="Formal salutation (maps to Briefanrede in legacy system)",
                        max_length=200,
                    ),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        help_text="Customer this address belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="addresses",
                        to="sales.customer",
                    ),
                ),
            ],
            options={
                "verbose_name": "Address",
                "verbose_name_plural": "Addresses",
                "indexes": [
                    models.Index(
                        fields=["customer"], name="sales_addre_custome_5b0e04_idx"
                    ),
                    models.Index(
                        fields=["legacy_id"], name="sales_addre_legacy__0700b1_idx"
                    ),
                    models.Index(
                        fields=["postal_code"], name="sales_addre_postal__b918d9_idx"
                    ),
                    models.Index(fields=["email"], name="sales_addre_email_d66234_idx"),
                ],
                "constraints": [
                    models.UniqueConstraint(
                        condition=models.Q(("is_primary", True)),
                        fields=("customer",),
                        name="unique_primary_address_per_customer",
                    )
                ],
            },
        ),
    ]

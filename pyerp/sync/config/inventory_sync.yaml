---
# Inventory Sync Configuration

# Storage Location Sync (Stamm_Lagerorte)
storage_locations:
  name: "Storage Locations Sync"
  description: "Synchronize storage locations from legacy Stamm_Lagerorte table"
  source:
    type: "legacy_api"
    extractor_class: "pyerp.sync.extractors.legacy_api.LegacyAPIExtractor"
    config:
      environment: "live"
      table_name: "Stamm_Lagerorte"
      page_size: 1000
      all_records: true
  transformer:
    type: "custom"
    class: "pyerp.sync.transformers.inventory.StammLagerorteTransformer"
    config:
      field_mappings:
        legacy_id: "ID_Lagerort"
        location_code: "Lagerort"
        country: "Land_LKZ"
        city_building: "Ort_Gebaeude"
        sale: "Abverkauf"
        special_spot: "Sonderlager"
        unit: "Regal"
        compartment: "Fach"
        shelf: "Boden"
  loader:
    type: "django_model"
    class: "pyerp.sync.loaders.django_model.DjangoModelLoader"
    config:
      app_name: "inventory"
      model_name: "StorageLocation"
      unique_field: "legacy_id"
      update_strategy: "update_or_create"
  schedule:
    frequency: "daily"
    time: "01:00"
  incremental:
    enabled: true
    timestamp_field: "modified_date"
    timestamp_filter_format: "modified_date > '{value}'"

# Box Type Sync
box_types:
  name: "Box Types Sync"
  description: "Synchronize box types from legacy parameter table"
  source:
    type: "legacy_api"
    extractor_class: "pyerp.sync.extractors.legacy_api.LegacyAPIExtractor"
    config:
      environment: "live"
      table_name: "parameter"
      page_size: 1000
      all_records: true
      filter_query: "scope eq 'SchÃ¼ttentypen'"
  transformer:
    type: "custom"
    class: "pyerp.sync.transformers.inventory.BoxTypeTransformer"
    config: {}
  loader:
    type: "django_model"
    class: "pyerp.sync.loaders.django_model.DjangoModelLoader"
    config:
      app_name: "inventory"
      model_name: "BoxType"
      unique_field: "name"
      update_strategy: "update_or_create"
  schedule:
    frequency: "daily"
    time: "01:30"
  incremental:
    enabled: true
    timestamp_field: "modified_date"
    timestamp_filter_format: "modified_date > '{value}'"

# Box Sync
boxes:
  name: "Boxes Sync"
  description: "Synchronize boxes from Stamm_Lager_Schuetten"
  source:
    type: "legacy_api"
    extractor_class: "pyerp.sync.extractors.legacy_api.LegacyAPIExtractor"
    config:
      environment: "live"
      table_name: "Stamm_Lager_Schuetten"
      page_size: 1000
      all_records: true
  transformer:
    type: "custom"
    class: "pyerp.sync.transformers.inventory.BoxTransformer"
    config: {}
  loader:
    type: "django_model"
    class: "pyerp.sync.loaders.django_model.DjangoModelLoader"
    config:
      app_name: "inventory"
      model_name: "Box"
      unique_field: "legacy_id"
      update_strategy: "update_or_create"
      field_resolution:
        box_type:
          model: "inventory.BoxType"
          lookup_field: "name"
          source_field: "box_type_name"
        storage_location:
          model: "inventory.StorageLocation"
          lookup_field: "location_code"
          source_field: "storage_location_code"
        parent_box:
          model: "inventory.Box"
          lookup_field: "legacy_id"
          source_field: "parent_box_legacy_id"
  schedule:
    frequency: "daily"
    time: "02:00"
  incremental:
    enabled: true
    timestamp_field: "modified_date"
    timestamp_filter_format: "modified_date > '{value}'"
  dependencies:
    - "box_types"
    - "storage_locations"

# # Box Slot Sync
# box_slots:
#   name: "Box Slots Sync"
#   description: "Synchronize box slots"
#   source:
#     type: "manual"
#     config:
#       data_source: "file"
#   transformer:
#     type: "custom"
#     class: "pyerp.sync.transformers.inventory.BoxSlotTransformer"
#     config: {}
#   loader:
#     type: "django_model"
#     config:
#       app_name: "inventory"
#       model_name: "BoxSlot"
#       unique_field: "id"
#       update_strategy: "update_or_create"
#   schedule:
#     frequency: "manual"

# # Product Storage Sync
# product_storage:
#   name: "Product Storage Sync"
#   description: "Synchronize product storage data"
#   source:
#     type: "manual"
#     config:
#       data_source: "file"
#   transformer:
#     type: "custom"
#     class: "pyerp.sync.transformers.inventory.ProductInventoryTransformer"
#     config: {}
#   loader:
#     type: "django_model"
#     config:
#       app_name: "inventory"
#       model_name: "ProductStorage"
#       unique_field: "id"
#       update_strategy: "update_or_create"
#   schedule:
#     frequency: "manual"
#   dependencies:
#     - "storage_locations"
#     - "boxes"
#     - "box_slots" 
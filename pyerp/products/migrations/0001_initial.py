# Generated by Django 5.1.6 on 2025-03-05 16:18

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="ImageSyncLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False
                    ),
                ),
                (
                    "started_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="When the sync process started"
                    ),
                ),
                (
                    "completed_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="When the sync process completed",
                        null=True,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("in_progress", "In Progress"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                        ],
                        default="in_progress",
                        help_text="Current status of the sync process",
                        max_length=20,
                    ),
                ),
                (
                    "images_added",
                    models.IntegerField(
                        default=0, help_text="Number of new images added"
                    ),
                ),
                (
                    "images_updated",
                    models.IntegerField(
                        default=0, help_text="Number of existing images updated"
                    ),
                ),
                (
                    "images_deleted",
                    models.IntegerField(
                        default=0, help_text="Number of images deleted"
                    ),
                ),
                (
                    "products_affected",
                    models.IntegerField(
                        default=0, help_text="Number of products affected by the sync"
                    ),
                ),
                (
                    "error_message",
                    models.TextField(
                        blank=True, help_text="Error message if the sync failed"
                    ),
                ),
            ],
            options={
                "verbose_name": "Image Sync Log",
                "verbose_name_plural": "Image Sync Logs",
                "ordering": ["-started_at"],
            },
        ),
        migrations.CreateModel(
            name="ProductCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        help_text="Unique category code", max_length=50, unique=True
                    ),
                ),
                ("name", models.CharField(help_text="Category name", max_length=100)),
                (
                    "description",
                    models.TextField(blank=True, help_text="Category description"),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        help_text="Parent category",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="children",
                        to="products.productcategory",
                    ),
                ),
            ],
            options={
                "verbose_name": "Product Category",
                "verbose_name_plural": "Product Categories",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sku",
                    models.CharField(
                        help_text="Stock Keeping Unit (maps to ArtNr in legacy system)",
                        max_length=50,
                        unique=True,
                    ),
                ),
                (
                    "base_sku",
                    models.CharField(
                        db_index=True,
                        help_text="Base SKU without variant (maps to fk_ArtNr in legacy system)",
                        max_length=50,
                    ),
                ),
                (
                    "variant_code",
                    models.CharField(
                        blank=True,
                        help_text="Variant code (maps to ArtikelArt in legacy system)",
                        max_length=10,
                    ),
                ),
                (
                    "legacy_id",
                    models.CharField(
                        blank=True,
                        help_text="ID in the legacy system",
                        max_length=50,
                        null=True,
                        unique=True,
                    ),
                ),
                (
                    "legacy_sku",
                    models.CharField(
                        blank=True,
                        help_text="Legacy SKU (maps to alteNummer in Artikel_Variante)",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "is_parent",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this is a parent product (maps to Art_Kalkulation records)",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Product name (maps to Bezeichnung in legacy system)",
                        max_length=255,
                    ),
                ),
                (
                    "name_en",
                    models.CharField(
                        blank=True,
                        help_text="Product name in English (maps to Bezeichnung_ENG in legacy system)",
                        max_length=255,
                    ),
                ),
                (
                    "short_description",
                    models.TextField(
                        blank=True,
                        help_text="Short product description (maps to Beschreibung_kurz in legacy system)",
                    ),
                ),
                (
                    "short_description_en",
                    models.TextField(
                        blank=True, help_text="Short product description in English"
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Full product description (maps to Beschreibung in legacy system)",
                    ),
                ),
                (
                    "description_en",
                    models.TextField(
                        blank=True, help_text="Full product description in English"
                    ),
                ),
                (
                    "keywords",
                    models.CharField(
                        blank=True, help_text="Search keywords", max_length=255
                    ),
                ),
                (
                    "dimensions",
                    models.CharField(
                        blank=True,
                        help_text="Product dimensions (LxWxH)",
                        max_length=50,
                    ),
                ),
                (
                    "weight",
                    models.IntegerField(
                        blank=True, help_text="Weight in grams", null=True
                    ),
                ),
                (
                    "list_price",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Retail price (maps to Laden price in legacy system)",
                        max_digits=10,
                    ),
                ),
                (
                    "wholesale_price",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Wholesale price (maps to Handel price in legacy system)",
                        max_digits=10,
                    ),
                ),
                (
                    "gross_price",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Recommended retail price (maps to Empf. price in legacy system)",
                        max_digits=10,
                    ),
                ),
                (
                    "cost_price",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Cost price (maps to Einkauf price in legacy system)",
                        max_digits=10,
                    ),
                ),
                (
                    "stock_quantity",
                    models.IntegerField(default=0, help_text="Current stock quantity"),
                ),
                (
                    "min_stock_quantity",
                    models.IntegerField(
                        default=0, help_text="Minimum stock quantity before reordering"
                    ),
                ),
                (
                    "backorder_quantity",
                    models.IntegerField(default=0, help_text="Quantity on backorder"),
                ),
                (
                    "open_purchase_quantity",
                    models.IntegerField(
                        default=0, help_text="Quantity on open purchase orders"
                    ),
                ),
                (
                    "last_receipt_date",
                    models.DateField(
                        blank=True, help_text="Date of last stock receipt", null=True
                    ),
                ),
                (
                    "last_issue_date",
                    models.DateField(
                        blank=True, help_text="Date of last stock issue", null=True
                    ),
                ),
                (
                    "units_sold_current_year",
                    models.IntegerField(
                        default=0, help_text="Units sold in current year"
                    ),
                ),
                (
                    "units_sold_previous_year",
                    models.IntegerField(
                        default=0, help_text="Units sold in previous year"
                    ),
                ),
                (
                    "revenue_previous_year",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Revenue in previous year",
                        max_digits=12,
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Whether the product is active"
                    ),
                ),
                (
                    "is_discontinued",
                    models.BooleanField(
                        default=False, help_text="Whether the product is discontinued"
                    ),
                ),
                (
                    "has_bom",
                    models.BooleanField(
                        default=False,
                        help_text="Whether the product has a bill of materials",
                    ),
                ),
                (
                    "is_one_sided",
                    models.BooleanField(
                        default=False, help_text="Whether the product is one-sided"
                    ),
                ),
                (
                    "is_hanging",
                    models.BooleanField(
                        default=False, help_text="Whether the product is hanging"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="Creation timestamp"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, help_text="Last update timestamp"
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        help_text="Parent product (for variants)",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="variants",
                        to="products.product",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        help_text="Product category",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="products",
                        to="products.productcategory",
                    ),
                ),
            ],
            options={
                "verbose_name": "Product",
                "verbose_name_plural": "Products",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="ParentProduct",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sku",
                    models.CharField(
                        help_text="Stock Keeping Unit (maps to Nummer in legacy system)",
                        max_length=50,
                        unique=True,
                    ),
                ),
                (
                    "legacy_id",
                    models.CharField(
                        blank=True,
                        help_text="ID in the legacy system - maps directly to __KEY and UID in legacy system (which had identical values)",
                        max_length=50,
                        null=True,
                        unique=True,
                    ),
                ),
                (
                    "legacy_uid",
                    models.CharField(
                        blank=True,
                        help_text="UID in the legacy system",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Product name (maps to Bezeichnung in legacy system)",
                        max_length=255,
                    ),
                ),
                (
                    "name_en",
                    models.CharField(
                        blank=True,
                        help_text="Product name in English (maps to Bezeichnung_ENG in legacy system)",
                        max_length=255,
                    ),
                ),
                (
                    "short_description",
                    models.TextField(
                        blank=True,
                        help_text="Short product description (maps to Beschreibung_kurz in legacy system)",
                    ),
                ),
                (
                    "short_description_en",
                    models.TextField(
                        blank=True, help_text="Short product description in English"
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Full product description (maps to Beschreibung in legacy system)",
                    ),
                ),
                (
                    "description_en",
                    models.TextField(
                        blank=True, help_text="Full product description in English"
                    ),
                ),
                (
                    "keywords",
                    models.CharField(
                        blank=True, help_text="Search keywords", max_length=255
                    ),
                ),
                (
                    "dimensions",
                    models.CharField(
                        blank=True,
                        help_text="Product dimensions (LxWxH)",
                        max_length=50,
                    ),
                ),
                (
                    "weight",
                    models.IntegerField(
                        blank=True, help_text="Weight in grams", null=True
                    ),
                ),
                (
                    "list_price",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Retail price (maps to Laden price in legacy system)",
                        max_digits=10,
                    ),
                ),
                (
                    "wholesale_price",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Wholesale price (maps to Handel price in legacy system)",
                        max_digits=10,
                    ),
                ),
                (
                    "gross_price",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Recommended retail price (maps to Empf. price in legacy system)",
                        max_digits=10,
                    ),
                ),
                (
                    "cost_price",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Cost price (maps to Einkauf price in legacy system)",
                        max_digits=10,
                    ),
                ),
                (
                    "stock_quantity",
                    models.IntegerField(default=0, help_text="Current stock quantity"),
                ),
                (
                    "min_stock_quantity",
                    models.IntegerField(
                        default=0, help_text="Minimum stock quantity before reordering"
                    ),
                ),
                (
                    "backorder_quantity",
                    models.IntegerField(default=0, help_text="Quantity on backorder"),
                ),
                (
                    "open_purchase_quantity",
                    models.IntegerField(
                        default=0, help_text="Quantity on open purchase orders"
                    ),
                ),
                (
                    "last_receipt_date",
                    models.DateField(
                        blank=True, help_text="Date of last stock receipt", null=True
                    ),
                ),
                (
                    "last_issue_date",
                    models.DateField(
                        blank=True, help_text="Date of last stock issue", null=True
                    ),
                ),
                (
                    "units_sold_current_year",
                    models.IntegerField(
                        default=0, help_text="Units sold in current year"
                    ),
                ),
                (
                    "units_sold_previous_year",
                    models.IntegerField(
                        default=0, help_text="Units sold in previous year"
                    ),
                ),
                (
                    "revenue_previous_year",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Revenue in previous year",
                        max_digits=12,
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        db_column="is_active",
                        default=True,
                        help_text="Whether the product is active",
                    ),
                ),
                (
                    "is_discontinued",
                    models.BooleanField(
                        default=False, help_text="Whether the product is discontinued"
                    ),
                ),
                (
                    "has_bom",
                    models.BooleanField(
                        default=False,
                        help_text="Whether the product has a bill of materials",
                    ),
                ),
                (
                    "is_one_sided",
                    models.BooleanField(
                        default=False, help_text="Whether the product is one-sided"
                    ),
                ),
                (
                    "is_hanging",
                    models.BooleanField(
                        default=False, help_text="Whether the product is hanging"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="Creation timestamp"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, help_text="Last update timestamp"
                    ),
                ),
                (
                    "base_sku",
                    models.CharField(
                        db_index=True, help_text="Base SKU for variants", max_length=50
                    ),
                ),
                (
                    "is_placeholder",
                    models.BooleanField(
                        default=False,
                        help_text="Indicates if this is a placeholder parent created for orphaned variants",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        help_text="Product category",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_products",
                        to="products.productcategory",
                    ),
                ),
            ],
            options={
                "verbose_name": "Parent Product",
                "verbose_name_plural": "Parent Products",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="UnifiedProduct",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=255, verbose_name="Name")),
                (
                    "sku",
                    models.CharField(max_length=100, unique=True, verbose_name="SKU"),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2, default=0, max_digits=10, verbose_name="Price"
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Active")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated At"),
                ),
                (
                    "is_variant",
                    models.BooleanField(default=False, verbose_name="Is Variant"),
                ),
                (
                    "is_parent",
                    models.BooleanField(default=False, verbose_name="Is Parent"),
                ),
                (
                    "base_sku",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Base SKU"
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="variants",
                        to="products.unifiedproduct",
                    ),
                ),
            ],
            options={
                "verbose_name": "Unified Product",
                "verbose_name_plural": "Unified Products",
            },
        ),
        migrations.CreateModel(
            name="VariantProduct",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sku",
                    models.CharField(
                        help_text="Stock Keeping Unit (maps to Nummer in legacy system)",
                        max_length=50,
                        unique=True,
                    ),
                ),
                (
                    "legacy_id",
                    models.CharField(
                        blank=True,
                        help_text="ID in the legacy system - maps directly to __KEY and UID in legacy system (which had identical values)",
                        max_length=50,
                        null=True,
                        unique=True,
                    ),
                ),
                (
                    "legacy_uid",
                    models.CharField(
                        blank=True,
                        help_text="UID in the legacy system",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Product name (maps to Bezeichnung in legacy system)",
                        max_length=255,
                    ),
                ),
                (
                    "name_en",
                    models.CharField(
                        blank=True,
                        help_text="Product name in English (maps to Bezeichnung_ENG in legacy system)",
                        max_length=255,
                    ),
                ),
                (
                    "short_description",
                    models.TextField(
                        blank=True,
                        help_text="Short product description (maps to Beschreibung_kurz in legacy system)",
                    ),
                ),
                (
                    "short_description_en",
                    models.TextField(
                        blank=True, help_text="Short product description in English"
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Full product description (maps to Beschreibung in legacy system)",
                    ),
                ),
                (
                    "description_en",
                    models.TextField(
                        blank=True, help_text="Full product description in English"
                    ),
                ),
                (
                    "keywords",
                    models.CharField(
                        blank=True, help_text="Search keywords", max_length=255
                    ),
                ),
                (
                    "dimensions",
                    models.CharField(
                        blank=True,
                        help_text="Product dimensions (LxWxH)",
                        max_length=50,
                    ),
                ),
                (
                    "weight",
                    models.IntegerField(
                        blank=True, help_text="Weight in grams", null=True
                    ),
                ),
                (
                    "list_price",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Retail price (maps to Laden price in legacy system)",
                        max_digits=10,
                    ),
                ),
                (
                    "gross_price",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Recommended retail price (maps to Empf. price in legacy system)",
                        max_digits=10,
                    ),
                ),
                (
                    "cost_price",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Cost price (maps to Einkauf price in legacy system)",
                        max_digits=10,
                    ),
                ),
                (
                    "stock_quantity",
                    models.IntegerField(default=0, help_text="Current stock quantity"),
                ),
                (
                    "min_stock_quantity",
                    models.IntegerField(
                        default=0, help_text="Minimum stock quantity before reordering"
                    ),
                ),
                (
                    "backorder_quantity",
                    models.IntegerField(default=0, help_text="Quantity on backorder"),
                ),
                (
                    "open_purchase_quantity",
                    models.IntegerField(
                        default=0, help_text="Quantity on open purchase orders"
                    ),
                ),
                (
                    "last_receipt_date",
                    models.DateField(
                        blank=True, help_text="Date of last stock receipt", null=True
                    ),
                ),
                (
                    "last_issue_date",
                    models.DateField(
                        blank=True, help_text="Date of last stock issue", null=True
                    ),
                ),
                (
                    "units_sold_current_year",
                    models.IntegerField(
                        default=0, help_text="Units sold in current year"
                    ),
                ),
                (
                    "units_sold_previous_year",
                    models.IntegerField(
                        default=0, help_text="Units sold in previous year"
                    ),
                ),
                (
                    "revenue_previous_year",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Revenue in previous year",
                        max_digits=12,
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        db_column="is_active",
                        default=True,
                        help_text="Whether the product is active",
                    ),
                ),
                (
                    "is_discontinued",
                    models.BooleanField(
                        default=False, help_text="Whether the product is discontinued"
                    ),
                ),
                (
                    "has_bom",
                    models.BooleanField(
                        default=False,
                        help_text="Whether the product has a bill of materials",
                    ),
                ),
                (
                    "is_one_sided",
                    models.BooleanField(
                        default=False, help_text="Whether the product is one-sided"
                    ),
                ),
                (
                    "is_hanging",
                    models.BooleanField(
                        default=False, help_text="Whether the product is hanging"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="Creation timestamp"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, help_text="Last update timestamp"
                    ),
                ),
                (
                    "variant_code",
                    models.CharField(
                        blank=True, help_text="Variant code", max_length=10
                    ),
                ),
                (
                    "legacy_sku",
                    models.CharField(
                        blank=True,
                        help_text="Legacy SKU (maps to alteNummer in Artikel_Variante)",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "base_sku",
                    models.CharField(
                        db_index=True,
                        help_text="Base SKU without variant",
                        max_length=50,
                    ),
                ),
                (
                    "legacy_familie",
                    models.CharField(
                        blank=True,
                        db_column="familie_",
                        help_text="Original Familie_ field from Artikel_Variante",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "is_verkaufsartikel",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this is a sales article (maps to Verkaufsartikel in Artikel_Variante)",
                    ),
                ),
                (
                    "release_date",
                    models.DateTimeField(
                        blank=True,
                        help_text="Release date (maps to Release_Date in Artikel_Variante)",
                        null=True,
                    ),
                ),
                (
                    "auslaufdatum",
                    models.DateTimeField(
                        blank=True,
                        help_text="Discontinuation date (maps to Auslaufdatum in Artikel_Variante)",
                        null=True,
                    ),
                ),
                (
                    "retail_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text='Retail price (maps to Preise.Coll[Art="Laden"].Preis in Artikel_Variante)',
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "wholesale_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text='Wholesale price (maps to Preise.Coll[Art="Handel"].Preis in Artikel_Variante)',
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "retail_unit",
                    models.IntegerField(
                        blank=True,
                        help_text='Retail packaging unit (maps to Preise.Coll[Art="Laden"].VE in Artikel_Variante)',
                        null=True,
                    ),
                ),
                (
                    "wholesale_unit",
                    models.IntegerField(
                        blank=True,
                        help_text='Wholesale packaging unit (maps to Preise.Coll[Art="Handel"].VE in Artikel_Variante)',
                        null=True,
                    ),
                ),
                (
                    "color",
                    models.CharField(
                        blank=True,
                        help_text="Color of the variant",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "size",
                    models.CharField(
                        blank=True,
                        help_text="Size of the variant",
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "material",
                    models.CharField(
                        blank=True,
                        help_text="Material composition",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "weight_grams",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Weight in grams",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "length_mm",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Length in millimeters",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "width_mm",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Width in millimeters",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "height_mm",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Height in millimeters",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "min_stock_level",
                    models.IntegerField(
                        blank=True,
                        help_text="Minimum stock level to maintain",
                        null=True,
                    ),
                ),
                (
                    "max_stock_level",
                    models.IntegerField(
                        blank=True,
                        help_text="Maximum stock level to maintain",
                        null=True,
                    ),
                ),
                (
                    "current_stock",
                    models.IntegerField(default=0, help_text="Current inventory level"),
                ),
                (
                    "reorder_point",
                    models.IntegerField(
                        blank=True,
                        help_text="Point at which to reorder inventory",
                        null=True,
                    ),
                ),
                (
                    "lead_time_days",
                    models.IntegerField(
                        blank=True,
                        help_text="Lead time for replenishment in days",
                        null=True,
                    ),
                ),
                (
                    "units_sold_year",
                    models.IntegerField(
                        default=0, help_text="Units sold in current year"
                    ),
                ),
                (
                    "is_featured",
                    models.BooleanField(
                        default=False, help_text="Whether this variant is featured"
                    ),
                ),
                (
                    "is_new",
                    models.BooleanField(
                        default=False, help_text="Whether this is a new variant"
                    ),
                ),
                (
                    "is_bestseller",
                    models.BooleanField(
                        default=False, help_text="Whether this is a bestselling variant"
                    ),
                ),
                (
                    "last_ordered_date",
                    models.DateField(
                        blank=True, help_text="Date of last customer order", null=True
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        help_text="Product category",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_products",
                        to="products.productcategory",
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        help_text="Parent product - maps to Familie_ field in Artikel_Variante which references __KEY in Artikel_Familie",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="variants",
                        to="products.parentproduct",
                    ),
                ),
            ],
            options={
                "verbose_name": "Variant Product",
                "verbose_name_plural": "Variant Products",
                "ordering": ["parent__name", "variant_code"],
            },
        ),
        migrations.CreateModel(
            name="ProductImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "external_id",
                    models.CharField(
                        help_text="ID from external image database", max_length=255
                    ),
                ),
                (
                    "image_url",
                    models.URLField(
                        help_text="URL to the full-size image", max_length=500
                    ),
                ),
                (
                    "thumbnail_url",
                    models.URLField(
                        blank=True,
                        help_text="URL to the thumbnail image",
                        max_length=500,
                        null=True,
                    ),
                ),
                (
                    "image_type",
                    models.CharField(
                        help_text='Type of image (e.g., "Produktfoto")', max_length=50
                    ),
                ),
                (
                    "is_primary",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this is the primary image for the product",
                    ),
                ),
                (
                    "is_front",
                    models.BooleanField(
                        default=False,
                        help_text='Whether this image is marked as "front" in the source system',
                    ),
                ),
                (
                    "priority",
                    models.IntegerField(
                        default=0,
                        help_text="Display priority (lower numbers shown first)",
                    ),
                ),
                (
                    "alt_text",
                    models.CharField(
                        blank=True,
                        help_text="Alternative text for the image",
                        max_length=255,
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Additional metadata from the source system",
                    ),
                ),
                (
                    "last_synced",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="When this image record was last updated",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        blank=True,
                        help_text="Product this image belongs to",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="images",
                        to="products.variantproduct",
                    ),
                ),
            ],
            options={
                "verbose_name": "Product Image",
                "verbose_name_plural": "Product Images",
                "ordering": ["priority", "id"],
                "constraints": [
                    models.UniqueConstraint(
                        condition=models.Q(("product__isnull", False)),
                        fields=("product", "external_id"),
                        name="unique_product_image",
                    )
                ],
            },
        ),
    ]

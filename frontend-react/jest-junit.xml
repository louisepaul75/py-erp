<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="68" failures="0" errors="0" time="2.139">
  <testsuite name="AdminRoute Component" errors="0" failures="0" skipped="0" timestamp="2025-03-19T23:41:56" time="0.722" tests="5">
    <testcase classname="AdminRoute Component renders children when user is admin" name="AdminRoute Component renders children when user is admin" time="0.031">
    </testcase>
    <testcase classname="AdminRoute Component renders loading spinner when authentication status is loading" name="AdminRoute Component renders loading spinner when authentication status is loading" time="0.002">
    </testcase>
    <testcase classname="AdminRoute Component does not render children when user is authenticated but not admin" name="AdminRoute Component does not render children when user is authenticated but not admin" time="0.002">
    </testcase>
    <testcase classname="AdminRoute Component does not render children when user is not authenticated" name="AdminRoute Component does not render children when user is not authenticated" time="0.001">
    </testcase>
    <testcase classname="AdminRoute Component redirects to unauthorized page when user is not admin" name="AdminRoute Component redirects to unauthorized page when user is not admin" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="test-utils" errors="0" failures="0" skipped="0" timestamp="2025-03-19T23:41:56" time="0.772" tests="2">
    <testcase classname="test-utils should pass" name="test-utils should pass" time="0.003">
    </testcase>
    <testcase classname="custom render renders components correctly" name="custom render renders components correctly" time="0.021">
    </testcase>
  </testsuite>
  <testsuite name="Switch" errors="0" failures="0" skipped="0" timestamp="2025-03-19T23:41:56" time="0.818" tests="6">
    <testcase classname="Switch renders correctly" name="Switch renders correctly" time="0.062">
    </testcase>
    <testcase classname="Switch applies custom className" name="Switch applies custom className" time="0.009">
    </testcase>
    <testcase classname="Switch can be checked and unchecked" name="Switch can be checked and unchecked" time="0.022">
    </testcase>
    <testcase classname="Switch respects the disabled state" name="Switch respects the disabled state" time="0.014">
    </testcase>
    <testcase classname="Switch passes additional props to the underlying component" name="Switch passes additional props to the underlying component" time="0.001">
    </testcase>
    <testcase classname="Switch has the correct styles based on state" name="Switch has the correct styles based on state" time="0.012">
    </testcase>
  </testsuite>
  <testsuite name="Button Component" errors="0" failures="0" skipped="0" timestamp="2025-03-19T23:41:56" time="0.827" tests="6">
    <testcase classname="Button Component renders correctly with default props" name="Button Component renders correctly with default props" time="0.055">
    </testcase>
    <testcase classname="Button Component renders with different variants" name="Button Component renders with different variants" time="0.037">
    </testcase>
    <testcase classname="Button Component renders with different sizes" name="Button Component renders with different sizes" time="0.022">
    </testcase>
    <testcase classname="Button Component renders as a child component when asChild is true" name="Button Component renders as a child component when asChild is true" time="0.006">
    </testcase>
    <testcase classname="Button Component passes additional props to the button element" name="Button Component passes additional props to the button element" time="0.001">
    </testcase>
    <testcase classname="Button Component combines custom className with buttonVariants" name="Button Component combines custom className with buttonVariants" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="Footer" errors="0" failures="0" skipped="0" timestamp="2025-03-19T23:41:56" time="0.946" tests="9">
    <testcase classname="Footer renders the copyright information" name="Footer renders the copyright information" time="0.076">
    </testcase>
    <testcase classname="Footer displays the version number from the health API" name="Footer displays the version number from the health API" time="0.038">
    </testcase>
    <testcase classname="Footer shows a loading indicator while fetching health status" name="Footer shows a loading indicator while fetching health status" time="0.003">
    </testcase>
    <testcase classname="Footer shows the DEV MODE bar in development environment" name="Footer shows the DEV MODE bar in development environment" time="0.005">
    </testcase>
    <testcase classname="Footer toggles the dev bar when clicking the button" name="Footer toggles the dev bar when clicking the button" time="0.023">
    </testcase>
    <testcase classname="Footer displays git branch information when available" name="Footer displays git branch information when available" time="0.012">
    </testcase>
    <testcase classname="Footer handles API fetch errors gracefully" name="Footer handles API fetch errors gracefully" time="0.003">
    </testcase>
    <testcase classname="Footer updates CSS variables when dev bar is expanded" name="Footer updates CSS variables when dev bar is expanded" time="0.06">
    </testcase>
    <testcase classname="Footer displays API status correctly" name="Footer displays API status correctly" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="Navbar" errors="0" failures="0" skipped="0" timestamp="2025-03-19T23:41:56" time="0.952" tests="8">
    <testcase classname="Navbar renders without crashing" name="Navbar renders without crashing" time="0.043">
    </testcase>
    <testcase classname="Navbar displays the correct navigation links" name="Navbar displays the correct navigation links" time="0.017">
    </testcase>
    <testcase classname="Navbar toggles the user dropdown when clicked" name="Navbar toggles the user dropdown when clicked" time="0.015">
    </testcase>
    <testcase classname="Navbar toggles the test menu dropdown when clicked" name="Navbar toggles the test menu dropdown when clicked" time="0.014">
    </testcase>
    <testcase classname="Navbar toggles the mobile menu when clicked" name="Navbar toggles the mobile menu when clicked" time="0.11">
    </testcase>
    <testcase classname="Navbar calls logout when logout button is clicked" name="Navbar calls logout when logout button is clicked" time="0.031">
    </testcase>
    <testcase classname="Navbar displays different settings text for admin users" name="Navbar displays different settings text for admin users" time="0.01">
    </testcase>
    <testcase classname="Navbar toggles theme when theme toggle is clicked" name="Navbar toggles theme when theme toggle is clicked" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="ConnectionStatusAnimation" errors="0" failures="0" skipped="0" timestamp="2025-03-19T23:41:57" time="0.208" tests="9">
    <testcase classname="ConnectionStatusAnimation renders without crashing" name="ConnectionStatusAnimation renders without crashing" time="0.008">
    </testcase>
    <testcase classname="ConnectionStatusAnimation applies the correct class name" name="ConnectionStatusAnimation applies the correct class name" time="0.001">
    </testcase>
    <testcase classname="ConnectionStatusAnimation creates the animation for healthy status" name="ConnectionStatusAnimation creates the animation for healthy status" time="0.001">
    </testcase>
    <testcase classname="ConnectionStatusAnimation creates the animation for warning status" name="ConnectionStatusAnimation creates the animation for warning status" time="0.002">
    </testcase>
    <testcase classname="ConnectionStatusAnimation creates the animation for error status" name="ConnectionStatusAnimation creates the animation for error status" time="0.003">
    </testcase>
    <testcase classname="ConnectionStatusAnimation creates the animation for unknown status" name="ConnectionStatusAnimation creates the animation for unknown status" time="0.001">
    </testcase>
    <testcase classname="ConnectionStatusAnimation cleans up animation on unmount" name="ConnectionStatusAnimation cleans up animation on unmount" time="0.003">
    </testcase>
    <testcase classname="ConnectionStatusAnimation handles missing canvas context gracefully" name="ConnectionStatusAnimation handles missing canvas context gracefully" time="0.001">
    </testcase>
    <testcase classname="ConnectionStatusAnimation does not crash when transaction values are out of normal ranges" name="ConnectionStatusAnimation does not crash when transaction values are out of normal ranges" time="0.014">
    </testcase>
  </testsuite>
  <testsuite name="LogoutButton Component" errors="0" failures="0" skipped="0" timestamp="2025-03-19T23:41:57" time="0.224" tests="4">
    <testcase classname="LogoutButton Component renders correctly with default state" name="LogoutButton Component renders correctly with default state" time="0.017">
    </testcase>
    <testcase classname="LogoutButton Component calls logout.mutate when clicked" name="LogoutButton Component calls logout.mutate when clicked" time="0.015">
    </testcase>
    <testcase classname="LogoutButton Component shows loading state when logout is pending" name="LogoutButton Component shows loading state when logout is pending" time="0.003">
    </testcase>
    <testcase classname="LogoutButton Component has correct styling" name="LogoutButton Component has correct styling" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="test-utils" errors="0" failures="0" skipped="0" timestamp="2025-03-19T23:41:57" time="0.304" tests="1">
    <testcase classname="test-utils should pass" name="test-utils should pass" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="LanguageSelector" errors="0" failures="0" skipped="0" timestamp="2025-03-19T23:41:57" time="0.368" tests="3">
    <testcase classname="LanguageSelector renders correctly with default language" name="LanguageSelector renders correctly with default language" time="0.013">
    </testcase>
    <testcase classname="LanguageSelector opens dropdown when clicked" name="LanguageSelector opens dropdown when clicked" time="0.012">
    </testcase>
    <testcase classname="LanguageSelector changes language when an option is selected" name="LanguageSelector changes language when an option is selected" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="LoadingSpinner Component" errors="0" failures="0" skipped="0" timestamp="2025-03-19T23:41:57" time="0.2" tests="5">
    <testcase classname="LoadingSpinner Component renders with default (medium) size" name="LoadingSpinner Component renders with default (medium) size" time="0.003">
    </testcase>
    <testcase classname="LoadingSpinner Component renders with small size" name="LoadingSpinner Component renders with small size" time="0.001">
    </testcase>
    <testcase classname="LoadingSpinner Component renders with large size" name="LoadingSpinner Component renders with large size" time="0.001">
    </testcase>
    <testcase classname="LoadingSpinner Component has correct border styling" name="LoadingSpinner Component has correct border styling" time="0.001">
    </testcase>
    <testcase classname="LoadingSpinner Component is wrapped in a flex container with centered content" name="LoadingSpinner Component is wrapped in a flex container with centered content" time="0">
    </testcase>
  </testsuite>
  <testsuite name="ProtectedRoute Component" errors="0" failures="0" skipped="0" timestamp="2025-03-19T23:41:57" time="0.204" tests="4">
    <testcase classname="ProtectedRoute Component renders children when user is authenticated" name="ProtectedRoute Component renders children when user is authenticated" time="0.002">
    </testcase>
    <testcase classname="ProtectedRoute Component renders loading spinner when authentication status is loading" name="ProtectedRoute Component renders loading spinner when authentication status is loading" time="0.001">
    </testcase>
    <testcase classname="ProtectedRoute Component does not render children when user is not authenticated" name="ProtectedRoute Component does not render children when user is not authenticated" time="0.006">
    </testcase>
    <testcase classname="ProtectedRoute Component redirects to login page when user is not authenticated" name="ProtectedRoute Component redirects to login page when user is not authenticated" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Label" errors="0" failures="0" skipped="0" timestamp="2025-03-19T23:41:56" time="1.24" tests="6">
    <testcase classname="Label renders correctly" name="Label renders correctly" time="0.017">
    </testcase>
    <testcase classname="Label applies custom className" name="Label applies custom className" time="0.002">
    </testcase>
    <testcase classname="Label can be rendered with htmlFor attribute" name="Label can be rendered with htmlFor attribute" time="0.002">
    </testcase>
    <testcase classname="Label handles additional props" name="Label handles additional props" time="0.003">
    </testcase>
    <testcase classname="Label renders children as expected" name="Label renders children as expected" time="0.002">
    </testcase>
    <testcase classname="Label includes correct accessibility styles for disabled peer elements" name="Label includes correct accessibility styles for disabled peer elements" time="0.001">
    </testcase>
  </testsuite>
</testsuites>
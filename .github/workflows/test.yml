name: Test and Lint

on:
  # This workflow is primarily used for direct testing of PRs/branches
  push:
    branches: [ main, develop, 'release/**', 'feature/**', 'bugfix/**', 'hotfix/**' ]
  pull_request:
    branches: [ main, develop, 'release/**' ]
  # Enable reuse as a standalone workflow
  workflow_call:

jobs:
  # Linting job - checks code quality
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'
        architecture: 'x64'  # Explicitly specify architecture
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install flake8==7.0.0 mypy==1.5.1
        python -m pip list
        if [ -f requirements/requirements.dev.txt ]; then python -m pip install -r requirements/requirements.dev.txt; fi
        if [ -f requirements-dev.txt ]; then python -m pip install -r requirements-dev.txt; fi
        if [ -f requirements/requirements.prod.txt ]; then python -m pip install -r requirements/requirements.prod.txt; fi

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        python -m flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings
        python -m flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Check types with mypy
      run: |
        python -m mypy .

  # 1. General Django framework functionality tests
  django-framework-tests:
    runs-on: ubuntu-latest
    needs: [lint]
    
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: pyerp_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
        pip install -r requirements/requirements.prod.txt || true
        pip install -r requirements/requirements.dev.txt || true
    
    - name: Run Django framework tests
      env:
        DJANGO_SETTINGS_MODULE: pyerp.settings.testing
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/pyerp_test
      run: |
        pytest tests/unit/test_core_validators.py --cov=pyerp.core --cov-report=xml:coverage-framework.xml
        
    - name: Upload results to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        slug: Wilhelm-Schweizer/pyERP
        flags: django-framework
        name: django-framework-coverage

  # Add remaining jobs as needed... 